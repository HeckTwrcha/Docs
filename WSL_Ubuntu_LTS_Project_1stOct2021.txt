-----------------------------
Author : Twrcha AD
email  : twrcha@outlook.com
version: 0.1
created: 1st-Oct-2021
updated: 1st-Oct-2021
disply : 1920 x 1080
-----------------------------
@@@ DISCLAIMER: this file is a collection of best practises and know-how gathered from various sources, tested and verified by this document author within the subject linux environment for      the best of the author's knowldage during the document dated period. meanwhile there are few un-verified commands/procedures which are highlighted/marked by the auther, however     discrepancy still may occurs, due to the fact of no 100% matched environments. @@@ 





                                      ############################################################################################################
                                      # OS version, Microsoft Windows_Insider_Program:                                                           #
                                      # (Windows11_pro_developer_version_build_22468.1000, Windows Feature Experience Pack 1000.22468.1000.0)    #
                                      # WSL-KVM:(GNU/linux kernel 5.10.43.3-Microsoft-standard-WSL2 x86_64 #1 SMP Wed Jun 16 23:47:55 UTC 2021)  #
                                      # Linux CLI & ext4.vhdx image:(Ubuntu_20.04.3_LTS_Focal_Fossa)                                             #
                                      # LSB release: core-11.1.0ubuntu2-noarch:printing-11.1.0ubuntu2-noarch:security-11.1.0ubuntu2-noarch.      #
                                      # bash:(GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu)                                          #
                                      # GCC:(gcc version 10.3.0)/Qt:(5.12.8-LTS)/Powershell:(pwsh.exe v7.2.0-Preview10)/WSLg-preview-1.0.27      #
                                      # Desktop-Environment(GUI):(GNU/linux Ubuntu 20.04.3-LTS-Focal-Fossa, kernel 5.10.69-generic)              #
                                      # Ubuntu  gnome-3.36                                                                                       #
                                      # Ubuntu  DDE (Deepin Desktop Environment)                                                                 #
                                      # Kubuntu KDE-Plasma-5.18.4-LTS                                                                            #
                                      # Xubuntu Xfce4.6                                                                                          #
                                      # Lubuntu LXDE-0.10.1/LXQt (Based on Openbox-3.6 SWM for XWS)                                              #
                                      # Fedora-34-Workstation/Desktop gnome-40                                                                   #
                                      # openSUSE-Leap-15.3 gnome-3.34                                                                            #
                                      ############################################################################################################


# (WSL) is Microsoft's version of Linux (KVM) Kernel-based Virtual Machine with user level process emulation.
  This will allow the process to run in a different platform & architecture environment.
# (WSL/WSL1) Windows Subsystem for Linux: is a compatibility layer for running Linux binary executables (in ELF64 format) natively on Windows. it translates Linux instructions to Windows
  instruction using "Pico Processeson" in Kernel mode, eliminating the need for a Linux Kernel with direct use of the host file system through VolFS, DrvFS and some parts of the hardware
  such as the network, which guarantees interoperability. Web servers for example, can be accessed through the same interfaces and IP addresses configured on the host, and shares the same
  restrictions on the use of ports that require administrative permissions, or ports already occupied by other applications. Furthermore, there is no emulation/virtualisation involved.
  Released on 2nd August 2016 with (Windows10_x64-version-1607 or 1083 or later, while there is No server release of it).

# (LXSS Manager & LxssManagerUser_f7c4a) Services are the services in charge of interacting with the linux subsystem (through the drivers lxss.sys and lxcore.sys), and the way that
  Bash.exe launches the Linux processes, as well as handling the Linux system calls and the binary locks during their execution. the LXSS Manager service supports running native ELF
  binaries. it provides the infrastructure necessary for ELF binaries to run on Windows.

# (WSL2) is Microsoft's newly developed open-source Linux Kernel, a complete Linux Kernel with full-ELF64 stack, hence it enables Full Linux System call capabilities. It runs as a
  lightweight virtual Machine (VM) over Windows Virtual Machine Platform (WVMP) extension of Windows_x64 Kernel. released in 12th June 2019.
  Available on (Windows10_x64_version-1903-Build-18362 & Windows10_ARM64_version-2004-Build-19041 & Windows-Server-2019_x64_version-1709 or higher).

# WSL2 does not replace WSL. It just runs alongside it. This means you can run Linux installs with a combination of different versions. You're able to set either as default as well as
  setting a version specifically to each Linux distro you have on your PC.

# developers don't need to change anything in their published distributions. WSL2 settings can be tweaked by the WSL global configuration, contained in an INI file named ".wslconfig"
  in the User Profile folder.

# The WSL-Linux-Distro-VM is located under the path below as an ".vhdx" Container-File/Virtual-Disk.
  C:\Users\<username>\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\LocalState\ext4.vhdx
  C:\Users\<username>\AppData\Local\Packages\46932SUSE.openSUSELeap15.2_022rs5jcyhyac\LocalState\ext4.vhdx
  C:\Users\<username>\AppData\Local\Packages\46932SUSE.openSUSE-Leap-15-1_022rs5jcyhyac\LocalState\ext4.vhdx

# The ext4 journaling file system or fourth extended filesystem is a journaling file system for Linux. it is also the default filesystem for Debian, Ubuntu, google & Android.

# the WSL linux distro access the host file system through the "9P protocol" (Plan 9 Filesystem Protocol or Styx). cross-platform filesystem performance issues due to "9P".

# WSL2's memory usage grows and shrinks as you use it. When a process frees memory this is automatically returned to Windows. However, as of right now WSL 2 does not yet release cached
  pages in memory back to Windows until the WSL instance is shut down. If you have long running WSL sessions, or access a very large amount of files,
  this cache can take up memory on Windows. We are tracking the work to improve this experience on the WSL Github repository issue 4166.

# (fork) In software engineering, a project fork happens when developers take a copy of source code from one software package and start independent development on it, creating a distinct
  and separate piece of software.

# Windows 10 filesystem and drives can be accessed and handled within the WSL2 console interface itself. The drive partitions are mounted at launch within the path of /mnt/. For example,
  the logical drive "C:\" mount at "/mnt/c".

# WSL2 is currently limited to the CLI. GUI is not natively supported. Although it is possible to run few number of GUI/Xserver applications (like GWSL) with small tweaks.

# (ELF64) Executable and Linkable Format: By design, the ELF format is flexible, extensible, and cross-platform. it supports different endiannesses and address sizes so it does not exclude
  any particular (CPU) or instruction set architecture. This has allowed it to be adopted by many different operating systems on many different hardware platforms.

# (WVMP) Windows Virtual Machine Platform: is a (Subset) of Microsoft Hypervisor-V which is a Type1-Hypervisor running on Windows_x64 Kernel level.

# Microsoft Hyper-V Role: is a Type1-Hypervisor with full OS capability, with its subsystems runs in Windows_x64 platform Kernel mode. it coverts the Windows user mode layer to a vitual
  management OS. It uses hardware-assisted virtualization. meaning that, virtualization is supported at the CPU level by Intel VT or by AMD-V. It is a built-in feature, that needs to be
  turned on in (Windows7_x64_Pro & Enterprise or later & Windows-Server-2008_x64 & 2008-R2 editions or later). 

# Linux distribution (distro): an operating system made from a software collection that is based upon the Linux kernel and, often, a package management system. different brands and
  versions of Linux OS (RedHat, Fedora, Ubuntu, Kubuntu, OpenSUSE Tumbleweed & leap, Debian, KALI, CentOS, Alpine, etc.). There are over 600 Linux distros and about 500 in active
  development.
   
# Linux licenseing: Free and Open-Source Software (FOSS), which is seen by free & Open source community as one of their "social responsibilities", "duty towards society" and a "social
  obligation". pro-sharing norms might spread to influence other producers and projects.
# Free software licenses can be divided into two broad categories: copyleft licenses (like the GPL), which require derivatives of the software to be licensed under the same terms; and
  permissive licenses (like the MIT/X11 license), which allow the software to be reused in any project, even closed-source projects (No Source code provided). 
# Open Source (GNU GPLv3).

# (GPL) - General Public License part of the "GNU project" Sep 1983 by Richard Matthew Stallman aka(rms) the founder of the Free Software Foundation (FSF).
# (GNU) - "GNU's not Unix!" (a recursive acronym   meaning).
# (GCC) - "GNU Compiler Collection" is an optimizing compiler produced by the GNU Project supporting various programming languages, hardware architectures and operating systems. 
# (Copyleft) is a GPL license: the practice of granting the right to freely distribute and modify intellectual property with the requirement that the same rights be preserved in
  derivative works created from that property. In the form of licenses it can be used to maintain copyright conditions for works ranging from computer software, to documents, art,
  scientific discoveries and even certain patents.
# (Permissive) free software license, also known as "Copycenter" or "BSD-like or "BSD-style" license: is a free-software license with only minimal restrictions on how the software can be
  used, modified, and redistributed, usually including a warranty disclaimer. 
# (Pushover) a free license used with small programs, below 300 lines of code.
# (LGPL) is a 'weak copyleft', allowing licensed works to be used in closed-source works, but requiring improvements to the work itself to be released under a copyleft license.
# (MPL)
# Apache
# free-rider is someone who uses an Open Source software project without contributing to it.

# (LightDM) is the display manager running in Ubuntu up to version 16.04 LTS. While it has been replaced by (GDM) in later Ubuntu releases, LightDM is still used by default in the latest
  release of several Ubuntu flavors. LightDM starts the X servers, user sessions and greeter (login screen).
# (bash) born again shell: is the first FOSS Unix/linux shell-interpreter based on POSIX, as (CLI) replacment for the proprietary Unix (bsh). it became the default shell for many
  Unix/Linux Distro's such as Solaris, RedHat, Debian, Ubuntu, OpenSUSE.
# (zsh) z-shell is used by Apple MacOS since 2019.
# X Window System (X11, or simply X) is a windowing system (GUI) for bitmap displays, common on Unix-like operating systems.
# Linux/Unix x64 packages are taged as "amd64" because they made the 1st 64bit CPU architecture.
# Ubuntu 20.04 LTS from Microsoft app store includes a built-in Python3.8.x compiler.  
# "Sudo" is root previlage for that specific following command.
# (apt) is a commandline package manager and provides commands for searching and managing as well as querying information about packages. It provides the same functionality as the
  specialized APT tools, like "apt-get" and "apt-cache".

# .RPM package is Ubuntu supported automatic installation package.
# .tar.gz is a g-zipped tar package also called tarball.
# .zip is a zipped application package.
# *-bin.tar.gz is a binary package without the source code.
# *-src.tar.gz is a binary package along with the source code.

# (AAA) stands for "Authentication - Authorisation - Access" and refers to the user access management principle and the related AAA server with "TACACS+" or "RADIUS" security protocols.
# (TACACS+) "Terminal Access Controller Access Control System" uses (TCP) and all data transmitted are encrypted and it separates the three AAA operation stages for a better security.
# (RADIUS) "Remote Authentication Dial-In User Service": based on the IEEE802.1X standard, it runs in the application layer (7) and uses either (UDP or TCP) while encrypts only the user
  password and combines the Authentication and Authorization starges of the AAA. Therefore it is less secured than TACACS+ .
 
# to verify the dwonloaded package integrity before instalation, you have to download the hash file Sha512 & asc (PGP signature file) which is the package encryption public key.

# Pretty Good Privacy (PGP) an encryption program that provides cryptographic privacy and authentication for data communication. it is used for signing, encrypting, and decrypting texts,
  emails, files, directories, and whole disk partitions and to increase the security of e-mail communications.
# TLS-v1.2 or above is requirment to access the internet.
# SSL-v or above is requirment to access the internet.

# from 2016 onward, SHA-2 is the new standard. all SSL/TLS certificates today must be using that signature at a minimum.
# SHA-2: A family of two similar hash functions, with different block sizes, known as SHA-256 and SHA-512. They differ in the word size; SHA-256 uses 32-byte words where SHA-512 uses 64-
  byte words. There are also truncated versions of each standard, known as SHA-224, SHA-384, SHA-512/224 and SHA-512/256. These were also designed by the NSA.
# SHA "Secure Hash Algorithms" is a family of cryptographic hash functions published by the National Institute of Standards and Technology (NIST). SHA-2 standard is "FIPS PUB 180-2".
# SHA-2 will likely remain in use for at least five years. However, some unexpected attack against the algorithm could be discovered which would prompt an earlier transition.
# SHA-256 claims 128-bit collision resistance, SHA-512 claims 256-bit collision resistance. SHA-512 is generally faster on 64-bit processors, SHA-256 faster on 32-bit processors.
  From a non-security perspective, the reasons to choose SHA-256 over the longer digests are more easily apparent: it's smaller, requiring less bandwidth to store and transmit,
  less memory and in many cases less processing power to compute. (There are cases where SHA-512 is faster and more efficient).
# SHA-256 is just as secure as SHA-512 when it comes to to "Collisions Attacks" however SHA-512 is much more secure when it comes to "Length Extension Attacks".
# SHA-3: A hash function formerly called Keccak, chosen in 2012 after a public competition among non-NSA designers. It supports the same hash lengths as SHA-2, and its internal structure
  differs significantly from the rest of the SHA family. NIST has updated Draft FIPS Publication 202, SHA-3 Standard separate from the Secure Hash Standard (SHS).

# (SysV) or System V: is one of the first and traditional init system managers for the UNIX/Linux operating system. Init is the first process started by the kernel during system boot,
  and is a parent process for everything. with new versions it has been replaced by other init systems such as (launchd, Service Management, systemd and Upstart).
# (Upstart) is an event-based replacement for the /sbin/init daemon.
# (systemd) is a current most adopted init system & service manager for Linux distributions systems, and it uses socket and D-Bus activation for starting services providing aggressive
  parallelisation capabilities and Keeps track of processes using Linux "cgroups".
# (NuGET) is the package management tool for the .NET and it is similar to PowerShellGet, MSI packages which support several commands and packages to work with PowerShell.

## A repository is a collection of files that has information about various software, their versions and some other details like the checksum.
   Each Ubuntu version has its own official set of four repositories:

  # Main       – Canonical-supported free and open-source software.
  # Universe   – Community-maintained free and open-source software.
  # Restricted – Proprietary drivers for devices.
  # Multiverse – Software restricted by copyright or legal issues.

# Ubuntu's Offical online repository's URL "http://archive.ubuntu.com/ubuntu/dists/" .
# Microsoft linux packages repository URL;
  deb https://packages.microsoft.com/ubuntu/20.04/prod/ focal main
  deb-src https://packages.microsoft.com/ubuntu/20.04/prod/ focal main

# This information is stored in the sources.list file in the directory /etc/apt. If you look at its content, you’ll see that it has the URL of the repositories.
  The lines with # at the beginning are ignored.
# the added repositories are located under "/var/lib/apt/lists". 
# Now when you run the command sudo apt update, your system uses APT tool to check against the repo and stores the information about the software and their version in a cache.
  When you use the command sudo apt install package_name, it uses the information to get that package from the URL where the actual software is stored.
# Ubuntu provides a platform called Launchpad that enables software developers to create their own repositories. An end user i.e. you can add the PPA repository to your sources.
  list and when you update your system, your system would know about the availability of this new software and you can install it using the standard sudo apt install command like this.
# PPA stands for Personal Package Archive. The PPA allows application developers and Linux users to create their own repositories to distribute software. With PPA,
  you can easily get newer software version or software that are not available via the official Ubuntu repositories.
# There are three places to check when troubleshooting online repositories update issues:
  /etc/apt/sources.list file, this include the offical ubuntu online archive & other added non-PPA repositories using apt-add-repository. 
  /etc/apt/sources.list.d/ folder, (if you have systemd installed) here you will find different .list files with both PPA & non-PPA repositories URL's.
  /etc/apt/apt.conf.d/sources.list file, 
  /var/lib/apt/lists/ folder, holds all the repositories cache (PPA & non-PPA). if you have a problem clear this cahce and remove the bad source from the first two locations above
  before running apt update again.   

# (pip) or (pip3) - stands for "PyPI, Python-Package-Installer" it is a command used to install Python packages from the Python Package Index (PyPI) online repository. The pip command can     be installed as part of the package manager for your Linux distro.
# (PyPI) - “Python Package Index” and it is the official central library for all the python packages, which means it consists of all the registered and licensed python packages.
# pip is used by Python2.x and earlier versions while pip3 is used by Python3.x , pip is the apt equivalent for python.  
# Python3: WARNING: The "easy_install" command is deprecated and will be removed in a future version.
# download and install the free Windows x64 version of Anaconda3 "Anaconda Individual Edition" which covers a wide range of open source libraries/repositories for (Python, C++, C#, Java,
  ML, Data science, Analytics, Data Mining, data modeling, etc.) and update through x64 Powershell 7.x (PS).
# install Anaconda3 in your WSL2 -Ubuntu 20.x environment.

# (LTS) stands for Long Term Support,
  Ubuntu produces a new Ubuntu Desktop and Ubuntu Server release every six months. That means you'll always have the latest and the best applications in the open source world.
  Ubuntu is designed with security in mind. You get free security updates for at least 9 months on the desktop and server.
  A new LTS version is released every two years. In previous releases, a Long Term Support (LTS) version had three years support on Ubuntu (Desktop) and five years on Ubuntu Server.
  Starting with Ubuntu 12.04 LTS, both versions received five years support. There is no extra fee for the LTS version.

# (LSB) Linux Standard Base: is a joint project by several Linux distributions under the organizational structure of the Linux Foundation to standardize the software system structure,
  including the Filesystem Hierarchy Standard used in the Linux kernel. ##
# (.lock) file you mention is used to avoid running more than one instance of any software able to add packages (apt-get, aptitude, synaptic, ...).
  This is necessary because the list of installed software is saved in DB file. Having more than one process accessing this DB will lead to corruption into it and break your installed
  software DB. Lock files are created by a program when it is necessary to have only one instance of this program running at the same time.
  Generally, this is to avoid that local files/DB are accessed concurrently because this may corrupt them.
# (GiB) Gibibytes: is a standard unit used in the field of data processing and transmission and is defined as base 1024 rather than base 1000. ##
# There are different tools that can be used to create a bootable USB device, here are few opensource utilities/commands (dd command & Mkusb toolset) as linux CLI commands, while
  there are many GUI utilities with various capabilities and OS/filesystem support. for example (Rufus, UNetbootin, Universal-USB-Installer, Multi-writer, etc.). ##
# The “static-hostname" is the traditional hostname, which can be chosen by the user.
  The “pretty-hostname" is a free-form UTF8 host name for presentation to the user. ##
# Note that while DNS allows domain name up to 255 characters, the hostname in Linux is limited to 64 characters only. ##
# The static-hostname is stored in "/etc/hostname" file, while pretty-hostname and icon-name are stored in the "/etc/machine-info" file. ##
# your distro "/etc/apt/sources.list" file containes a list of the standard online repositories and whatever your have added/modified afterward.
# Files and directories whose names begin with a dot "." by default are not displayed in directory listings by the standard command ls.
  Therefore, they are traditionally used to store settings, preferences, etc.. Many graphical file browsers ignore the convention of hiding file names beginning with a ".",
  so it is not necessarily correct any longer to call these files "hidden". 
# there are also two special directory names in this class: the directory named simply "." is an alias for the same directory in which it appears (a self reference),
  and the directory named ".." refers to the parent directory of ".".
# get-pip.py Python2 pip:
  DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. upgrade your Python to at least v3.6. knowing that pip 21.0 has dropped support for Python 2.7 in January 2021.
  More details about Python2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.
# (SNI) Server Name Indication: extension to TLS as part of HTTPS communication.
# UbuntuDDE Remix 21.04: is a Remix flavor of Ubuntu system with Deepin Desktop Environment (DDE). UbuntuDDE is a linux distribution based on Ubuntu with the most beautiful desktop
  environment. Its initial release is UbuntuDDE Remix 20.04 focal based on Ubuntu 20.04 LTS focal and is supported by the UbuntuDDE community. 
# (Playonlinux) which is based on "wine" is a free tool which facilitate/run Microsoft Windows based apps and games on linux.
# (Crossover) is similar to Playonlinux but it is proprietary (not free).
# localhost is 127.0.0.1, while 172.16.0.0/12 is the default space (172.16.0.0 - 172.31.255.255) for WSL2.     


-------------------------------------------------
 Windows10 name resolution DNS/NETBIOS/ARP      :
-------------------------------------------------

## WSL2 shares the same hostname with its Windows10 host machine which can cause name resolution issues for both.
## You should NOT try and paste your new hosts file over the top of an existing hosts file – it won’t work. Make sure you rename the original hosts file.
## "C:\Windows\System32\drivers\etc\hosts" Windows hosts file path. once finished editing, fulsh the DNS cache on the host machine "ipconfig /flushdns" to load the new settings.
## "/etc/hosts" hosts file location on WSL. 
## make sure to leave one last empty line in the hosts file.
## Note that you cannot use the hosts file for https, only for http, so you’ll need to test your new server without SSL and then switch to https once happy.
## the IP "127.0.0.1" represents "localhost" by default.
## Things that normally go wrong:
   Trying to edit the hosts file in C:\Windows\System32\drivers\etc .
   Trying to paste over the hosts file in C:\Windows\System32\drivers\etc .
   Trying to edit the new hosts file with anything other than Windows Notepad.
   Leaving the new hosts file as a text file, without removing the extension.
   Forgetting the final empty line in the hosts file.
   Expecting to be able to access an encrypted address (https://) with the hosts file.
   Performing any of this as a non admin user.
   Using a security app that blocks access to the hosts file, e.g. “Webroot”.

## Nodes: When configuring TCP/IP on a client, one of the options that you may see (depending on the installation) is the node type. The node type refers to how the client finds a domain
   controller to service its logon requests.
   
   There are four node types in TCP/IP:
   ------------------------------------
   B-node (broadcast node): When a client needs to find a domain controller, it will perform a broadcast. The first domain controller to respond will be handed the job of servicing the
          logon request.
   P-node (point-to-point node): In this environment, name queries go directly to the WINS server.
   M-node (multi-homed node): An m-node environment uses b-node first and then—if necessary—p-node to resolve names.
   H-node (hybrid node): An h-node environment uses p-node first and then b-node if the name service is unavailable. ##


## (base) PS C:\Users\ardal> ipconfig /all

   Windows IP Configuration

   Host Name . . . . . . . . . . . . : wsl-node01                                                     # Windows 10 & WSL Hostname.
   Primary Dns Suffix  . . . . . . . :
   Node Type . . . . . . . . . . . . : Hybrid
   IP Routing Enabled. . . . . . . . : No
   WINS Proxy Enabled. . . . . . . . : No
   DNS Suffix Search List. . . . . . : home


## Ethernet adapter vEthernet (WSL):

   Connection-specific DNS Suffix  . :
   Description . . . . . . . . . . . : Hyper-V Virtual Ethernet Adapter #3
   Physical Address. . . . . . . . . : 00-15-5D-BB-3B-D0
   DHCP Enabled. . . . . . . . . . . : No
   Autoconfiguration Enabled . . . . : Yes
   Link-local IPv6 Address . . . . . : fe80::65d5:e500:a479:4fdf%56(Preferred)
   IPv4 Address. . . . . . . . . . . : 172.20.48.1(Preferred)                                          # WSL VM IP.
   Subnet Mask . . . . . . . . . . . : 255.255.240.0
   Default Gateway . . . . . . . . . :
   DHCPv6 IAID . . . . . . . . . . . : 939529565
   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-27-D9-90-E3-E4-A4-71-E2-17-CE
   DNS Servers . . . . . . . . . . . : fec0:0:0:ffff::1%1
                                       fec0:0:0:ffff::2%1
                                       fec0:0:0:ffff::3%1
   NetBIOS over Tcpip. . . . . . . . : Enabled


## Wireless LAN adapter Wi-Fi:

   Connection-specific DNS Suffix  . : home
   Description . . . . . . . . . . . : Intel(R) Dual Band Wireless-AC 8260
   Physical Address. . . . . . . . . : E4-A4-71-E2-17-CE
   DHCP Enabled. . . . . . . . . . . : No
   Autoconfiguration Enabled . . . . : Yes
   IPv6 Address. . . . . . . . . . . : 2a00:23c7:ff04:c501:6df7:8a57:6997:8f07(Preferred)
   Temporary IPv6 Address. . . . . . : 2a00:23c7:ff04:c501:69b8:f445:6fe1:36e2(Preferred)
   Link-local IPv6 Address . . . . . : fe80::6df7:8a57:6997:8f07%11(Preferred)
   IPv4 Address. . . . . . . . . . . : 192.168.1.240(Preferred)                                       # Windows Host IP.
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : fe80::ced4:2eff:fed8:6a3e%11
                                       192.168.1.254
   DHCPv6 IAID . . . . . . . . . . . : 165979249
   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-27-D9-90-E3-E4-A4-71-E2-17-CE
   DNS Servers . . . . . . . . . . . : fe80::ced4:2eff:fed8:6a3e%11
                                       192.168.1.254
                                       8.8.8.8
   NetBIOS over Tcpip. . . . . . . . : Enabled
   Connection-specific DNS Suffix Search List : home


-------------------------------
 Linux file types & extensions:
-------------------------------
# *.service                            # is a systemd service unit.
# *.service.d                          #
# *.service.requires                   #
# *.target                             #
# *.target.wants                       #
# *.scope                              #
# *.socket                             #
# *.sock                               # seen under Docker units.
# *.device                             #
# *.timer                              #
# *.list                               #
# *.mount                              #
# *.automount                          #
# *.conf                               #
# *.config                             #
# *.order                              # 
# *.path                               # 
# *.slice                              # 
# *.slice.d                            # 
# *.d                                  # 
# *.deb                                #
# *.run                                # ".run" files are typically proprietary and encoded binary files. You can't really see what they're doing.
# *.json                               # 
# *.swp                                # vim file editor swapped/recoverd file.
# *.nupkg                              # Nuget installation package for Powershell.
# *.beam                               # Elixir & Erlang/OTP BEAM package.
# *.dev                                # 
# *.deb                                # debian package.
# *.yaml                               # 
# *.yml                                # 
# *.git                                # git package.
# *.tar.gz                             # Z compressed tar package.
# *.jar                                # zip compressed package.
# *.sh                                 # bash script.
# *.py                                 # Python script.
# *.html                               # 
# *.php                                # 
# *.gif                                # 
# *.bzr                                # 
# *.hg                                 # 
# *.svn                                # 
# *.lock                               # 
# *.mlocate                            # 
# *.dpkg-old                           # 
# *.blacklist                          # 
# *.bashrc                             # 
# *.rpm                                # ".rpm" is the installation package file for distros such as RedHat & OpenSUSE, there are cross-platform support for such packages on Ubuntu.  
# *.exe                                # Microsoft Windows executable file, cross-platform support is available for this type of files through "mono" command.
# *.ini                                # 
# *[blank]                             # files with no extension.
# .*                                   # file or folder names that starts with ".".


---------------
 Type of Units:
---------------
# Daemon                               # is a subset of a service that always run in memory waiting to service a request.
# Service                              # a process or multi processes or sub processes that include daemons.
# process                              # is a Non-Daemon subset that relies on "xinetd" (a daemon) to service and pass the requests to be processed & served.


-----------------------------
 Service-Commands & Contents:
-----------------------------

# Description=                         # a systemd unit option that defines, the unit descriptions with details about the unit.  
# after=                               # a systemd unit option that defines, the unit startup sequence or prioritisation.
# requires=                            # a systemd unit option that defines, the unit hard dependencies, (the unt will fail to load, if the condition is not met).
# Wants=                               # a systemd unit option that defines, the unit soft dependencies, (the unit will pacially load, some features/functions may not work properly).
# ExecStart=                           # defines, what commands to execute/run when starting a service.
# ExecStop=                            # defines, what commands to execute/run when stopping a service.
# ExecReload=                          # defines, what commands to execute/run when reloading a service.
# ExecStartPre=                        # defines, what commands to execute/run before starting a service.
# ExecStartPost=                       # defines, what commands to execute/run after starting a service.
# ExecStopPre=                         # defines, what commands to execute/run before stopping a service.
# ExecStopPost=                        # defines, what commands to execute/run after stopping a service.
# sd_notify=                           # send a notification.
# busName=                             # defines the dbus name required to start the unit daemon.


------------------
 Type of services:
------------------

# simple                      # simple single command execution.
# forking                     # the start process initiates a child/sub process which will become the main process/service.
# oneshot                     # runs and finishes before the next unit starts the service/process may still considered as "active" even after the command exits, if the "RemainAfterExit"
                                option is set to "yes" (the default is "no").
# dbus                        # the service will requist a specific name and wont run unless that name is aquired.
# notify                      # sends a notification via "sd_notify" function, once sent then the next unit is initiated.


----------------------------
 Type of download packages :
----------------------------
# *.tar.gz
# *.jar
# *.zip
# *.git
# *.run
# *.rpm
# *.deb


---------------------
 Type of installers :
---------------------
aptitude install                      # package manager.
snap install                          # package manager.
cargo install                         # package manager.
flatpak install                       # package manager.
tasksel install                       # package manager.
dpkg                                  # an old method of unpacking & installing downloaded application packages.
bash *.sh                             # or (./*.sh) execute a bash configuration &/or installtion script.
./configure.sh                        # configure a source code before compilation, used with packages that has YAML/JSON config file. it represents an in-memory POJO of the app's.
./bootstrap.sh                        # configure a source code before compilation. The pre-start application environment, containing everything required to bootstrap a Dropwizard command.
                                      # Environment - A Dropwizard application's environment.
make                                  # compile a downloaded and extracted source code.
Make install                          # install the compiled source code.
cmake ..                              # a similar advance version of make that compiles complex, large & graphical source code packages.
gdebi <*.deb>                         # a Debian package compiler.
apt-get install <packageName>         # Ubuntu / Debian / KALI Linux distro's.
dnf install <packageName>             # Fedora Linux.
yum install <packageName>             # CentOS & RHEL Linux Distro's.
zypper install <packageName>          # OpenSUSE linux.
pacman -S <packageName>               # Arch & Manjaro Linux distro's. 


## Source code classis and compilation:

 # Dropwizard: is basically an opinionated web framework, primarily used for serving as a REST API project. The classes you're asking about are the crux of what makes a Dropwizard                          application. The developers have combined all of the libraries they want used in their framework and wired them together so it can easily work off of what they've                            bootstrapped for us.##

 # Environment: is the Dropwizard Environment container, not your application's personal environment (i.e. local vs. production). It has properties that are core to the Dropwizard framework                 such as the jersey web container. the Environment shouldn't used to determine database connection types and credentials; that is what your Configuration .yml file is for.                    You'll want to put any environment specific variables in that file and then run your application with a specific .yml file. I personally have an application-local.yml,                       application-staging.yml and application-prod.yml and run my application with the appropriate .yml depending on the environment. Dropwizard does some auto configuration of                    datasources with specific .yml properties. ##

 # Bootstrap: is basically the class that wires up everything being used in the Environment, including your Configuration and Application.
              If you have a look at the source files, you'll get a good idea of how these classes are working. ##

 # Configure: script is responsible for getting ready to build the software on your specific system. It makes sure all of the dependencies for the rest of the build and install process are                available, and finds out whatever it needs to know to use those dependencies. Unix programs are often written in C, so we’ll usually need a C compiler to build them. In these                cases the configure script will establish that your system does indeed have a C compiler, and find out what it’s called and where to find it.


#####################################
# Online software stores for Ubuntu #
#####################################
software-center                              # (an obsolete GUI store), is a discontinued high-level graphical front end for the APT/dpkg package management system. It is free                                                              software written in Python, PyGTK/PyGObject based on GTK.

sudo apt install gnome-software              # 
gnome-software                               # GUI command.

sudo apt install ubuntu-software             # The Ubuntu Software & Snap Store. The default software app is the Ubuntu Software, but it is the Snap store under the hood. All                                                               apps available in the Snap store are snap packages while the Ubuntu Software can contain both Snaps and apt packages.
sudo apt install snap-store                  # this is the default store for ubuntu-20.04-Focal-fossa and above.


####################################
# User Access Management (AAA)     #
####################################

from bash:
----------
sudo -u user1 bash                                          # switch to the bash-Shell with the user1 user, if not specified root is the default.
sudo -u user1 zsh                                           # switch to the Z-Shell with the user1 user.
sudo -u user1 pwsh                                          # switch to PowerShell with the user1 user.
sudo -u user1 tcsh                                          # C-shell.
sudo -u user1 fish                                          # fish-shell.

sudo passwd root                                            # to change the root password.
sudo adduser user1                                          # create a new user "user1" which will take you through a profile creation process.
sudo userdel -r user1                                       # delete/remove a user "user1".
whoami                                                      # to check the current user.
su user1                                                    # switch to user1.
id                                                          # check the Uid and profile details of the current user.
id root                                                     # check the Uid and profile details of a specific user, root in this case.
cat /etc/passwd                                             # get your distro users User-ID (Uid) from the 3rd column of the user raw in this commands output:  

------------------------------------------------------------
$ id
uid=1000(user1) gid=1000(user1) groups=1000(user1),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),117(netdev)
$

$ id root
uid=0(root) gid=0(root) groups=0(root)
$
------------------------------------------------------------


Output; (partial) of the cat command above:
-------------------------------------------
root:x:0:0:root:/root:/bin/bash
twrcha:x:1000:1000:,,,:/home/twrcha:/bin/bash
_flatpak:x:112:120:Flatpak system-wide installation helper,,,:/nonexistent:/usr/sbin/nologin
mysql:x:114:124:MySQL Server,,,:/nonexistent:/bin/false
--------------------------------------------------------


Explaining the above output:
----------------------------
Column 1 – Name
Column 2 – Password – If the user has set a password on this field, then it is indicated with the letter (x).
Column 3 – UID (User ID)
Column 4 – GID (Group ID)
Column 5 – Gecos – Contain general information about the user and can be empty.
Column 6 – Home directory
Column 7 – Shell – The path to the default shell for the user.

## the root Uid=0 while the first 999 Uid's are reserved for the system. therefore user Id's starts from 1000. in old distro versions Uid use to start from 500.


from pwsh:
----------
LxRunOffline set-uid -n <distroName> -v <UID>               # set the default autologin user for your distro.
LxRunOffline set-uid -n Ubuntu-20.04 -v 1000                # for example user twrcha UID =1000.

## you can get the UID from /etc/passwd file as explained above, find the user name and check the third column for the uid. ##

## you can also read or set the default Uid in the registery path below, read or set the Uid for the user you want as the default autologin user for your distro:
   HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Lxss{MY-UUID}

    Key_Name           Type                 value  
   DefaultUid        Reg_DWORD          <Decimal_value>


------------------------------------------------------------##
from bash:
----------

$ sudo passwd root                            
New password:
Retype new password:
passwd: password updated successfully
$

$ sudo adduser user1                          
Adding user `user1' ...
Adding new group `user1' (1001) ...
Adding new user `user1' (1000) with group `user1' ...
Creating home directory `/home/user1' ...
Copying files from `/etc/skel' ...
New password:
Retype new password:
passwd: password updated successfully
Changing the user information for user1
Enter the new value, or press ENTER for the default
        Full Name []:
        Room Number []:
        Work Phone []:
        Home Phone []:
        Other []:
Is the information correct? [Y/n] y
$
----------------------------------------------------------#


#######################################
# Set the default user in your distro #
#######################################
from bash:
----------
$ sudo touch /etc/wsl.conf
$ sudo nano /etc/wsl.conf
[user]
default=username
$

or

from pwsh:
----------
ubuntu2004 config --default-user twrcha                   # The lxrun.exe command is depreciated and replaced by the 'ubuntu2004.exe' (varies based on your distro's type and version). 


####################################
# Export & Import a distro image   #
####################################
wsl --export Ubuntu ubuntu.tar                                  # create a tar image of the distro.
wsl --import UbuntuRuby .\UbuntuRuby ubuntu.tar --version 2     # import the distro image then rename it and covert it's version.
wsl -d UbuntuRuby                                               # launch the new distro.
      
sc stop LxssManager                                             # to stop & start (restart) the LxssManager Windows service whenever required.
sc start LxssManager

Let assume two users, 1st user has installed a distro but 2nd does not.

😇 Good advice:

Use wsl --export in 1st user to make a tar file.
Move that file to 2nd user realm.
Use wsl --import to install it in 2nd user.
😈 Evil advice:

Copy the VHDX file from 1st user. See this Superuser answer for how to find.
Export the registry HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Lxss from 1st user in a REG file.
Copy or move those two files to 2nd user realm.
Double click to import the registry.
Copy the path where you put the VHDX file in 2nd user realm and paste it in the BasePath in Lxss registry key. Make sure to match the distribution name.
As you have said your Linux distribution installed in different drive then you have to only export the Lxss registry from 1st use and import it in 2nd.


###########################################
# Z-shell (zsh) environment & settings    #
###########################################
sudo apt install zsh
sudo -u user1 zsh                                               # switch to Z shell with the specified user.

-------------------------------------------------------------------------
This is the Z Shell configuration function for new users,
zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

(2)  Populate your ~/.zshrc with the configuration recommended
     by the system administrator and exit (you will need to edit
     the file by hand, if so desired).


--- Type one of the keys in parentheses ---

Aborting.
The function will be run again next time.  To prevent this, execute:
  touch ~/.zshrc
PineGap%
-------------------------------------------------------------------------


###################################################
# Linux File-System Management & Troubleshooting  #
###################################################

## "fsck" (file system check) is a command-line utility that allows you to perform consistency checks and interactive repairs on one or more Linux file systems.
   It uses programs specific to the type of the file system it checks. ##

## Make sure you are in Windows Insider Build 20211, September 10, 2020 or later for "--mount" command availability in WSL. ##
## To join Windows Insider program, you’ll need to open Settings app, go to “Update & Security -> Windows Insider Program” section and follow the instructions. ##

## https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK?wa=wsignin1.0 for Windows Insider Preview Downloads. ##
## https://docs.microsoft.com/en-us/windows-insider/flight-hub/ To check the latest and all available builds and SDK releases. ##
## https://www.microsoft.com/en-us/software-download?rfs=1/ to download Windows 7 or 8.1 or 10 iso images. ##
## https://www.microsoft.com/en-us/software-download/windows10/ to download Windows10 iso image. ##
## https://www.microsoft.com/en-gb/windows/get-windows-10?step=Win10Question1/ to buy Windows10 upgrade license for Windows Xp or 7 or MAC or Windows Home to Pro. ##
 
## Microsoft Windows Insider Preview Build release depend on the channel level (one out of three) you subscribed to (Dev/Pro, Beta or Release Preview/commercial). ##
## Once you swiched your Windows Consumer release to one of the three Insider channel relases you wont be able to switch between the channels without a fresh Windows installation. ##
## Windows Insider Preview Builds releases for the Dev channel first then after some time moves to the Beta then later to Release Preview then eventually to the Consumer release. ##
## Microsoft released Windows10 as a service, which means you’ll not see any new name for Windows OS in future. There will always be Windows 10 as the latest OS from Microsoft. ##
## Microsoft releases two feature updates for Windows 10 every year. One feature update releases in March or April and the other feature update releases in September or October month. ##

##  (SDK) Windows Software Development Kit, iso image. ##
##  (WDK) Windows Driver Kit, iso image. ##
## (EWDK) Windows Enterprise WDK, iso image. is a standalone self-contained CLI environment for building drivers.  It includes Build Tools for Visual-Studio-2017, the SDK, the WDK and                 support for ARM64 driver development.## 
##  (ADK) Windows Assessment and Deployment Kit, iso image. ##
##  (HLK) Windows Hardware Lab Kit, iso image. is a test framework used to test hardware devices for Windows10 and all versions of Windows Server starting with Windows Server 2016. ##
##  (ICD) Windows Imaging and Configuration Designer, part of the ADK iso image. ##
##   (PE) Windows Preinstallation Environment, iso image, this is the WinPE image and tools. ##
## (VHLK) Windows Virtual HLK, VHD image version 2004, 180 days evaluation. ##

## The build number of the SDK and the WDK must match. ##
## Use the HLKsetup.exe tool to install the needed HLK package. ##
## To add Windows PE to your ADK installation, download the Windows PE Addon ISO and run the installer after installing the ADK. This change enables post-RTM updates to tools in the ADK. ##

## (LTSC) Long-Term Servicing Channel: Windows10 Enterprise / Windows Server2019 release. Released every two to three years. These releases get security updates for 10 years and don't          receive feature updates by design. Microsoft has advocated that customers use the LTSC releases sparingly -- for mission-critical applications only -- and not for everyday use
   as a way to avoid updates. (Some customers do use them to avoid updates, however.).
## (SAC) Semi-Annual Channel: the regular none-LTSC version of Windows client/server, desktop & core experance.
## Windows Server vNext Long-Term Servicing Channel (LTSC) release that contains both the Desktop Experience and Server Core installation options for Datacenter and Standard editions.

## whats new in Microsoft Windows server vNext ##
 # MsQuic – an open source implementation of the IETF QUIC transport protocol powers both HTTP/3 web processing and SMB file transfers.
 # SMB now supports AES-256 Encryption.

## Windows Server vNext Long-Term Servicing Channel Preview is available in ISO format in 18 languages, and in VHDX format in English only.

## The following keys allow for unlimited activations ##
 # Standard: MFY9F-XBN2F-TYFMP-CCV49-RMYVH
 # Datacenter: 2KNJJ-33Y9H-2GXGX-KMQWH-G6H67

## Windows Server vNext Semi-Annual Preview/ Semi-Annual Channel (SAC), The Server Core Datacenter and Standard Editions are available in the 18 supported Server languages in ISO format and    in VHDX format in English only.

## The following keys allow for unlimited activations ##
 # Standard: V6N4W-86M3X-J77X3-JF6XW-D9PRV
 # Datacenter: B69WH-PRNHK-BXVK3-P9XF7-XD84W

## Keys are valid for preview builds only. After activation for the preview keys is disabled, you may still install and use preview builds for development and testing purposes without          activating.
## The Microsoft symbol server makes Windows debugger symbols publicly available.
## (AKS) Azure Kubernetes Service.
## to access the WSL host Windows filesystem from your distro,
   $ cd /mnt/c
   $ cd /mnt/c/users/ardal/documents
   $ cd /mnt/c/users/ardal/downloads


@@ Current latest Windows SDK package is the Insider Preview Build 20334. @@
@@ current latest available HLK package for Windows10, version 20H2 & the earlier version 2004, is Windows HLK version 2004 build 19041. @@

@@ Cuurent latest Windows 10 Insider Preview Dev             channel version 21H1, Build 21359    , released April 14th 2021. @@
@@ Current latest Windows 10 Insider Preview Release Preview channel version 20H2, Build 20334    , released April 14th 2021. @@
@@ Current latest Windows 10                 Consumer        channel version 20H2, build 19042.928, as of    April 21st 2021. @@
@@ Current latest Windows Feature Experience Beta & Release Preview channels Pack 120.2212.3530.0 , released March 25th 2021. @@

--------------------------------------------------------------------------
Edition	Windows 10 Pro
Version	20H2
Installed on	‎23/‎08/‎2020
OS build	19042.928
Serial number	R90LDBKE
Experience	Windows Feature Experience Pack 120.2212.551.0
--------------------------------------------------------------------------


from pwsh:
----------
wmic diskdrive list brief              # list the available disks under Windows.

wsl -l -v             
wsl --mount <DiskPath>                 # mount a disk in WSL.
wsl --mount <DiskPath> --bare
wsl --mount <DiskPath> --partition <PartitionNumber> --type <Filesystem>
wsl --unregister <distroName>
wsl --register <distroName>

----------------------------------------------------------------------------------------------------------
$ wsl -l -v
  NAME                   STATE           VERSION
* Ubuntu-20.04           Running         2
  openSUSE-Leap-15.2     Stopped         1
  docker-desktop-data    Stopped         2
  docker-desktop         Stopped         2
$

$ wmic diskdrive list brief
Caption                       DeviceID            Model                         Partitions  Size
SAMSUNG MZ7TY256HDHP-000L7    \\.\PHYSICALDRIVE0  SAMSUNG MZ7TY256HDHP-000L7    3           256052966400
SanDisk Ultra Fit USB Device  \\.\PHYSICALDRIVE1  SanDisk Ultra Fit USB Device  1           124218178560
$

$ wsl lsblk
NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda    8:0    0  256G  0 disk
sdb    8:16   0  256G  0 disk /
$

$ wsl
user1@host1:/mnt/c/Users/winuser1$ blkid
/dev/sda: UUID="3255683f-53a2-4fdf-91cf-b4c1041e2a62" TYPE="ext4"
/dev/sdb: UUID="3255683f-53a2-4fdf-91cf-b4c1041e2a62" TYPE="ext4"
user1@host1:/mnt/c/Users/winuser1$
----------------------------------------------------------------------------------------------------------


from bash:
-----------
lsb_release -a                  # check your LSB core version & distro release.
hostnamectl                     # returns the Kernel version, OS/Distro, Architecture, Hostname(Static&Pretty), Icon-name, chassis and IDs.
hostnamectl --static            # returns the static-hostname of your system.
hostnamectl --pretty            # returns the pretty-hostname of your system.
uname -r                        # returns the Kernel version, "Generic" means Desktop edition otherwise "Server" for server edition.
uname -a                        # for more details.
hostname                        # check the "Static-hostname", the "Pretty-hostname"="ComputerName" in the GUI mode. 
cat /etc/hostname               # returns static-hostname.
cat /etc/machine-info           # returns the pretty-hostname, the "machine-info" file is created after setting the hostname from the GUI.

sudo hostnamectl set-hostname <TheNewHostName>         # set the static-hostname.

## to have two different hostnames (static-hostname & Pretty-hostname),set the static hostname after setting the hostname from the GUI,
## two methods to change the deviceName/ComputerName from the GUI.
   GUI > Settings > Sharing > ComputerName.
   GUI > Settings > About > DeviceName.      ##

--------------------------------------------------------
$ hostnamectl
   Static hostname: bananagap
   Pretty hostname: BananaGap
         Icon name: computer-laptop
           Chassis: laptop
        Machine ID: d34d11fb687d4784be6b02c3db8c15f8
           Boot ID: 65bce81f0b0741d68df13d3cc5f177f2
  Operating System: Ubuntu 20.04.2 LTS
            Kernel: Linux 5.8.0-43-generic
      Architecture: x86-64
$ 
--------------------------------------------------------


df -h                                  # show the filesystem details.
lsblk                                  # list the availble disks/partitions & size.
blkid                                  # list the available disks name & UUID. UUID stands for Universal-Unit-Identification.

fsck                                   # filesystem check and recovery command. once it runs succesfully it will log the results in "/var/log/fsck".
fsck.ext4 -f /dev/sda                  # -f fix disk filesystem erros. /dev/sda = C: the OS boot partition, while "Ext4" is a linux filesystem and WSL distro vitual disk name "ext4.vhdx".
man fsck                               # read the fsck manual.

tune2fs -c 1 /dev/sda                  # 
cat /etc/fstab                         # check below output. File-Systems-Table file is a system configuration file and part of the util-linux package.
dmesg | less                           # (":q" to quit) is a command that prints the message buffer of the kernel. The output includes messages produced by the device drivers.

sudo apt install tgt                   # install's the tgt-admin - "tgtadm" command that will create the "/etc/tgt/targets.conf", Linux SCSI Target Configuration File.
cat /etc/tgt/targets.conf              # Linux target framework (tgt) aims to simplify various SCSI target driver (iSCSI, Fibre Channel, SRP, etc) creation and maintenance.


--------------------------------------------------------------------------------------#
$ lsblk                                                                               #     
NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda    8:0    0  256G  0 disk
sdb    8:16   0  256G  0 disk /
--------------------------------------------------------------------------------------#
$ blkid                                                                               # determine the UUID of the file system.
/dev/sda: UUID="3255683f-53a2-4fdf-91cf-b4c1041e2a62" TYPE="ext4"                     # equivalent to C: in Windows OS. 
/dev/sdb: UUID="3255683f-53a2-4fdf-91cf-b4c1041e2a62" TYPE="ext4"                     # equivalent to D: in Windows OS.
--------------------------------------------------------------------------------------#
$ cat /etc/fstab                                                                      # show file content.
LABEL=cloudimg-rootfs   /        ext4   defaults        0 1                           # /dev/sda: LABEL="cloudimg-rootfs" UUID="<UUID>" TYPE="ext4" PARTUUID="<PartUUID>" 
--------------------------------------------------------------------------------------#
$ df -h                                                                               # show the disk filesystem structure & details.
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb        251G  6.9G  232G   3% /
tools           238G  222G   16G  94% /init
none            3.1G     0  3.1G   0% /dev
tmpfs           3.1G     0  3.1G   0% /sys/fs/cgroup
none            3.1G  728K  3.1G   1% /run
none            3.1G     0  3.1G   0% /run/lock
none            3.1G  8.0K  3.1G   1% /run/shm
none            3.1G     0  3.1G   0% /run/user
tmpfs           3.1G     0  3.1G   0% /mnt/wsl
C:\             238G  222G   16G  94% /mnt/c
tmpfs           623M     0  623M   0% /run/user/1000 
$
------------------------------------------------------
$ sudo fsck.ext4 -f /dev/sdb
e2fsck 1.45.5 (07-Jan-2020)
/dev/sdb is mounted.
e2fsck: Cannot continue, aborting.
$

$ fsck
fsck from util-linux 2.34
fsck.ext4: Unable to resolve 'LABEL=cloudimg-rootfs'
$
---------------------------------------------Untested troubleshooting steps
fsck -Af -M

sudo mount -o remount,rw /
sudo mount -o rw remount /
sudo umount /dev/sda
sudo mount /dev/sda
sudo fsck -p /dev/sda
sudo systemctl daemon-reload

sudo systemctl mask multipathd.service
----------------------------------------------


#################################################
# HW devices & Network adapters on Ubuntu 20.x  #
#################################################
## network manager is the default service that manages network interfaces through the graphical user interface. Therefore, If you want to configure IP addresses via GUI, then the network-      manager should be enabled. An Alternative to Ubuntu network manager is systemd-networkd, which is the default backend service in Ubuntu server 18.04. ##
## in linux OS structure, you will find many config files path/location is a simple short mapping/link of the actual file location within the distro's filesystem.
## Immutable flags, also known as immutable bits, are file system attributes that, when enabled, prohibit changes to files or folders (objects), i.e. lock them. Enabled, immutable flags        supersede permissions: you cannot modify an object whose immutable flags have been enabled despite having Read & Write permissions on that object. ## 
## (mdadm): MDADM command is used to monitor and manage software RAID devices. RAID is nothing but a technique used for Performance management and Reduce data redundancy. RAID: Redundant       Array of Independent Disk. ##
## "/etc/resolv.conf" is a link to "/run/resolvconf/resolv.conf" which is automatically generated by WSL. To stop automatic generation of this file,
   add the following entry to /etc/wsl.conf and hash the configuration entireis of the "resolv.conf" file:

## connect to Windows port with no listener returns ETIMEDOUT instead of ECONNREFUSED when Windows firewall is enabled. or WSL2, problem with network connection when VPN used (PulseSecure). 
   or wsl unable to connect to IP resources with Cisco Annyconnect active. 
   To resolve the name resolution issue due to the above implement the following changes:

sudo rm /etc/resolv.conf                                                # remove the syslink with "run/resolvconf/resolv.conf", knowing that run is a (tmpfs) temp filesystem.
sudo bash -c 'echo "nameserver 8.8.8.8" > /etc/resolv.conf'             # set google root DNS server 8.8.8.8 as your default nameserver.
sudo bash -c 'echo "[network]" > /etc/wsl.conf'                         #
sudo bash -c 'echo "generateResolvConf = false" >> /etc/wsl.conf'       # disable "/etc/wsl.conf" from autogenerating/overwriting the "/etc/resolv.conf" file.
sudo chattr +i /etc/resolv.conf                                         # this will change the file attributes on a Linux filesystem after braking the syslink. "+i" means add "immutable" to                                                                           the current file attribute.
sudo chattr -i /etc/resolv.conf                                         # to remove the immutable attribute, so you can edit the file and save the new setting, then set back the +i.  

# close the terminal and restart WSL service "lxssManager" on Windows10 then reopen the distro, issue should be resolved. ##

## ERROR:@@@ Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings. @@@ Error comes up at startup:
   One of the reasons for this error is DNS name resolution issue. There are two proposed solutions below which might solve the problem,
   
 # Those MOTD messages are generated by scripts in "/etc/update-motd.d". The exact script that generates that specific line is "/etc/update-motd.d/91-release-upgrade", which also runs          "/usr/lib/ubuntu-release-upgrader/release-upgrade-motd". This last script will check for new releases and write output into
       "/var/lib/ubuntu-release-upgrader/release-upgrade-available". The script will only update the file every 24 hours. So if you wait long enough, the file will go stale and the script        will update the file anyway. But, if you want to update it immediately, just 

 #(1)# removing "/var/lib/ubuntu-release-upgrader/release-upgrade-available" and the next time you login, it will see there's no cache and run the check script automatically. 

 or

 #(2)# remove "/var/lib/ubuntu-release-upgrader/release-upgrade-available",
       run "/usr/lib/ubuntu-release-upgrader/release-upgrade-motd" instead of "/etc/update-motd.d/91-release-upgrade".

 or

 #(3)# remove "/var/lib/ubuntu-release-upgrader/release-upgrade-available"
       run "/etc/update-motd.d/91-release-upgrade" and it should start working correctly.
##

## https://www.digitalocean.com/community/tutorials/how-to-use-the-awk-language-to-manipulate-text-in-linux ##
## https://github.com/shayne/go-wsl2-host ##

sudo nano /etc/netplan/01-netcfg.yaml                                    # ubuntu dhcp config file.  


## different ways of fetching the WSL distro's ip address:
ip a s eth0 | grep 'inet\b' | awk '{print $2}' | cut -d/ -f1             # read the changing wsl distro's ip for services to be able to reconnect whenever the ip changes.
ip a s eth0 | awk '/inet / {print $2}' | cut -d/ -f1                     # the space after inet is crucial.
ip a s eth0 | awk '/inet / {print $2}' |awk -F '[/]+' '{print $1}'       # 
##
## both ssh.service & xrdp.service are synced with the sysv script below:  
   sudo nano /lib/systemd/systemd-sysv-install                           

$ sudo systemctl enable ssh
Synchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable ssh
$
$ sudo systemctl enable xrdp
Synchronizing state of xrdp.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable xrdp
$
##

## to resolve the xrdp access issue to the key.pem file add xrdp to the ssl-cert group:  

$ cd /etc/xrdp
$ ls -al
lrwxrwxrwx   1 root root    36 May 23 23:32 cert.pem -> /etc/ssl/certs/ssl-cert-snakeoil.pem
lrwxrwxrwx   1 root root    38 May 23 23:32 key.pem -> /etc/ssl/private/ssl-cert-snakeoil.key
$ sudo adduser xrdp ssl-cert  

# Error: xrdp.service: Can't open PID file /run/xrdp/xrdp.pid (yet?) after start: Operation not permitted                         
$ sudo nano /etc/xrdp/startwm.sh
 change #!/bin/sh to #!/bin/bash   ##


ip a                                                   # to list all network adapters and their mac & ip details.
sudo apt install golang-github-vmware-govmomi-dev      # to enable the VMWare "networks" command.
lshw -C network                                        # show only the network adapters and status.
lsusb                                                  # show all the HW devices connected to the system USB bus.
lspci                                                  # show all the HW devices connected to the system PCIe bus.
tail -f /var/log/messages                              # for PCMCIA wifi adapters run this command then connect the adapter to be detected.

nmcli dev wifi                                                                      # list available Wifi hotspots to connect to.
nmcli dev wifi connect [essid_name]  password  [insert your password]               # 

sudo cp /lib/firmware/rtlwifi/rtl8822befw.bin /lib/firmware/rtw88/                  # copy the RealTek wifi driver to that folder.
sudo mv /lib/firmware/rtw88/rtl8822befw.bin /lib/firmware/rtw88/rtw8822b_fw.bin     # rename the driver file to be loaded after restart.

pv                                               # to monitor a running activity like disk format, disk encryption, running script, etc. . 
rfkill                                           # show RF devices in the system.
lspci -knn                                       # shows more details.
lspci -knn | grep Net -A3; rfkill list           # 

sudo nmcli networking off                        # Turn the network adapter off and then on instead of restarting the system.
sudo nmcli networking on                         #

iwconfig                                         # display the wireless interfaces on your system and check their status
iw dev                                           # to list wireless interfaces only.
iw dev <interface_name> link                     # check whether the interface is connected to any wireless device.
sudo iwlist <wifi_adapter> scan | grep -i ESSID  # search/scan for available wifi hotspot to connect to.

nano /etc/netplan/01-network-manager-all.yaml    # this where you can manually configure your network interfaces.
sudo netplan generate                            #
sudo netplan apply                               #
reboot                                           #


############################################
# Install/Upgrade & Manage System Drivers  #
############################################

## FFmpeg is a free and open-source collection of tools for handling multimedia files. It contains a set of shared audio and video libraries such as libavcodec, libavformat, and libavutil.    With FFmpeg, you can convert between various video and audio formats, set sample rates, capture streaming audio/video, and resize videos. ##

sudo apt install ffmpeg                                          # this will install the FFMPEG Audio & Video codec managaement package which includes the following three                                                                                       libraries: (libavcodec, libavformat, libavutil).
sudo apt install wireless-tools                                  #
sudo apt install ubuntu-drivers-common                           # enable the "ubuntu-drivers" command.

sudo ubuntu-drivers devices                                      # 
sudo ubuntu-drivers autoinstall                                  # this will install the recommended default driver for your distro.
 
apt search nvidia-driver                                         #
sudo apt install xserver-xorg-video-nvidia-470                   # install a specific driver.

dpkg -l | grep -i nvidia                                         # check the installed nvidia packages.
sudo apt remove --purge '^nvidia-.*'                             # remove & purge the nvidia driver, data & settings. 
sudo apt install ubuntu-desktop                                  # gnome desktop environment. In case removing the nvidia driver stops the desktop mode.
sudo tasksel kubuntu-desktop                                     # KDE desktop environment.
sudo tasksel kubuntu-full                                        # KDE desktop environment.
sudo apt install xfce4                                           # xfce4 desktop environment.


###################################################
# Install/configure/enable printing & drivers     #
###################################################
## (CUPS) Common Unix Printing System: is the default printing system on Linux, FreeBSD, and macOS. Your Linux desktop environment may have a dedicated printer configuration utility, but       they all use CUPS under the hood. cups listen on (tcp port:631) by default.
## (Bonjour): Bonjour, also known as mDNS/DNS-SD (multicast DNS/DNS-Service-Discovery), allows a computer to find services on the local network.
## (IPP) Internet Printing Protocol: is the transport protocol.
## (AirPrint) Allows iPhone, iPad, and macOS clients to print over Wi-Fi.
## (SMB/Samba), mainly used to share files and printers with Windows clients.

# download and install the printer driver & utility package for your distro from your printer offical website then:

sudo apt install cups lsb lsb-printing                # CUPS Print Server using (Bonjour, IPP, Samba, AirPrint) protocols.
sudo apt install samba                                # SMB/samba is the network file and print sharing and discovery protocol.

sudo systemctl status cups                            # 
sudo nano /etc/cups/cupsd.conf                        #
------------------------------------------------------#
#Browsing Off
Browsing on
#Listen localhost:631
port 631
# Restrict access to the server...
<Location />
  Order allow,deny
  allow 192.168.1.240                                 # added.
</Location>

# Restrict access to the admin pages...
<Location /admin>
  Order allow,deny
  allow 192.168.1.240                                 # added.
</Location>
------------------------------------------------------#
  Allow @LOCAL                                        # to allow access to the CUPS web interface from the local network (default is localhost only).
  allow 192.168.1.240                                 # to allow access to the CUPS web interface from a certin ip address.

sudo systemctl restart cups                           # to apply the new changes.

sudo ufw allow in from 192.168.0.0/24 to any port 631 # enable access to port 631 through the firewall.

https://localhost:631/                                # CUPS web interface. 

lpadmin -p EPSONWF2630 -v socket://192.168.1.250      # add a printer using the printer DNS-name & ip using the cups protocol.
lpstat -p EPSONWF2630                                 # check the printer status.

cd /var/spool/samba/                                  # 


##############################################################################################
# install & configure PulseAudio, ubuntu-focal-wsl as client & Windows10 host as the server  #
##############################################################################################
## https://www.linuxuprising.com/2021/03/how-to-get-sound-pulseaudio-to-work-on.html#:~:text=Start%20the%20PulseAudio%20Windows%20service.%20Launch%20the%20Windows,right%20click%20it%20and   %20select%20to%20Start%20it%3A   ##
## https://nssm.cc/download  ##
## https://code.x2go.org/gitweb?p=x2goclient-contrib.git;a=tree;f=pulse/13.0-lp151.19.1_bin/pulse;h=565f0e0fcd20c45e15e9c5fea3645671607507c8;hb=HEAD  ##
## https://www.reddit.com/r/bashonubuntuonwindows/comments/hrn1lz/wsl_sound_through_pulseaudio_solved/ ##
## https://x410.dev/cookbook/wsl/enabling-sound-in-wsl-ubuntu-let-it-sing/ ##
## https://github.com/microsoft/WSL/issues/5816 ##

sudo apt install python-dbus pulseaudio-utils
sudo apt install maliit-inputcontext-qt4 pinentry-qt4 backintime-qt4 ffado-mixer-qt4
sudo apt install cairo-dock-alsamixer-plug-in alsamixergui mopidy-alsamixer
sudo apt install libpulse0 ladspa-sdk                               #
sudo apt install libsystemd-dev                                     # 
sudo apt install gnome-session-canberra                             #
sudo apt install alsa-base                                          #
sudo apt install alsa-firmware-loaders                              #
sudo apt install xcb                                                #
sudo apt install qtcreator                                          #
sudo apt install pulseaudio pulseeffects --install-recommends       #
sudo apt install pulseaudio-equalizer                               #
sudo apt install gnuradio libusb-1.0-0-dev gr-osmosdr               # GNU-Radio app with the RTL2382U-Driver Osmocom SDR module and the GNU Radio Source.

@@@@ $$$(Do Not add)$$$ this PPA repository for "curseradio" app will install and old version of python-pkg-resources with old scripts that will distroy the "Python-setuptools"      installation which leads to a none functioning Python3 & pip on your system.

sudo add-apt-repository ppa:nilarimogard/webupd8                    # (Don't do this)
@@@@
                    
sudo apt install python3-requests python3-xdg python3-lxml          #
sudo apt install python3-setuptools                                 #
sudo apt install curseradio                                         # (Don't, needs the above PPA source) all BBC Radio channels are here.

gnuradio-companion                                                  #
aplay -l                                                            # list all the available audio/sound devices in your system.
paplay                                                              #

qpaeq                                                               # to run the pulseaudio-equalizer which will connect to the pulseAudio server. 
--------------------------------------------------------------------#
$ qpaeq
There was an error importing needed libraries
Make sure you have qt5 and dbus-python installed
The error that occurred was:
        No module named 'PyQt5'
        No module named 'dbus.mainloop.pyqt5'
$
--------------------------------------------------------------------#
sudo pip3 install dbus-python                                       # use sudo for global/system level installation.
sudo pip3 install pyqt5                                             #

$ python
Python 3.8.9 (default, Jun 14 2021, 02:13:44)
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import dbus.mainloop; print(dbus.mainloop)
<module 'dbus.mainloop' from '/home/twrcha/.local/lib/python3.8/site-packages/dbus/mainloop/__init__.py'>
>>>
$

$ python
Python 3.8.9 (default, Jun 14 2021, 02:13:44)
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import dbus.mainloop; print(dbus.mainloop)
<module 'dbus.mainloop' from '/usr/local/lib/python3.8/site-packages/dbus/mainloop/__init__.py'>
>>>
$

$ xhost
access control disabled, clients can connect from any host
INET:172.28.80.1
LOCAL:
INET:0.0.0.0
INET6:ip6-localhost
$

pip uninstall pyqt5                                                 # remove the pyqt5 if it is locally instaled and reinstall as global/system package. 
/home/twrcha/.local/lib/python3.8/site-packages/PyQt5/Qt5           # this is a local (user profile) installed package, which is wrong, it has to be a global path (install with sudo).
/usr/local/lib/python3.8/site-packages/PyQt5/Qt5                    # (correct) global/system level installation with sudo.
/home/twrcha/.local/lib/python3.8/site-packages/dbus                # remove
/usr/local/lib/python3.8/site-packages/dbus                         # (correct).

$ xhost local:twrcha
non-network local connections being added to access control list
$ xhost local:root
non-network local connections being added to access control list
$

sudo pulseaudio                                                     # start pa and its daemon.
sudo pulseaudio -v                                                  # view error details
sudo pulseaudio -vvvv                                               # view more details.
sudo pulseaudio -k                                                  # kills the pa daemon.
pactl <moduleName>                                                  # 
pactl load-module module-equalizer-sink                             #
pacmd list-modules | grep dbus.mainloop.pyqt5                       # query PulseAudio daemon to list installed modules (all or specified).

qtcreator                                                           # run Qt-Creator app.
pacman -R pulseaudio pulseaudio-alsa                                # test the audio
pacman -S pulseaudio pulseaudio-alsa                                # test the audio

sudo nano ~/.config/pulse/default.pa                                # paste the WSL redirection three lines below.
sudo nano /etc/pulse/system.pa                                      # paste the WSL redirection three lines below.
sudo nano ~/.pulse/default.pa                                       # create the ~/.pulse directory and copy the above to config files to it.
sudo nano ~/.pulse/system.pa                                        # 
sudo nano /etc/pulse/daemon.conf                                    # 

sudo nano /etc/xrdp$ sudo nano sesman.ini
sudo nano /etc/xrdp/pulse/default.pa                                # add the same pa five module loading lines.
sudo nano /etc/xrdp/pulse/daemon.conf                               # create this file and add the one line below.
-------------------------------------------------
daemonize = yes
system-instance= yes
exit-idle-time = -1
load-default-script-file = yes
default-script-file = /etc/xrdp/pulse/default.pa
-------------------------------------------------


sudo nano /etc/passwd                                               # check the users & groups access.

rm  ~/.config/pulse/*                                               # remove the pa cache.

chown twrcha:twrcha -R /home/twrcha                                 # (Not tested) prevents PulseAudio from running with root privilage.
or
sudo chown 1000:1000 /run/user/1000/dconf/user                      # change the directory ownership to userID: 1000, the first user after root (twrcha) (inherits to all subdirectories).
or
sudo chown -R $USER:$USER /run/user                                 # change the directory ownership to the current user (inherits to all subdirectories).

$ sudo nano ~/.xsessionrc                                           # edit the file and add the below display & Audio environment settings.
export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop"
export XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR"
export DISPLY="192.168.1.240:0.0"
export PULSE_SERVER="tcp:192.168.1.240"
export LIBGL_ALWAYS_INDIRECT=1
export GDK_SCALE=2
export QT_SCALE_FACTOR=2
export DISPLAY=$DISPLAY
export XAUTHORITY=$XAUTHORITY
$

$ echo $XDG_RUNTIME_DIR
/run/user/1000

$ sudo /usr/bin/canberra-gtk-play --id="desktop-login" --description="GNOME Login"
Failed to play sound: Access forbidden
$

$ aplay -l
aplay: device_list:276: no soundcards found...
$

$ aplay --list-pcms
default
    Playback/recording through the PulseAudio sound server
null
    Discard all samples (playback) or generate zero samples (capture)
samplerate
    Rate Converter Plugin Using Samplerate Library
speexrate
    Rate Converter Plugin Using Speex Resampler
jack
    JACK Audio Connection Kit
oss
    Open Sound System
pulse
    PulseAudio Sound Server
upmix
    Plugin for channel upmix (4,6,8)
vdownmix
    Plugin for channel downmix (stereo) with a simple spacialization
$

sudo pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY nautilus         # run the file-Explorer (nautilus) through the package execution command with specific environments setting.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
$ sudo pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY nautilus
libGL error: No matching fbConfigs or visuals found
libGL error: failed to load driver: swrast

** (org.gnome.Nautilus:8892): WARNING **: 18:07:38.153: Unable to get contents of the bookmarks file: Error opening file /root/.gtk-bookmarks: No such file or directory

** (org.gnome.Nautilus:8892): WARNING **: 18:07:38.154: Unable to get contents of the bookmarks file: Error opening file /root/.gtk-bookmarks: No such file or directory
Nautilus-Share-Message: 18:07:39.127: Called "net usershare info" but it failed: 'net usershare' returned error 255: net usershare: cannot open usershare directory /var/lib/samba/usershares. Error No such file or directory     <-----
Please ask your system administrator to enable user sharing.   <-----

libGL error: No matching fbConfigs or visuals found
libGL error: failed to load driver: swrast

(gnome-control-center:9147): sharing-cc-panel-WARNING **: 18:09:49.684: couldn't list networks: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SettingsDaemon.Sharing was not provided by any .service files

(gnome-control-center:9147): sharing-cc-panel-WARNING **: 18:09:49.728: couldn't list networks: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SettingsDaemon.Sharing was not provided by any .service files

(gnome-control-center:9147): sharing-cc-panel-WARNING **: 18:09:49.733: couldn't list networks: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SettingsDaemon.Sharing was not provided by any .service files

(gnome-control-center:9147): sharing-cc-panel-WARNING **: 18:10:17.480: Failed to enable service gnome-user-share-webdav: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SettingsDaemon.Sharing was not provided by any .service files
$
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

export QT_DEBUG_PLUGINS=1                                           # (if needed) enable debugging for QT app to trace errors.

$ ps -ef | grep pulse                                               # 
twrcha       720     271  0 20:33 pts/0    00:00:00 grep --color=auto pulse
$

$ sudo nano /etc/pulse/default.pa                                   #

#load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1
#load-module module-native-protocol-tcp port=4713 auth-ip-acl=172.16.0.0/12
#load-module module-esound-protocol-tcp port=4714 auth-ip-acl=172.16.0.0/12

load-module module-native-protocol-tcp auth-anonymous=1
load-module module-esound-protocol-tcp auth-anonymous=1
#load-module module-waveout sink_name=output source_name=input
load-module module-waveout sink_name=output source_name=input record=0
load-module module-equalizer-sink
load-module module-dbus-protocol
$

$ sudo nano /etc/pulse/system.pa                                    #
#load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1
#load-module module-native-protocol-tcp port=4713 auth-ip-acl=172.16.0.0/12
#load-module module-esound-protocol-tcp port=4714 auth-ip-acl=172.16.0.0/12

load-module module-native-protocol-tcp auth-anonymous=1
load-module module-esound-protocol-tcp auth-anonymous=1
load-module module-waveout sink_name=output source_name=input record=0
load-module module-equalizer-sink
load-module module-dbus-protocol

$ sudo nano /etc/pulse/daemon.conf                                  #
#;daemonize = no
daemonize = yes
#; system-instance = no
system-instance= yes
#; exit-idle-time = 20
exit-idle-time = -1
#; load-default-script-file = yes
#; default-script-file = /etc/pulse/default.pa
load-default-script-file = yes
default-script-file = ~/.pulse/default.pa
$

$ sudo nano /etc/default/pulseaudio                                 # this file does not exist you have to create it.
PULSEAUDIO_SYSTEM_START=1
$

$ sudo pulseaudio                                                   # PulseAudio now running in system mode for all users (Not root).
W: [pulseaudio] main.c: Running in system mode, but --disallow-exit not set.
W: [pulseaudio] main.c: Running in system mode, but --disallow-module-loading not set.
N: [pulseaudio] main.c: Running in system mode, forcibly disabling SHM mode.
$

$ sudo loginctl enable-linger twrcha                                # this will allow the user to run PulseAudio.
$ systemctl --user enable pulseaudio                                # as stated above.
Created symlink /home/twrcha/.config/systemd/user/default.target.wants/pulseaudio.service → /usr/lib/systemd/user/pulseaudio.service.
Created symlink /home/twrcha/.config/systemd/user/sockets.target.wants/pulseaudio.socket → /usr/lib/systemd/user/pulseaudio.socket.
$ 


pwsh:
-----
## change the header of the default.pa & system.pa files as below then add the same three line added to the config.pa file:  
   #!C:\pulse\pulseaudio.exe -nF
   ##!/usr/i686-w64-mingw32/sys-root/mingw/bin/pulseaudio.exe -nF
##
## extract the downloaded PulseAudio package and rename the folder as "pulse" then copy it to the system32 directory. Copy the downloaded "nssm.exe" to the same folder and create a    config.pa   file in the same folder and set the below three line in it. then run the installation command as below:
## how to play an audio or video file using Media-Player-Classic app from CLI:
   start "C:\mpc\mpc.exe" "C:\mpc\1.mp3"
   $ notepad mpc-hc64.ini
   UICEAddr=127.0.0.1:1234
   UseUICE=0
   WinLircAddr=127.0.0.1:8765
   $
##

NotePad config.pa
----------------------------------------------------------------------------
#load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1;172.16.0.0/12
#load-module module-esound-protocol-tcp auth-ip-acl=127.0.0.1;172.16.0.0/12
load-module module-native-protocol-tcp auth-anonymous=1
load-module module-esound-protocol-tcp auth-anonymous=1
load-module module-waveout sink_name=output source_name=input record=0
load-module module-equalizer-sink
load-module module-dbus-protocol
---------------------------------------------------------------------------
 
cd C:\pulse\
$ nssm.exe install PulseAudio                                                   # C:\pulse\ directory is a must, the app wont run if you changed the location or name.
$ nssm.exe remove PulseAudio                                                    # this will start a small GUI installation interface.
--------------------------------------------------------------------------------#
             path: C:\pulse\pulseaudio.exe
startup directory: C:\pulse\
        Arguments: -F C:\pulse\config.pa --exit-idle-time=-1 
# On the "Details" tab, enter "PulseAudio" in the Display name field:
# under Windows service start the PulseAudio service.
--------------------------------------------------------------------------------#
sc delete PulseAudio                                                            # (in case you need to uninstall/remove the service).
regsvr32 <dllname>                                                              # (if required).


$ cd /usr/share/sounds/alsa/
$ sudo aplay Side_Right.wav
ALSA lib confmisc.c:767:(parse_card) cannot find card '0'
ALSA lib conf.c:4732:(_snd_config_evaluate) function snd_func_card_driver returned error: No such file or directory
ALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings
ALSA lib conf.c:4732:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name
ALSA lib conf.c:4732:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:5220:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2642:(snd_pcm_open_noupdate) Unknown PCM default
aplay: main:852: audio open error: No such file or directory
$

sudo setfacl -m u:username:rw /dev/snd/*                                        # path not there, while foud the below instead.
cd /usr/src/linux-headers-5.4.0-73-lowlatency/include/config/snd                #
sudo setfacl -m u:twrcha:rw /usr/src/linux-headers-5.4.0-73-lowlatency/include/config/snd/*     # (not tested).

ldd /usr/lib/qt/plugins/platforms/libqxcb.so                                 # path not there, while found the below instead.
$ ldd /usr/lib/x86_64-linux-gnu/qt5/plugins/platforms/libqxcb.so             #


#########################################################################################
# preparing the environment for WSL2 - with Linux Ubuntu-20.x-LTS-(focal)-Fossa distro  #
#########################################################################################
## Enable "Windows subsystem for Linux" optional component on the machine you want to install WSL2 on. ##
## Powershell run as administrator and shell run as root/sudo. ##

## Understanding the Ubuntu 20.04 LTS Server Autoinstaller:
   https://louwrentius.com/understanding-the-ubuntu-2004-lts-server-autoinstaller.html. ##
## The (lxrun.exe) was the first command used to install and manage the Windows Subsystem for Linux. It is deprecated as of (Windows-10-1803) and later. ##


from pwsh:
---------- 
Set-VMProcessor -VMName <vm_name> -ExposeVirtualizationExtensions $true 

## if you want to enable WSL2 on a Windows VM running in your Hyper-V environment, turn it off before running the commad. ##

Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform   # Enable the "Virtual Machine Platform" optional component on the machine you want to install WSL2 on.
wsl --install                                                               # install WSL on Windows.
wsl --update                                                                # (old command upto kernel v4.x). the cuurent default WSL2 kernel version is: 5.4.72-microsoft-standard-WSL2.
wsl --shutdown                                                              #
Wsl --start                                                                 #
wsl --install --distribution ubuntu                                         # install Ubuntu Distro for Windows 10.
wsl -l -v                                                                   # List the available Verbose/distro's installed, their status and their WSL mode (WSL or WSL2).
wsl --set-default-version 2                                                 # set the default WSL mode.
wsl --set-default Ubuntu-20.04                                              # set Ubuntu-20.04 as your default distro.
wsl --set-version Ubuntu-20.04 2                                            # set the WSL mode for that distro.

Get-Service LxssManager | Restart-Service                                   # Restart WSL from PowerShell.

bash -c "sudo apt update"                                                   # run linux commands in your default distro directly from PS.
bash -c "uname -a"                                                          # check the current installed distro's kernel version.


##########################################################################################################
# Move WSL-distro/VM from the default location to another disk/location using the Lx-Run-Offline command #
##########################################################################################################

## default distro location/path "%UserProfile%\AppData\Local\Packages\<distro>". ##

from pwsh:
----------

lxrunoffline get-dir -n Ubuntu-20.04                        # check the distro's current path.
lxrunoffline move -n Ubuntu-20.04 -d d:\wsl                 # wait for the command to finish moving the ext4.vhdx file, this will take some time depends on the distro size & system speed. 
lxrunoffline get-dir -n Ubuntu-20.04                        # verify that the Distro has been moved successfully to the new location/disk.

lxrunoffline register -n Ubuntu-20.04 -d d:/wsl             # to register an existing distro and its new location.

-----------------------------------------------------------------------------------------------------------
$ lxrunoffline get-dir -n Ubuntu-20.04
C:\Users\ardal\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\LocalState
$
-----------------------------------------------------------------------------------------------------------

wsl --shutdown                                                                # shutdown WSL before moving the distro.
wsl --unregister -n ubuntu-20.04                                              # Only if you want to unregister/delete your distro.
wsl --register -n ubuntu-20.04                                                # if you are moving/activating the Ext4.vhdx in a new WSL environment with the default path.

lxrunoffline run -n Ubuntu-20.04 -w                                           # run/access a specific distro CLI from PowerShell.

fsutil behavior set disableencryption 1                                       # Only if it is required.
fsutil behavior set disablecompression 1                                      # Only if it is required.

## if required apply the necessary permissions to the new target folder/disk, "D:\wsl" and the user "twrcha".
   icacls D:\wsl /grant "twrcha:(OI)(CI)(F)"
##
## make sure the distro ext4.vhdx is not on a compressed or encripted disk (there is a special procedure to manage the vhdx on an encripted disk). ##


#########################################################
# WSL2 "Ext4.VHDX" disk/image cleanup & optimisation    #
#########################################################
wsl --shutdown
Get-AppxPackage -Name "Ubuntu-20.4" | Select <PackageFamilyName>              # for example CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc

optimize-vhd -Path D:\wsl -Mode full 

# optimize-vhd command does not exist on Windows Home Edition only Pro & Enteprise instead follow the below procedure to get the same results:
                                         
diskpart
select vdisk file="D:\WSL\ext4.vhdx"
attach vdisk readonly
compact vdisk
detach vdisk
exit


##########################################################################################################
# Linux Ubuntu-20.x-LTS-(focal)-Fossa distros Units & online-Repositories /Libraries /Commands & Syntax  #
##########################################################################################################

from bash:
----------
# the && is to combine two commands in one execution line 1st commmand will be executed then the 2nd command after the &&.
# (Built-in with WSL2), set the transport layer over SSL/TLS to download packages over https in WSL.
  
hostname                                         # check/set the WSL/distro hostname.
hostnamectl                                      # check the main host and vertual machine names & details.
ps ax | grep dnsmasq                             # check if DNS cache is inabled.
ip -r address                                    # similar to ipconfig /all.
ip -a link                                       # list all interfaces.
ip route                                         # 
sudo reboot                                      #
Exit                                             #
logout                                           #
ssh <user1>@<host1>                              # cross platform secure shell (OpenSSH) remote connection.


----------------
 Network tools :
----------------
sudo apt install mutt                            # mutt is a text based email client for linux. 
sudo apt install net-tools                       # arp command and more.
sudo apt install arp-scan                        # a network scanning tool.
sudo apt install iputils-arping                  # install "arping" command.

arp -a                                           # read and disply the arp cash list the hostname, ip, mac, interfaces type & names.
ip neigh                                         # old command replaced by "arp -a" display the ‘neighbor table,’ which is just the ARP cache by a different name.
sudo arp-scan -I eth0 -l                         # "-I" is case sensitive stands for interface, while "-l" stands for "-localnet" the local subnet.
sudo arp-scan -l                                 # no interface specified.
arping <ip address>                              # to get the interface MAC address.

-----------------
 Other commands :
-----------------
ls                                               # show the files and folders under the current "working directory" when you run the command.
ls /                                             # show files/folders in the root directory.
ls ..                                            # show files/folders in parent directory.
ls ~                                             # show users home directory.
ls -a                                            # show hidden files.
ls -l                                            # show files/folders with details (long format).
ls -al                                           # show with the combination of -a and -l switches.
ls *                                             # show subdirectories.
ls > out.txt                                     # redirect the command output to a text file named out.txt.
ls -d * /                                        # list directories only.
ls -d $PWD/*                                     # list files and directories with full path.
exa -al                                          # the new replacment of "ls".
locate <File or folder name>                     # the search and indexing command.
echo $PWD                                        # $PWD holds the home directory path "/home/twrcha".
echo $PATH                                       # $PATH holds the environment variables PATH entries.

mkdir <directory-name>                           # to create a new folder.
touch <filename>                                 # create a new file.
rm <filename>                                    # to delete/remove a file.
rm -ri <directory-name-&-path>                   # remove a directory/folder. the "i" will raise a worning and ask for confirmation before deleting the file or folder.
cp                                               # Copy file command.
mv                                               # Move file command.

## "alias" command will create an alias and saves it by default in the ".bashrc" file however you can create a file named ".bash_aliases" in the same directory along with the ".bashrc" file    under the user home directoryand and store your aliases there for better management and control. ##
## Single versus double quotation marks in aliases
   The choice of single or double quotation marks is significant in the alias syntax when the alias includes variables. If you enclose value within double quotation marks, any variables        that appear in value are expanded when the alias is created. If you enclose value within single quotation marks, variables are not expanded until the alias is used. ##

alias  <AliasName>="<Alias command/action"       #    
unalias <your_alias_name>                        # to delete an alias.
alias cls="clear"                                # to mimic Windows "cls" command.
alias ll='ls -alF'                               # these are three of the default pre-configured aliases in Ubuntu.
alias la='ls -A'
alias l='ls -CF'
alias example1="echo Working directory is $PWD"               # with double qoutation the variable $PWD value is expanded (dynamic).
alias example2='echo Working directory is /home/user1'        # with single qoutation you can not use variables, therefore you have to put the actual value (static not dynamic).

ps -aux                                          # list the running processes with details.
df                                               # (Display Filesystem) command, displays information about the disk space usage of all mounted filesystems.
du                                               # (Directory Usage) command, displays the size of a directory and all of its subdirectories.
free                                             # Displays the amount of free space available on the system.
uname -a                                         # Provides a wide range of basic information about the system.
locate <packageName>                             # locates all the paths related to a certain package. 
history                                          # shows the command history and sequence.
find                                             # list all the folders, subfolders and files under the current path.
top                                              # Displays the processes using the most system resources at any given time. “q” can be used to exit.
pwd                                              # show the current working directory.
info                                             # Similar to man, but often provides more detailed or precise information, use "q" to quit.
whatis                                           # command shows a brief description of what is the functionality of specific built-in Linux command.

vim                                              # text file editor i to edit, Esc to end editing, :W to save, :w! to overwrite, :q to quit and :q! to force close.
emacs                                            # text editor.
gvim                                             # GUI text file editor, the GUI version of Vim, package name is "vim-gnome".
gv                                               # GUI PDF viewer. GNU gv is a powerful PostScript and PDF document viewer developed by the GNU Project.
evince                                           # GUI PDF viewer. the default pdf viewer for ubuntu-20.04-GNOME-desktop
atril                                            # GUI PDF viewer. the default pdf viewer for Ubuntu-20.04-MATE-Desktop.
okular                                           # GUI PDF viewer. the default pdf viewer for ubuntu-20.04-KDE-Desktop.
mupdf                                            # GUI PDF viewer. an extremely lightweight PDF viewer that supports a PDF, XPS, and EPUB formats.
zathura                                          # GUI PDF viewer. plugin-based document viewer application. Available plugins include PDF, PostScript and DjVu.
sudo snap install acrordrdc                      # GUI PDF Viewer. Adobe-Acrobat-Reader-DC-(WINE) a free propritry software. 
gedit                                            # GUI text file editor.
emacs                                            # text file editor.
nano <fileName>                                  # text file editor.
Pico <fileName>                                  # @@ (old-obsolete) text file editor, replaced by "nano" text editor. @@
less <pdf filename>                              # text file editor, PDF text viewer "q" to quit.
diff test1 text1.bkp                             # file compare, check the differences between two files.
man                                              # command displays a “manual page”. Manual pages are usually very detailed, and it’s recommended that you read the man pages for any command                                                    you are unfamiliar with.
man man                                          # "man" is the system default pager and the 2nd "man" is the system default manual, "q" to exit.
man intro                                        # Displays a brief introduction to Linux commands manual.

./                                               # means current working directory.
~                                                # current active shell user home directory.
cd <path>                                        # to switch to the required folder/directory or path.
cd /                                             # Takes you to the root directory.
cd ~                                             # Takes you to the home directory.
cd -                                             # Takes you to the previous directory.
cd ..                                            # Takes you up one directory level.
cd ../..                                         # up two levels.

lsb_release -a                                   # check your Ubuntu version, with other details.
lsb_release -d                                   # check your Ubuntu version, without the other details.
cat /etc/issue                                   # using cat to check your Ubuntu version, without other details.
cat /etc/os-release                              # using cat to check your Ubuntu version, with other details.

sudo --version                                   # check the sudo version. 
sudo apt                                         # check the current sudo library version (detailed).
sudo apt-get                                     # same command as above.
sudo apt --version                               # check the current sudo library version (short, no details).
python3 --version                                # to check the installed version.
python3                                          # use exit() or Ctrl-D to exit the command.

sudo apt update                                  # "apt"="apt-get", fetch & update the online repository library index before running the upgrade or install commands.
sudo apt update --fix-missing                    # fix broken or missing repositories.
sudo apt list --upgradable                       # to list the upgradable packages. 
sudo apt upgrade                                 # to upgrade the current existing library to a newer version if available.
sudo apt upgrade -y                              # -y or -n to automatically answer the Yes/No? request after running the installation command.
sudo apt dist-upgrade                            # this will identify conflect between different sources serving different versions of the same library/package and tries to resolve it.
sudo apt build-dep <packagename/URL>             # this command pulls and installs all the dependencies of a package. The Cargo package has to be installed to enable this command and the                                                    'deb-src' sources has to be enabled under the '/etc/apt/sources.list' file.
sudo apt install -f                              # fix broken or incomplete installations.
sudo apt clean                                   # clean the demoted or unused repositories.
sudo apt autoclean                               # 
sudo apt autoremove                              # this is a clean up process for old and obsolete libraries/packages.
sudo apt-mark hold package                       #

sudo aptitude install <Package>                  # install along with dependencies, while offering dependencies auto fixing.

sudo dpkg --configure -a                         #

sudo do-release-upgrade                          # upgrade Ubuntu release to the latest which might not be LTS make sure to switch to LTS with the below command.
prompt=lts                                       # switch to LTS client mode.
prompt=normal                                    # switch to non-LTS client mode, only if it is necessary for your project.

dpkg --list                                      # list the installed commands and their related packages names.
sudo apt remove <packageName>                    # remove the installed package. 
sudo apt purge <package-name>                    # This will remove the package along with all its data and configuration completely from the system.

sudo gedit /etc/apt/sources.list                 # use "gedit" GUI file editor to edit any file. "/etc/apt/sources.list" file in this case.
sudo vim /etc/apt/sources.list                   # use "vim" CLI file editor to edit any file. "/etc/apt/sources.list" file in this case.
grep ^deb /etc/apt/sources.list                  # check for debian "deb" repository sources under the "/etc/apt/sources.list" file.

sudo apt-add-repository <library name>           # to add an online repository to your linux system.
sudo apt-add-repository -r <library name>        # to remove/undo the added online repository. ("apt-add-repository" or "add-apt-repository" both are correct).
sudo ppa-purge <ppa-package>                     # to remove/undo the added PPA-package online repository. 


---------------------
 Essencial packages :  
---------------------
sudo apt install apt-transport-https             # enables online repositories access and download over Https.
sudo apt install ca-certificates                 # enables root certificate check for online repositories over Https. 

sudo add-apt-repository ppa:ubuntudde-dev/stable # (Not compatible with WSL Ubuntu focal) PPA source for Ubuntu DDE stable development environment.

sudo apt install ppa-purge                       # PPA repository purge command.
sudo apt install software-properties-common      # to install Linux common pre-requisit libraries and version check.
sudo apt install linux-source                    # This package provides the source code for the Linux kernel.
sudo apt install build-essential                 # this package is a reference for all the packages needed to compile a Debian package. It includes GCC/g++ compilers and libraries and some                                                     other utilities.
sudo apt-add-repository ppa:deadsnakes/ppa       # (demoted) a pre-requisit for Python 2.6.x & 2.7.x compiler installation.
sudo apt install erlang                          # install Erlang programming language and its OTP libraries.
sudo apt install elixir                          # install Elixir programming language which is based on Erlang/OTP.
sudo apt install gedit                           # a GUI general purpose file editor.
sudo apt install zsh                             # "zsh" is another bash/CLI for WSL.

sudo apt install gcc-10                          # The GNU Compiler Collection (GCC) is a compiler system produced by the GNU Project supporting various programming languages.
sudo apt install g++-10                          # source for C++ compiler binaries/package.
sudo apt install clang-12                        # another source for C++ v12 compiler binaries/package.
sudo apt install llvm-toolchain-12               # 'llvm-toolchain-12' instead of 'clang-12' as another source for C++ v12 compiler binaries/package.
sudo apt install mono-vbnc                       # 'mono-vbnc' instead of 'visual-basic-11.0-compiler' as source for c++ v11 compiler binaries/package.
sudo apt install make                            # is a utility for building and maintaining groups of programs (and other types of files) from source code. 
sudo apt install python3.9                       # to install Python 3.9.x compiler binaries/package.
sudo apt install git                             # install and enables git command that supports .git & .sh (bash) files and can access and fetch from github online library.
sudo apt install curl                            # curl is a tool for data transfer. It is also available as an online library for developers and as a CLI for terminal-based use cases. 
sudo apt install wget                            # install Windows wget command to access Microsoft online libraries for linux.
sudo apt install nuget                           # open source package manager for the .NET Core ecosystem, for pulling libraries into your .NET Core project.
sudo apt install dpkg-sig                        #
sudo apt install unzip                           # files and folders compress and decompress utility.
sudo apt install nano                            # see below comment.
sudo apt install nodejs                          # PHP web applications development environment.
Sudo apt install cmdtest                         # @@ Sandbox 'cmdtest' is installed instead of 'yarn' by default in Ubuntu & WSL2, you have to remove it and force yarn installation.@@
-------------------------------------------------#
sudo apt remove cmdtest
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update

sudo apt install yarn                            # "Yarn package manager" for the JavaScript programming language. An alternative to npm, Yarn re-prioritizes the existing workflow for the
                                                   npm client (with scalable performance in mind) but remains compatible with the npm package registry.
                                                 # If you have Node.js already, through nvm for example, use the following command:
sudo apt install --no-install-recommends yarn

yarn --version
1.22.5
-------------------------------------------------#
sudo apt install mono-devel                      # Mono is a free and open-source.NET Framework-compatible software framework. led by ed by Xamarin, a subsidiary of Microsoft.
sudo apt install mono-runtime                    # installed the mono file editor.
sudo apt install cakephp-scripts                 # Cake PHP Script language. 
sudo apt install libgit2-dev                     # check below comment.
sudo apt install libpython3.9-stdlib             # 
sudo apt install libmodglue1v5                   # install the prompt command.
sudo apt install dvb-apps                        # @@ conflects with below 'libxbase64-bin'. @@
sudo apt install libxbase64-bin                  # @@ conflects with above 'dvb-apps'. @@
sudo apt install snapd                           # "Snaps" are applications packaged with all their dependencies to run on all popular Linux distributions from a single build. They update                                                      automatically and roll back gracefully.
sudo add-apt-repository universe                 # add online repository to the system /etc/apt/sources.list file.
sudo add-apt-repository multiverse               # 
sudo add-apt-repository restricted               #


# addtional commands/compliers/Python3-libs/other-libs&packages install below:
  sudo apt install zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev libcurl4-gnutls-dev

## Xamarin - is a free. Cross-platform. Open source. An app platform for building Android and iOS apps with .NET and C#. a subsidary of Microsoft.

## Github — is a free. a larg and advanced global development platform. a subsidary of Microsoft.

## Example on how to cascade commands into a banana code or automated script style:
   sudo apt update; \sudo apt install -y apt-transport-https && \sudo apt update && \sudo apt install -y git 


## (libgit2-dev) is a portable, pure C implementation of the Git core methods provided as a re-entrant linkable library with a solid API, allowing you to write native speed custom Git          applications in any language that supports C bindings. ##

## "GNU nano" is a text editor for Unix-like computing systems or operating environments using a command line interface. It emulates the "Pico" text editor, part of the Pine email client,      and also provides additional functionality. ##


----------------------------------------
Types of downloaded packages compression:
------------------------------------------------------------------------
# With WGET and JAR:
wget -O - https://github.com/user/repo/archive/master.zip | jar xv

# With WGET and TAR:
wget -O - https://github.com/user/repo/archive/master.tar.gz | tar xz

# With CURL and JAR:
curl -L https://github.com/user/repo/archive/master.zip | jar xv

# With CURL and TAR:
curl -L https://github.com/user/repo/archive/master.tar.gz | tar xz
------------------------------------------------------------------------


#######################################
#  Preparing your Distro Environment  #
#######################################

sudo dpkg --add-architecture i386                                                 # (If Required) set your distro to support 32bit environment.

# Set your distro ip address/mask and default GW:
sudo ip address add 172.27.240.5/20 broadcast 172.27.255.255 dev eth0             # manually set the ip config for your WSL distro.
sudo ip route add default via 172.27.240.1                                        # manually set the routing config for your WSL distro.

# In your .bashrc, try uncommenting the following line in order to force color: "#force_color_prompt=yes".

touch .bash_aliases                                 # create a ".bash_aliases" file under the user home directory to hold the alias configurations without messing the system ".bashrc".
touch .bash_profile                                 # create a ".bash_profile" file under the user home directory, to hold future environment configuration parameters.


echo "source ~/.bashrc" >> ~/.bash_profile          # this will add the line "source ~/.bashrc" to the ".bash_profile" file, to prevent losing the shell colors unless you run "bash".
sudo nano ~/.bash_profile                           # edit the ".bash_profile" file and add the below argument to source the .bashrc system file and add the two path entries to the                                                                user environment variables $PATH.

echo $XDG_DATA_DIRS                                                                        # 
touch ~/.xsessionrc                                                                        # this is the x11 application disply configuration file.

$ sudo nano ~/.xsessionrc                                                                  # edit the file and add the below lines.
export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop"
export XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR"
export LIBGL_ALWAYS_INDIRECT=1
export DISPLY="192.168.1.240:0.0"
DISPLAY=$DISPLAY
XAUTHORITY=$XAUTHORITY
# export DISPLAY=:0
# export DISPLAY=:0.0
# export DISPLY=localhost:0.0 synaptic
# export DISPLAY=localhost:0.0
# export DISPLAY=PineGap:0.0
# export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
$


-------------------------------------------
 Other enviroment variables & config files:
-------------------------------------------
/etc/environment                       # system level setting $PATH.
/etc/profile                           # system level profile setting.
/etc/X11/Xsession.d/*                  # 
/etc/security/pam_env.conf             # 
$HOME/.profile                         # user level profile setting. Not loaded by bash if ".bash_profile" file exist. in zsh "$HOME/.zprofile".


--------------------------
 $PATH update automation :
--------------------------
## you can automate amending the $PATH environment variable:

echo $PATH                                                # disply the current system PATH entry.

export PATH=$PATH:~/.cargo/bin                            # amends the new path entry to the existing $PATH without rewriting the complete value.
export PATH="$PATH:$HOME/.cargo/bin:/bin:"

source /etc/environment && export PATH                    # export the system PATH enviroment variables (Windows host) values to the user PATH enviroment variables. 

source ~/.profile                                         # Another way of exporting the system PATH enviroment variables value to the user PATH enviroment variables.


# fix WSL name resolution (DNS) issue:
--------------------------------------
sudo rm /etc/resolv.conf                                               #
sudo bash -c 'echo "nameserver 8.8.8.8" > /etc/resolv.conf'            #
sudo bash -c 'echo "[network]" > /etc/wsl.conf'                        #
sudo bash -c 'echo "generateResolvConf = false" >> /etc/wsl.conf'      #
sudo chattr +i /etc/resolv.conf                                        #

----------------------------------------------------------#
$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu20.04onWindows_2004.2021.222.0_x64__79rhkp1fndgsc:/mnt/c/ActiveTcl/bin:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files/Intel/iCLS Client/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files (x86)/Common Files/Acronis/SnapAPI/:/mnt/c/Program Files/Intel/WiFi/bin/:/mnt/c/Program Files/Common Files/Intel/WirelessCommon/:/mnt/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files (x86)/Origin Games/Command and Conquer The Ultimate Collection Additional Content/Core:/mnt/c/Program Files/PuTTY/:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn/:/mnt/c/Program Files (x86)/Microsoft SQL Server/110/DTS/Binn/:/mnt/c/Program Files (x86)/Microsoft SQL Server/120/DTS/Binn/:/mnt/c/Program Files (x86)/Microsoft SQL Server/130/DTS/Binn/:/mnt/c/Program Files (x86)/Microsoft SQL Server/140/DTS/Binn/:/mnt/c/Program Files (x86)/Microsoft SQL Server/150/DTS/Binn/:/mnt/c/Program Files/dotnet/:/mnt/c/Programdata/anaconda3/:/mnt/c/Programdata/anaconda3/scripts/:/mnt/c/Program Files (x86)/dotnet/:/mnt/c/Program Files/Kubernetes/Minikube:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Users/ardal/Downloads/NuGet.Net:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/tools/lxrunoffline:/mnt/c/Program Files/CMake/bin:/mnt/c/Program Files/Microsoft/Azure Functions Core Tools/:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python36/Scripts/:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python36/:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python38/Scripts/:/mnt/c/Users/ardal/AppData/Local/Programs/Python/Python38/:/mnt/c/Users/ardal/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/ardal/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/ardal/AppData/Local/Microsoft/WindowsApps:/mnt/c/programdata/anaconda3:/mnt/c/Users/ardal/AppData/Local/Programs/Microsoft VS Code Insiders/bin:/mnt/c/Users/ardal/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/ProgramData/ardal/atom/bin:/mnt/c/Users/ardal/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Kubernetes:/mnt/c/Users/ardal/Downloads/Kubectl:/mnt/c/Users/ardal/Downloads/PowerShell/Scripts:/mnt/c/Users/ardal/.dotnet/tools:/snap/bin:/home/twrcha/.cargo/bin
$

$ nano ~/.bash_profile
source ~/.bashrc
export PATH="$PATH:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.dotnet/dotnet:/snap/bin:/usr/bin/snap"
eval $(ssh-agent)
$

$ nano ~/.bash_aliases
alias cls=clear
alias sources="sudo nano /etc/apt/sources.list"
alias aliases="sudo nano ~/.bash_aliases"
alias myprofile="sudo nano ~/.bash_profile"
alias sysprofile="sudo nano ~/.profile"
alias sshconfig="sudo nano ~/.ssh/config"
alias wslset="sudo nano /etc/wsl.conf"
alias dnsset="sudo nano /etc/resolv.conf"
alias fsindex="sudo nano /etc/updatedb.conf"
alias mydocs="cd /mnt/c/users/ardal/documents"
alias mydownloads="cd /mnt/c/users/ardal/downloads"
alias nuget="mono /usr/local/bin/nuget.exe"                             # @@ Now nuget is a native linux package no more need for this alias.@@ 
alias python=python3
alias pip=pip3
alias clang=clang-12
alias g++=g++-10
alias gcc=gcc-10
alias clearecho="sudo rm /var/lib/ubuntu-release-upgrader/release-upgrade-available"
$

$ sudo nano /etc/apt/sources.list

# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://archive.ubuntu.com/ubuntu/ focal main restricted
deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ focal universe
deb-src http://archive.ubuntu.com/ubuntu/ focal universe
deb http://archive.ubuntu.com/ubuntu/ focal-updates universe
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team, and may not be under a free licence. Please satisfy yourself as to
## your rights to use the software. Also, please note that software in
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://archive.ubuntu.com/ubuntu/ focal multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-updates multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu focal partner
# deb-src http://archive.canonical.com/ubuntu focal partner

deb http://security.ubuntu.com/ubuntu/ focal-security main restricted
deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted
deb http://security.ubuntu.com/ubuntu/ focal-security universe
deb-src http://security.ubuntu.com/ubuntu/ focal-security universe
deb http://security.ubuntu.com/ubuntu/ focal-security multiverse
$
----------------------------------------------------------------------------------------


########################################################################################
# install multiple versions of clang & c++ compiler and set the system default version #
########################################################################################
## Clang opensource software is a compiler front end for the C, C++, Objective-C and Objective-C++ programming languages, as well as the OpenMP, OpenCL, RenderScript, CUDA and HIP frameworks. It uses the LLVM compiler infrastructure as its back end and has been part of the LLVM release cycle since LLVM 2.6.
It is designed to act as a drop-in replacement for the GNU Compiler Collection (GCC), supporting most of its compilation flags and unofficial language extensions. Its contributors include Apple, Microsoft, Google, ARM, Sony, Intel and AMD. ## 
## for Ubuntu 20.04 focal, the system default clang version is 9.x. ##  
## The Clang Compiler is an open-source compiler for the C family of programming languages. Builds on the LLVM optimizer and code generator, allowing it to provide high-quality optimization    and code generation support for many targets. ##
## "/usr/bin/c++" is a symbol link to "/etc/alternatives/c++" which is also a symbol link to "/usr/bin/g++" so on Ubuntu c++ is g++ and g++ is g++ explicitly. ##
## Set Clang-11 as the default C++ compiler using c++ so that build processes can still use g++ explicitly if they want to.

sudo apt install clang                                                 # install the default clang, C++, G++, GCC all (version 9.3.x) ubuntu-20.04-focal distro.
sudo apt install clang-12                                              # 
sudo apt build-dep clang-12                                            #
sudo aptitude install clang-12                                         # use "aptitude" command to automatically identify and resolve any dependency issues.
sudo apt install g++-10                                                #
sudo apt install gcc-10                                                #
alias clang=clang-12                                                   # add this alias to the "~/.bash_aliases" file.
alias g++=g++-10                                                       #
alias gcc=gcc-10                                                       #
clang -v                                                               #
c++ -v                                                                 #
g++ -v                                                                 #
gcc -v                                                                 #

sudo apt install lld-12 libboost-thread-dev                                         # Install clang/lld v12 and boost v1.71.

sudo update-alternatives --config ld                                                # list the packages and the version of ld used by that package and which one is the system default.
sudo update-alternatives --config c++                                               #
sudo update-alternatives --config g++                                               #
sudo update-alternatives --config gcc                                               # 
sudo update-alternatives --config clang                                             #
sudo update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.lld-12" 30       # set the system default version of ld and the providing package replacing "ld-2.23" with "ld.lld-12".
sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-12 60          # set clang++-12 as the default system c++ compiler without interfering with the g++ compiler.


-----------------------------------------------------------------------------------------------------(the rollback steps for clang-12 just incase)
sudo update-alternatives --remove-all clang
sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++ 100
sudo update-alternatives --install /usr/bin/clang-12 clang-12 /usr/bin/clang 100
sudo update-alternatives --install /usr/bin/clang-format-12 clang-format-12 /usr/bin/clang-format 100
-----------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------# 
$ sudo update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.lld-12" 30
update-alternatives: using /usr/bin/ld.lld-12 to provide /usr/bin/ld (ld) in auto mode
$

$ sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-12 60
update-alternatives: using /usr/bin/clang++-12 to provide /usr/bin/c++ (c++) in auto mode
$

$ sudo update-alternatives --config c++
There are 2 choices for the alternative c++ (providing /usr/bin/c++).

  Selection    Path                 Priority   Status
------------------------------------------------------------
* 0            /usr/bin/clang++-12   60        auto mode
  1            /usr/bin/clang++      10        manual mode
  2            /usr/bin/clang++-12   60        manual mode

Press <enter> to keep the current choice[*], or type selection number:
$

$ clang -v
Ubuntu clang version 12.0.0-3ubuntu1~20.04.4
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/10
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/10
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/10
Candidate multilib: .;@m64
Selected multilib: .;@m64
$

$ c++ -v
Ubuntu clang version 12.0.0-3ubuntu1~20.04.4
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/10
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/10
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/10
Candidate multilib: .;@m64
Selected multilib: .;@m64
$

$ g++ -v
Using built-in specs.
COLLECT_GCC=g++-10
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/10/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:amdgcn-amdhsa:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 10.3.0-1ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-10/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-10 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-10-S4I5Pr/gcc-10-10.3.0/debian/tmp-nvptx/usr,amdgcn-amdhsa=/build/gcc-10-S4I5Pr/gcc-10-10.3.0/debian/tmp-gcn/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --with-build-config=bootstrap-lto-lean --enable-link-mutex
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 10.3.0 (Ubuntu 10.3.0-1ubuntu1~20.04)
$

$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc-10
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/10/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:amdgcn-amdhsa:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 10.3.0-1ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-10/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-10 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-10-S4I5Pr/gcc-10-10.3.0/debian/tmp-nvptx/usr,amdgcn-amdhsa=/build/gcc-10-S4I5Pr/gcc-10-10.3.0/debian/tmp-gcn/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --with-build-config=bootstrap-lto-lean --enable-link-mutex
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 10.3.0 (Ubuntu 10.3.0-1ubuntu1~20.04)
$
-------------------------------------------------------------------------------------------#


##################################################################################################################################
# Enable WSL2 Ubuntu GUI through Windows RDP-to-XRDP on linux (localhost) and                                                    #
# loading one of the installed Desktop environments (gnome, KDE, KDE-plasma, Xfce4, etc.)                                        #
# Through one of the installed Display-Manager (XWindows-2D:Client(X11)&Server(Xorg) or (Wayland-3D: gdm3, sddm, lightdm, kdm)   #
##################################################################################################################################
https://www.digitalocean.com/community/tutorials/how-to-configure-a-linux-service-to-start-automatically-after-a-crash-or-reboot-part-1-practical-examples

## we will use Window’s native RDP client to remote connect into your local WSL2 Ubuntu on the same machine. (when is the last time you RDP into localhost? … and the destination is also        running in Linux, not Windows). ##
## (Kubuntu) is the Ubuntu version with KDE desktop-environment GUI. ##
## (Kubuntu desktop) is highly vulnerable at this stage with it current version, which limits its use to testing and development areas with no sensitive data delt with. ##  
## (Kubuntu-Desktop) installs the sddm & the older gdm3 X-Windows-server in which you can chose which one will be used as the default engine. ##
## (GDM3) is distinct from the legacy GDM. While they may appear similar, GDM3 is not backward compatible with legacy GDM themes, with options hidden in configuration files. ##
## (SDDM) Simple-Desktop-Display-Manager: is a comparatively new display manager scene. ##
## haveged(8) - Linux man page, A simple entropy daemon:
   The HAVEGE (HArdware Volatile Entropy Gathering and Expansion) algorithum harvests the indirect effects of hardware events on hidden processor state (caches, branch predictors, memory       translation tables, etc) to generate a random sequence. The effects of interrupt service on processor state are visible from userland as timing variations in program execution speed.    
   Using a branch-rich calculation that fills the processor instruction and data cache, a high resolution timer source such as the processor time stamp counter can generate a random            sequence even on an "idle" system.
   In Linux, the hardware events that are the ultimate source of any random number sequence are pooled by the /dev/random device for later distribution via the device interface. The            standard mechanism of harvesting randomness for the pool may not be sufficient to meet demand, especially on those systems with high needs or limited user interaction. Haveged provides a    daemon to fill /dev/random whenever the supply of random bits in /dev/random falls below the low water mark of the device.

   Haveged also provides a direct file system interface to the collection mechanism that is also useful in other circumstances where access to the dev/random interface is either not            available or inappropriate.

   In either case, haveged uses HAVEGE to maintain a 1M pool of random bytes consumed by the interface. The principle inputs to havaged are the sizes of the processor instruction and data      caches used to setup the HAVEGE collector. The haveged default is a 4kb data cache and a 16kb instruction cache. On machines with a cpuid instruction, haveged will attempt to select         appropriate values from internal tables.

   Although CISC architectures appear insensitive to tuning parameters, there is no guarantee that manual tuning of the algorithm may not be required under some circumstances. The output of    the HAVEGE random number generator should be verified on any installation before the haveged is put into production. ##

## (Wayland) is a communication protocol that specifies the communication between a display server and its clients, as well as a C library implementation of that protocol. A display server     using the Wayland protocol is called a Wayland compositor, because it additionally performs the task of a compositing window manager.
   As a free and open-source community-driven project with the aim of replacing the X Window System with a modern, secure simpler windowing system in Linux and other Unix-like OS's. ##
## (Wayland) is a new protocol that enables 3D compositors to be used as primary display servers, instead of running the 3D compositor as an extension under the (2D) X.org display server.
## Weston is a reference implementation of a Wayland compositor. It is part of the Wayland project and can run as an X client or under Linux Kernel Mode Setting (KMS). ##
## (LightDM) is a free and open-source X display manager that aims to be lightweight, fast, extensible and multi-desktop. It can use various front-ends to draw User Interface, also called      Greeters. It also supports Wayland. LightDM is the default display manager for Edubuntu, Xubuntu and Mythbuntu since 11.10 release, for Lubuntu since 12.04 release until 16.10, for          Kubuntu beginning with 12.10 until 15.04 for Linux Mint and Antergos.
## Graphics drivers such as (Intel, Nouveau, and Radeon) include both kernel drivers and an X driver. With Wayland we only need the kernel drivers. Under the KMS/DRM/GEM architecture,          that is where most of the real functionality is, such as modesetting, memory management, and graphics rendering. The remaining bits on the X side of things are used just to interface        with the X server and are not needed by Wayland.
## Most of the open source drivers have been undergoing rewrites in recent years to support KMS, GEM, and other modern graphics technologies which move more of the graphical functionality      into the Linux kernel. Wayland leverages (and requires) these technologies; indeed the whole reason Wayland can exist is because of these changes. But those changes were underway for X      in general. In the future Wayland and X will both be using the same graphics drivers.
## (DRM) Direct Rendering Manager: is a subsystem of the Linux kernel responsible for interfacing with GPUs of modern video cards. DRM exposes an API that user-space programs can use to        send commands and data to the GPU and perform operations such as configuring the mode setting of the display. DRM was first developed as the kernel-space component of the X Server Direct    Rendering Infrastructure, but since then it has been used by other graphic stack alternatives such as Wayland.
   User-space programs can use the DRM API to command the GPU to do hardware-accelerated 3D rendering and video decoding, as well as GPGPU computing. ##
## (Synaptic) is a GTK3 -based graphical user interface for the APT package manager used by the Debian Linux distribution and its derivatives. Synaptic is usually used on systems based on      deb packages but can also be used on systems based on RPM packages. It can be used to install, remove and upgrade software packages and to add repositories. ##
## (xdg-open) command in the Linux system is used to open a file or URL in the user’s preferred application. The URL will be opened in the user’s preferred web browser if a URL is provided.    The file will be opened in the preferred application for files of that type if a file is provided. xdg-open supports ftp, file, https and http URLs. ##

## (WSLg) is short for Windows Subsystem for Linux GUI and the purpose of the project is to enable support for running Linux GUI applications (X11 and Wayland) on Windows in a fully            integrated desktop experience. ##
## What is XDG_RUNTIME_DIR?", it is an environment variable that is set automatically when you log in. It tells any program you run where to find a user-specific directory in which it can      store small temporary files. Note that XDG_RUNTIME_DIR is set by pam_systemd, so it is not actually related to X (running programs graphically).
## (XanMod) is a general-purpose Linux kernel distribution with custom settings and new features. Built to provide a stable, responsive and smooth desktop experience.
   The real-time version is recommended for critical runtime applications such as Linux gaming eSports, streaming, live productions and ultra-low latency enthusiasts.
   Note: The current proprietary NVIDIA, VirtualBox, VMware Workstation / Player and some other dkms modules builds do not officially support Clang'ed (EDGE) and RT kernels. ##
## (DKMS) Dynamic-Kernel-Module-Support: is a program/framework that enables generating Linux kernel modules whose sources generally reside outside the kernel source tree. The concept is to    have DKMS modules automatically rebuilt when a new kernel is installed.

@@@@ to experance WSLg you need (Windows 10 Insider Preview build 21362+) @@@@
   https://devblogs.microsoft.com/commandline/wslg-architecture/
   https://community.amd.com/t5/radeon-pro-graphics-blog/announcing-amd-support-for-gpu-accelerated-machine-learning/ba-p/414185/
   https://downloadcenter.intel.com/download/29526/
   https://developer.nvidia.com/cuda/wsl/
   https://github.com/microsoft/wslg/
   https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps/

## (evdev) short for 'event device': is a generic input event interface in the Linux kernel and FreeBSD. It generalizes raw input events from device drivers and makes them available            through character devices in the "/dev/input/" directory. The user-space library for the kernel component evdev is called "libevdev".
   
   kernel → libevdev → xf86-input-evdev → X server → X client                --> Old X.org
   kernel → libevdev → libinput → Wayland compositor → Wayland client        --> Wayland
   kernel → libevdev → libinput → xf86-input-libinput → X server → X client  --> New Xorg Since version 1.16 the xorg-xserver obtained support for libinput ##

## avoide using the below three characters in your username and password. However if you are already using it make sure to replace them as below, to avoid authentication failure:

   @==>%40
   $==>%24
   !==>%21              ##


## Linux Desktop Environments:

Xfce/Xubuntu Desktop.     --> 
Gnome3-desktop.           -->            
Gnome-Flashback-Desktop.  --> 
KDE-Plasma.               --> 
KDE-Neon                  --> Takes the latest Plasma desktop and KDE apps and builds them fresh each day for your pleasure, using the stable Ubuntu LTS base.        
LXQt Desktop.             --> 
Cinnamon Desktop.         --> 



## Linux Display-Managers:

Xorg         --> the standard display manager for X11/X-Window-server.
gdm          --> the old gnome Display manager (discontinued).
gdm3         --> The new gnome Display manager.
lightdm      --> a lightweight gdm3 compatable display manager used by many distro's. 
kdm          --> KDE Display Manager was replaced by sddm.
sddm         --> Simple Desktop Display Manager, the latest and most powerfull Display manager.         ##

## Linux Display drivers:

(KMS) Kernel Mode setting.
(GEM) Graphics Execution Manager.
(evdev) event device              ##

## Linux Display-Protocols:

tty                      --> TeleTYpewriter, is the CLI/Terminal Display/Interface of your distro. ranges from (tty, tty0 - tty63 & ttyS0 - ttyS3).
X.org/Xorg               --> uses the X11/X-Window-Server a 2D compositor that can run a 3D compositor as an extension.
Wayland                  --> uses Wayland compositor/Wayland client, it is the new standard that was made to replace the Xorg, which is a native 3D compositor.
XWayland                 --> a Microsoft developed Wayland extension for X11 backward compatability. ##


## https://www.nextofwindows.com/how-to-enable-wsl2-ubuntu-gui-and-use-rdp-to-remote. ##
## Half way through the installation you will be prompt for this configurating sddm, select "lightdm" . ##
## https://askubuntu.com/questions/872792/what-is-xdg-runtime-dir ##


sudo apt install tasksel                                 # package manager and online repository for the xubuntu-desktop.
sudo apt install cntlm                                   # If you are behind an enterprise proxy that's running NTLM authentication, you could use CNTLM.
sudo apt install synaptic                                # this is a GUI online package reporsitory. 
sudo apt install wine                                    #
sudo apt install meson libtool pkg-config g++ libsystemd-dev python3 python3-pip python3-yaml python3-mako python3-inflection


sudo apt install xserver-xorg                            #
sudo apt-get install xserver-xorg-dev xserver-xorg-core  #
sudo apt install libuv1-dev libssl-dev libhwloc-dev      # 
sudo apt install x11-apps                                # X11 client for XServer/Xwindows.
sudo apt install wayland-scanner++                       # 
sudo apt install xdg-utils                               # 

sudo apt install sddm                                    # the latest and the best (dm) Display Manager which supports both xorg & Wayland.  
sudo apt install lightdm                                 # its a lightwaite version of gdm3 that supports Wayland.

sudo apt install xrdp xorgxrdp                           # Install and configure (RDP) Microsoft-Remote-Desktop-Protocol compiled with OpenSSL 1.1.1f.
./xrdp-installer-1.2.3.sh -s                             # download the xrdp installation automation script and use the -s switch to enable audio mapping/redirection. 

sudo apt install xfce4 xfce4-goodies                     # Xfce4-Desktop-Environment, a lightweight Desktop manager for linux.

sudo apt install gnome*                                  # Gnome-Desktop-Environment.
sudo apt install gnome-session                           # 
sudo apt install lhasa jlha-utils                        # gnome lha library.
sudo tasksel install ubuntu-desktop                      # this will install the Xorg display service (the 2D disply service).

sudo apt install kubuntu-desktop                 # Kubuntu-Desktop is the KDE-desktop-Environment (highly vulnerable to read/Write attacks).
or
sudo tasksel install xubuntu-desktop             # Xubuntu-Desktop is based on xfce-desktop-Environment, which is another alternative to Kubuntu-Desktop, gnome-desktop or kdde-desktop.
sudo tasksel install xubuntu-core                # another source for Xubuntu-Desktop.

git clone https://github.com/PlayOnLinux/POL-POM-4       # for the latest version of Playonlinux.
sudo apt install playonlinux                             #

git clone https://git.launchpad.net/~ubuntu-audio-dev/pulseaudio


sudo dpkg-reconfigure sddm                               # use this to choose between the multiple display managers running on your system.
sudo dpkg --configure sddm                               # run this to configure the selected sddm.
echo $XDG_SESSION_TYPE                                   # to check the current Display manager type in your distro. 

echo $XDG_DATA_DIRS                                      # 
touch $HOME/.xsessionrc                                  # this is the x11 application disply configuration file.
sudo nano $HOME/.xsessionrc                              # edit the file and add the line below.
export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop"

$ sudo nano /etc/sudoers                                 # whatever settings you add to the sudoers file will be preserved by the system during updates/upgrades.
Defaults env_keep += "DISPLAY XAUTHORITY"
$

# use localhost:3128 (default CNTLM port) as the system-wide proxy for Ubuntu:

sudo nano /etc/cntlm.conf                                # the default settings (domain, username, password and proxy). Then restart the service.
sudo /etc/init.d/cntlm restart                           #

sudo nano /etc/ssh/sshd_config                           # Enable X11Forwarding in the ssh server.
/bin/bash /etc/X11/Xsession                              # invoke global X session script.
bash /etc/X11/Xsession                                   # same as above.
. /etc/X11/Xsession                                      # same as above.

. /etc/sddm/Xsession                                     # invoke the sddm session script that will activate Wayland in Xorg mode.
. /etc/sddm/wayland-session                              # invoke the sddm session script that will activate Wayland in Native mode.

xhost +si:localuser:root                                 # this is to allow root to access the user session to fix the Synaptic error about root access.
or
xhost +                                                  # this will diables User Access Control engine and allows clients to connect from any host.

$ xhost +
access control disabled, clients can connect from any host
$

systemctl --user status                                  # check the services ruunuing under the user profile. 

sudo -E evince                                           # sudo -E will load the app as root, (this is a security hazad and may screw your services). 
synaptic                                                 #
startxfce4                                               # start Xcfe4 Desktop Manager.
startx                                                   # start gnome (Ubuntu-Desktop-Manager).
gnome-terminal                                           # this will give error use the below with dbus.
dbus-launch gnome-terminal                               # this will lunch the GUI gnome-terminal (CLI-interface). 


# if you are using GWSL on Windows to run Linux GUI apps, make sure to set your "Windows host IP" & "ssh private key" file path under the putty section of the settings.json file to forward the display to:

C:\Users\ardal\AppData\Roaming\GWSL\settings.json  
---------------------------------------------------------# Example:
},
 "putty": {
  "ip": "192.168.1.240",
  "ssh_key": "C:/Users/ardal/.ssh/ardal_putty-key.ppk"
 },      
---------------------------------------------------------#

## Why the port change from 3389 to 3390?
   Two reasons: for better security and the main reason is that the default port 3389 is used by a process on wsl, and you will get the error message below when you try to connect:
   
   "Your computer could not connect to another console session on the remote computer because you already have a console session in progress."  ##


# change the RDP port from 3389 to 3390.
# change the max_bpp=32 to max_bpp=128 .
# change the xserverbpp=24 to xserverbpp=128.

sudo cp /etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini.bak                                       # 
sudo sed -i 's/3389/3390/g' /etc/xrdp/xrdp.ini                                          # 
sudo sed -i 's/max_bpp=32/#max_bpp=32\nmax_bpp=128/g' /etc/xrdp/xrdp.ini                # 
sudo sed -i 's/xserverbpp=24/#xserverbpp=24\nxserverbpp=128/g' /etc/xrdp/xrdp.ini       # 

# Lastly, enable Dbus:
sudo systemctl enable dbus                             # enable will set the service to autostart at reboot and startup.
sudo systemctl enable xrdp                             #  
sudo /etc/init.d/dbus start                            # or use the sudo service command.
sudo /etc/init.d/xrdp start                            #
sudo /etc/init.d/xrdp status                           # check the xrdp status.
systemctl status wslg-xwayland.socket                  # the X11 dispy forwarding setting and IP are saved in the "/etc/resolv.conf".


# from Windows-Remote-Desktop connect to (localhost:3390).


sudo update-rc.d <service_name> defaults               # "update-rc.d" command can be used when "systemd" is not the pid1 and systemctl cannot be used. 
sudo update-rc.d <service_name> enable                 # runlevel 1 to 5.
sudo update-rc.d <service_name> disable                # 
sudo update-rc.d -f <service_name> remove              # -f = force.

sudo update-rc.d dbus enable 5                         #
sudo update-rc.d xrdp enable 5                         #


from pwsh:
----------
quser                                                  # check the current connected session to your distro.

# Now launch your Windows Remote Desktop Connection, or mstsc from the Windows Start menu.
# enter localhost:3390 and connect. You will be prompt by this screen keep the session as xorg, and enter your WSL2 username and password.


# If xrdp is failing try the below steps:
-------------------------------------------------------#
# if xrdp is running, stop it then edit the "/etc/xrdp/startwm.sh" file:

sudo nano /etc/xrdp/startwm.sh                         #  

# Comment out the following two lines by adding a “#” at the beginning of each line:

test -x /etc/X11/Xsession && exec /etc/X11/Xsession
exec /bin/sh /etc/X11/Xsession

Below the now commented lines, add:
startxfce4

Save the file, start xrdp and try to connect again:

-------------------------------------------------------#
$ sudo service dbus status
 * dbus is running
$

$ sudo service xrdp status
 * xrdp-sesman is running
 * xrdp is running
$

$ sudo systemctl enable xrdp
Synchronizing state of xrdp.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable xrdp
$

$ sudo systemctl enable dbus
Synchronizing state of dbus.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable dbus
The unit files have no installation config (WantedBy=, RequiredBy=, Also=,
Alias= settings in the [Install] section, and DefaultInstance= for template
units). This means they are not meant to be enabled using systemctl.

Possible reasons for having this kind of units are:
• A unit may be statically enabled by being symlinked from another unit's
  .wants/ or .requires/ directory.
• A unit's purpose may be to act as a helper for some other unit which has
  a requirement dependency on it.
• A unit may be started when needed via activation (socket, path, timer,
  D-Bus, udev, scripted systemctl call, ...).
• In case of template units, the unit is meant to be enabled with some
  instance name specified.
$

$ sudo update-rc.d xrdp defaults
$ sudo update-rc.d xrdp enable
$ sudo update-rc.d xrdp start
* Starting Remote Desktop Protocol server        [ OK ]

$ sudo update-rc.d dbus defaults
$ sudo update-rc.d dbus enable
$ sudo update-rc.d dbus start
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
Use of uninitialized value in string eq at /usr/sbin/update-rc.d line 432.
update-rc.d: warning: start runlevel arguments (none) do not match dbus Default-Start values (2 3 4 5)
$

$ playonlinux
Looking for python... 3.8.5 - skipped
Looking for python2.7... 2.7.18 - wxversion(s): 3.0-gtk3
selected
xrdb: Connection timed out
xrdb: Can't open display '8.8.8.8:0.0'
1
Unable to access the X Display, is $DISPLAY set properly?
$

$ playonlinux
Looking for python... 3.8.5 - skipped
Looking for python2.7... 2.7.9 - Traceback (most recent call last):
  File "/usr/share/playonlinux/python/check_python.py", line 1, in <module>
    import os, wxversion
ImportError: No module named wxversion
failed tests
Looking for python2.6...
Looking for python2...
Please install python before trying to run this program
$

$ sudo nano ~/.xsessionrc
export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop"
export XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR"
export DISPLAY="192.168.1.240:0.0"
export PULSE_SERVER="tcp:192.168.1.240"
export LIBGL_ALWAYS_INDIRECT=1
export GDK_SCALE=2
export QT_SCALE_FACTOR=2
export QT_QPA_PLATFORM=xorg qpaeq
DISPLAY=$DISPLAY
XAUTHORITY=$XAUTHORITY
$

$ startx
X.Org X Server 1.20.9
X Protocol Version 11, Revision 0
Build Operating System: Linux 4.15.0-140-generic x86_64 Ubuntu
Current Operating System: Linux PineGap 5.4.72-microsoft-standard-WSL2 #1 SMP Wed Oct 28 23:40:43 UTC 2020 x86_64
Kernel command line: initrd=\initrd.img panic=-1 pty.legacy_count=0 nr_cpus=4
Build Date: 08 April 2021  12:29:22PM
xorg-server 2:1.20.9-2ubuntu1.2~20.04.2 (For technical support please see http://www.ubuntu.com/support)
Current version of pixman: 0.38.4
        Before reporting problems, check http://wiki.x.org
        to make sure that you have the latest version.
Markers: (--) probed, (**) from config file, (==) default setting,
        (++) from command line, (!!) notice, (II) informational,
        (WW) warning, (EE) error, (NI) not implemented, (??) unknown.
(==) Log file: "/var/log/Xorg.0.log", Time: Fri Jun 18 14:26:03 2021
(==) Using system config directory "/usr/share/X11/xorg.conf.d"
(EE)
Fatal server error:
(EE) no screens found(EE)
(EE)
Please consult the The X.Org Foundation support
         at http://wiki.x.org
 for help.
(EE) Please also check the log file at "/var/log/Xorg.0.log" for additional information.
(EE)
(EE) Server terminated with error (1). Closing log file.
xinit: giving up
xinit: unable to connect to X server: Connection refused
xinit: server error
Couldn't get a file descriptor referring to the console
$

$ startxfce4
/usr/bin/startxfce4: X server already running on display 192.168.1.240:0.0
dbus[632]: Unable to set up transient service directory: XDG_RUNTIME_DIR "" not available: No such file or directory
/usr/bin/iceauth:  creating new authority file /home/twrcha/ICEauthority
xfce4-session-Message: 01:38:45.342: SSH authentication agent is already running
gpg-agent[753]: WARNING: "--write-env-file" is an obsolete option - it has no effect
gpg-agent[756]: gpg-agent (GnuPG) 2.2.19 started

(xfce4-session:622): xfce4-session-WARNING **: 01:38:45.434: gpg-agent returned no PID in the variables

(xfce4-session:622): xfce4-session-WARNING **: 01:38:45.438: xfsm_manager_load_session: Something wrong with /home/twrcha/.cache/sessions/xfce4-session-192.168.1.240:0, Does it exist? Permissions issue?

(xfwm4:757): xfwm4-WARNING **: 01:38:49.397: Could not find a screen to manage, exiting

(xfsettingsd:826): xfsettingsd-CRITICAL **: 01:38:49.601: Failed to apply display settings
xfsettingsd: No window manager registered on screen 0.
xfce4-panel: No window manager registered on screen 0. To start the panel without this check, run with --disable-wm-check.

(xfce4-panel:827): Gtk-WARNING **: 01:38:55.388: Could not load a pixbuf from icon theme.
This may indicate that pixbuf loaders or the mime database could not be found.

** (wrapper-2.0:836): WARNING **: 01:38:56.036: No outputs have backlight property

(wrapper-2.0:837): GLib-GIO-CRITICAL **: 01:38:56.036: g_file_new_for_path: assertion 'path != NULL' failed

(wrapper-2.0:837): GLib-GIO-CRITICAL **: 01:38:56.037: g_file_monitor_file: assertion 'G_IS_FILE (file)' failed

(wrapper-2.0:837): GLib-GObject-WARNING **: 01:38:56.039: invalid (NULL) pointer instance

(wrapper-2.0:837): GLib-GObject-CRITICAL **: 01:38:56.039: g_signal_connect_data: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed

(wrapper-2.0:837): Gtk-WARNING **: 01:38:56.039: Attempting to add a widget with type GtkToggleButton to a container of type XfcePanelPlugin, but the widget is already inside a container of type XfcePanelPlugin, please remove the widget from its existing container first.

** (xfpm-power-backlight-helper:851): WARNING **: 01:38:56.053: failed to find any devices: Error opening directory ?/sys/class/backlight?: No such file or directory

(wrapper-2.0:837): Gtk-WARNING **: 01:38:56.222: Negative content width -3 (allocation 1, extents 2x2) while allocating gadget (node button, owner GtkToggleButton)

** (wrapper-2.0:835): WARNING **: 01:38:56.306: Binding 'XF86AudioMicMute' failed!

(wrapper-2.0:835): pulseaudio-plugin-WARNING **: 01:38:56.306: Could not have grabbed volume control keys. Is another volume control application (xfce4-volumed) running?

(wrapper-2.0:838): Gtk-WARNING **: 01:38:56.324: Negative content width -1 (allocation 1, extents 1x1) while allocating gadget (node button, owner XfceArrowButton)

(wrapper-2.0:836): Gtk-WARNING **: 01:38:56.530: Negative content width -3 (allocation 1, extents 2x2) while allocating gadget (node button, owner PowerManagerButton)
No window manager registered on screen 0. To start the xfdesktop without this check, run with --disable-wm-check.

(polkit-gnome-authentication-agent-1:1037): polkit-gnome-1-WARNING **: 01:39:13.608: Unable to determine the session we are in: No session for pid 1037

** (xfce4-screensaver:1031): WARNING **: 01:39:13.689: screensaver already running in this session
Tracker-Message: 01:39:13.884: Set scheduler policy to SCHED_IDLE
Tracker-Message: 01:39:13.884: Setting priority nice level to 19

** (xfce4-volumed:1082): WARNING **: 01:39:14.182: Binding 'XF86AudioRaiseVolume' failed!

** (xfce4-volumed:1082): WARNING **: 01:39:14.275: Binding 'XF86AudioLowerVolume' failed!

** (xfce4-volumed:1082): WARNING **: 01:39:14.321: Binding 'XF86AudioMute' failed!

** (xiccd:1032): WARNING **: 01:39:14.340: EDID is empty

** (xiccd:1032): CRITICAL **: 01:39:14.401: failed to create colord device: failed to obtain org.freedesktop.color-manager.create-device auth
Failure: Module initialization failed
Tracker-Message: 01:39:14.963: Set scheduler policy to SCHED_IDLE
Tracker-Message: 01:39:14.963: Setting priority nice level to 19
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/user/1000/runtime-twrcha'
/usr/bin/HijriApplet:432: DeprecationWarning: Gtk.StatusIcon.set_title is deprecated
  self.set_title("التقويم الهجري")
/usr/bin/HijriApplet:438: DeprecationWarning: Gtk.StatusIcon.set_tooltip_text is deprecated
  self.set_tooltip_text("%s, %d من %s لعام %d" % (week_days[W], D, months[M-1], Y))
/usr/bin/HijriApplet:441: DeprecationWarning: Gtk.StatusIcon.set_from_file is deprecated
  self.set_from_file(svg_fn)
/usr/bin/HijriApplet:204: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "homogeneous, spacing" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  vb = Gtk.VBox(False,0); self.add(vb)
/usr/bin/HijriApplet:205: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "homogeneous, spacing" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  hb = Gtk.HBox(False,0); vb.pack_start(hb,False, False, 0)
/usr/bin/HijriApplet:175: DeprecationWarning: Gtk.Image.set_from_stock is deprecated
  img.set_from_stock(stock, Gtk.IconSize.SMALL_TOOLBAR)
/usr/bin/HijriApplet:186: DeprecationWarning: Gtk.Button.set_focus_on_click is deprecated
  self.set_focus_on_click(False)
/usr/bin/HijriApplet:212: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "label" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  self.t = Gtk.Label("...")
/usr/bin/HijriApplet:222: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "homogeneous, spacing" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  hb = Gtk.HBox(False,0); vb.pack_start(hb,False, False, 0)
/usr/bin/HijriApplet:223: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "n_rows, n_columns, homogeneous" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  grid = Gtk.Table(7,6,True)
/usr/bin/HijriApplet:259: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "label" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  days_l[i] = Gtk.Label('...')
/usr/bin/HijriApplet:268: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "label" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  cell[j][i] = Gtk.Label("-")
/usr/bin/HijriApplet:269: DeprecationWarning: Gtk.Misc.set_alignment is deprecated
  cell[j][i].set_alignment(0.5,0.5)
/usr/bin/HijriApplet:227: PyGTKDeprecationWarning: Using positional arguments with the GObject constructor has been deprecated. Please specify keyword(s) for "homogeneous, spacing" or use a class specific constructor. See: https://wiki.gnome.org/PyGObject/InitializerDeprecations
  hb = Gtk.HBox(False,0); vb.pack_start(hb,False, False, 0)
blueman-applet version 2.1.2 starting
qt.qpa.plugin: Could not find the Qt platform plugin "xorg" in ""
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx, xcb.

Stale PID, overwriting
/usr/bin/HijriApplet:447: DeprecationWarning: Gtk.StatusIcon.set_visible is deprecated
  self.set_visible(True)
/usr/bin/HijriApplet:544: DeprecationWarning: Gtk.ImageMenuItem.new_from_stock is deprecated
  i = Gtk.ImageMenuItem.new_from_stock(Gtk.STOCK_OPEN, None)
/usr/bin/HijriApplet:546: DeprecationWarning: Gtk.ImageMenuItem.set_always_show_image is deprecated
  i.set_always_show_image(True)
/usr/bin/HijriApplet:454: PyGIDeprecationWarning: GObject.timeout_add is deprecated; use GLib.timeout_add instead
  GObject.timeout_add(5000, self.update)
blueman-applet 01.39.17 ERROR    PluginManager:90 load_plugin: Unable to load plugin module KillSwitch
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/blueman/main/PluginManager.py", line 88, in load_plugin
    importlib.import_module(self.module_path.__name__ + ".%s" % plugin)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/lib/python3/dist-packages/blueman/plugins/applet/KillSwitch.py", line 23, in <module>
    raise ImportError('Hardware kill switch not found')
ImportError: Hardware kill switch not found
Traceback (most recent call last):
  File "/usr/share/backintime/common/backintime.py", line 27, in <module>
    import config
  File "/usr/share/backintime/common/config.py", line 32, in <module>
    import tools
  File "/usr/share/backintime/common/tools.py", line 51, in <module>
blueman-applet 01.39.17 WARNING  PluginManager:147 __load_plugin: Not loading PPPSupport because its conflict has higher priority
    import dbus
ModuleNotFoundError: No module named 'dbus'
blueman-tray version 2.1.2 starting
Stale PID, overwriting
blueman-tray version 2.1.2 starting
There is an instance already running
blueman-applet 01.39.18 WARNING  PluginManager:147 __load_plugin: Not loading DhcpClient because its conflict has higher priority
replace called with invalid arguments, docId: 2877628090384 url: "/home/twrcha/"

(wrapper-2.0:835): libnotify-WARNING **: 01:39:21.356: Failed to connect to proxy

(wrapper-2.0:835): pulseaudio-plugin-WARNING **: 01:39:21.356: Disconected from the PulseAudio server. Attempting to reconnect in 5 seconds.

(wrapper-2.0:835): Gtk-WARNING **: 01:39:21.407: Negative content width -3 (allocation 1, extents 2x2) while allocating gadget (node button, owner PulseaudioButton)
qt.qpa.plugin: Could not find the Qt platform plugin "xorg" in ""
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx, xcb.

qt.qpa.plugin: Could not find the Qt platform plugin "xorg" in ""
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx, xcb.

qt.qpa.plugin: Could not find the Qt platform plugin "xorg" in ""
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx, xcb.


(xfce4-volumed:1082): libnotify-WARNING **: 01:39:39.409: Failed to connect to proxy

(xfce4-volumed:1082): xfce4-volumed-CRITICAL **: 01:39:39.409: xvd_context_state_callback: The connection failed or was disconnected, is PulseAudio Daemon running?
blueman-applet 01.39.43 WARNING  DiscvManager:109 update_menuitems: warning: Adapter is None
VLC media player 3.0.9.2 Vetinari (revision 3.0.9.2-0-gd4c1aefe4d)
[000055f0ca1c85b0] main libvlc: Running vlc with the default interface. Use 'cvlc' to use vlc without interface.
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/user/1000/runtime-twrcha'
[000055f0ca267390] main playlist: playlist is empty
$

$ ./xrdp-installer-1.2.3.sh -s

   !---------------------------------------------------------------!
   !   xrdp-installer-1.2.3 Script                                 !
   !   Support 18.04/20.04/20.10/21.04                             !
   !   Written by Griffon - Nov 2020 - www.c-nergy.be              !
   !                                                               !
   !   For Help and Syntax, type ./xrdp-installer-1.2.3.sh -h      !
   !                                                               !
   !---------------------------------------------------------------!

   !-------------------------------------------------------------!
   !  Standard user detected....Proceeding....                   !
   !-------------------------------------------------------------!

   |-| Detecting Ubuntu version
       |-| Ubuntu Version : Ubuntu 20.04.2 LTS


 |-| Detecting xserver-xorg-core package installed
        |-| xorg package version: xserver-xorg-core

   !-------------------------------------------------------------!
   !  Standard Installation Mode Selected - U18.04 and later     !
   !-------------------------------------------------------------!


   !---------------------------------------------!
   !   Installing XRDP Packages...Proceeding...  !
   !---------------------------------------------!

Reading package lists... Done
Building dependency tree
Reading state information... Done
xrdp is already the newest version (0.9.12-1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

   !---------------------------------------------!
   !   Installing Gnome Tweak...Proceeding...    !
   !---------------------------------------------!

Reading package lists... Done
Building dependency tree
Reading state information... Done
gnome-tweak-tool is already the newest version (3.34.0-2ubuntu1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

   !---------------------------------------------!
   !   Granting Console Access...Proceeding...   !
   !---------------------------------------------!


   !---------------------------------------------!
   !   Creating Polkit File...Proceeding...      !
   !---------------------------------------------!


   !---------------------------------------------!
   !   Fix Theme and extensions...Proceeding...  !
   !---------------------------------------------!



   !---------------------------------------------!
   ! Fixing SSL Cert Issue ...                   !
   !---------------------------------------------!

xrdp ssl-cert
   !--xrdp already member ssl-cert...Skipping ---!

   !---------------------------------------------!
   !   Enabling Sound Redirection...             !
   !---------------------------------------------!

Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
........................
Reading package lists... Done
Reading package lists... Done
Building dependency tree
Reading state information... Done
Note, selecting 'libsndfile1-dev' instead of 'libsndfile-dev'
autoconf is already the newest version (2.69-11.1).
dpkg-dev is already the newest version (1.19.7ubuntu3).
libcap-dev is already the newest version (1:2.32-1).
libsndfile1-dev is already the newest version (1.0.28-7).
libtool is already the newest version (2.4.6-14).
m4 is already the newest version (1.4.18-4).
intltool is already the newest version (0.51.0-5ubuntu1).
build-essential is already the newest version (12.8ubuntu1.1).
git is already the newest version (1:2.25.1-1ubuntu3.1).
libjson-c-dev is already the newest version (0.13.1+dfsg-7ubuntu0.3).
libpulse-dev is already the newest version (1:13.99.1-1ubuntu3.10).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Reading package lists... Done
Building dependency tree
Reading state information... Done
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
NOTICE: 'pulseaudio' packaging is maintained in the 'Git' version control system at:
https://git.launchpad.net/~ubuntu-audio-dev/pulseaudio
Please use:
git clone https://git.launchpad.net/~ubuntu-audio-dev/pulseaudio
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 2,113 kB of source archives.
Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main pulseaudio 1:13.99.1-1ubuntu3.10 (dsc) [3,863 B]
Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main pulseaudio 1:13.99.1-1ubuntu3.10 (tar) [1,956 kB]
Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main pulseaudio 1:13.99.1-1ubuntu3.10 (diff) [153 kB]
Fetched 2,113 kB in 0s (6,302 kB/s)
dpkg-source: info: extracting pulseaudio in pulseaudio-13.99.1
dpkg-source: info: unpacking pulseaudio_13.99.1.orig.tar.xz
dpkg-source: info: unpacking pulseaudio_13.99.1-1ubuntu3.10.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying git_cherrypick_fixes.patch
dpkg-source: info: applying disable-autospawn.patch
dpkg-source: info: applying git_config_upgrade.patch
dpkg-source: warning: diff 'pulseaudio-13.99.1/debian/patches/git_config_upgrade.patch' patches file pulseaudio-13.99.1/src/modules/module-stream-restore.c more than once
dpkg-source: info: applying 0032-alsa-mixer-store-the-ucm_device-with-the-order-of-th.patch
dpkg-source: info: applying 0033-alsa-make-the-unsuspend-more-robust.patch
dpkg-source: info: applying 0034-alsa-adjust-ucm-sink-source-priority-according-to-po.patch
dpkg-source: info: applying 0035-ucm-add-possibility-to-skip-the-UCM-card-completely-.patch
dpkg-source: info: applying 0036-device-port-queue-CARD-CHANGE-event-before-update-de.patch
dpkg-source: info: applying 0001-volume-config-changes.patch
dpkg-source: info: applying 0016-nodisplay-autostart.patch
dpkg-source: info: applying 0030-load-module-switch-on-connect.patch
dpkg-source: info: applying gitlab_jack_identifier.patch
dpkg-source: info: applying 0001-alsa-mixer-Recognize-USB-audio-jack-mixer.patch
dpkg-source: info: applying 0002-module-alsa-card-Set-a-minimum-profile-priority-if-i.patch
dpkg-source: info: applying 0001-alsa-mixer-Add-support-for-HP-Thunderbolt-Dock.patch
dpkg-source: info: applying 0002-alsa-mixer-Expand-comments-in-the-HP-Thunderbolt-Doc.patch
dpkg-source: info: applying 0406-tagstruct-add-copy-method.patch
dpkg-source: info: applying 0407-access-Add-access-control-hooks.patch
dpkg-source: info: applying 0408-protocol-native-add-access-checks.patch
dpkg-source: info: applying 0409-fix-arg-parsing-after-async-hook.patch
dpkg-source: info: applying 0410-pa-client-peer-apparmor-label.patch
dpkg-source: info: applying 0700-modules-add-snappy-policy-module.patch
dpkg-source: info: applying 0701-enable-snap-policy-module.patch
dpkg-source: info: applying 0702-add-snappy-policy-module.patch
dpkg-source: info: applying 0703-switch-on-unknown.patch
N: [pulseaudio] main.c: System mode refused for non-root user. Only starting the D-Bus server lookup service.
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether UID '0' is supported by ustar format... yes
checking whether GID '0' is supported by ustar format... yes
checking how to create a ustar tar archive... gnutar
checking whether to enable maintainer-specific portions of Makefiles... yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for stow... no
checking whether make supports nested variables... (cached) yes
checking whether ln -s works... yes
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables...
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of gcc... gcc3
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking whether gcc needs -traditional... no
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether g++ supports C++11 features by default... yes
checking for gm4... no
checking for m4... m4
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for a sed that does not truncate output... /usr/bin/sed
checking whether NLS is requested... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for msgmerge... /usr/bin/msgmerge
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for shared library run path origin... done
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... yes
checking whether to use NLS... yes
checking where the gettext function comes from... libc
checking host operating system... linux
checking whether C compiler accepts -std=gnu11... yes
checking whether C compiler accepts -Wall... yes
checking whether C compiler accepts -W... yes
checking whether C compiler accepts -Wextra... yes
checking whether C compiler accepts -pipe... yes
checking whether C compiler accepts -Wno-long-long... yes
checking whether C compiler accepts -Wno-overlength-strings... yes
checking whether C compiler accepts -Wunsafe-loop-optimizations... yes
checking whether C compiler accepts -Wundef... yes
checking whether C compiler accepts -Wformat=2... yes
checking whether C compiler accepts -Wlogical-op... yes
checking whether C compiler accepts -Wsign-compare... yes
checking whether C compiler accepts -Wformat-security... yes
checking whether C compiler accepts -Wmissing-include-dirs... yes
checking whether C compiler accepts -Wformat-nonliteral... yes
checking whether C compiler accepts -Wold-style-definition... no
checking whether C compiler accepts -Wpointer-arith... yes
checking whether C compiler accepts -Winit-self... yes
checking whether C compiler accepts -Wdeclaration-after-statement... yes
checking whether C compiler accepts -Wfloat-equal... yes
checking whether C compiler accepts -Wmissing-prototypes... yes
checking whether C compiler accepts -Wstrict-prototypes... no
checking whether C compiler accepts -Wredundant-decls... yes
checking whether C compiler accepts -Wmissing-declarations... yes
checking whether C compiler accepts -Wmissing-noreturn... yes
checking whether C compiler accepts -Wshadow... yes
checking whether C compiler accepts -Wendif-labels... yes
checking whether C compiler accepts -Wcast-align... yes
checking whether C compiler accepts -Wstrict-aliasing... yes
checking whether C compiler accepts -Wwrite-strings... yes
checking whether C compiler accepts -Wno-unused-parameter... yes
checking whether C compiler accepts -fno-common... yes
checking whether C compiler accepts -fdiagnostics-show-option... yes
checking whether C compiler accepts -fdiagnostics-color=auto... yes
checking whether the linker accepts "-Wl,-version-script=./src/map-file"... yes
checking whether the linker accepts -Wl,-z,now... yes
checking whether the linker accepts -Wl,-z,nodelete... yes
checking whether the linker accepts -Wl,--no-undefined... yes
checking whether gcc knows __atomic_store_n()... yes
checking whether gcc knows __sync_bool_compare_and_swap()... yes
checking how to print strings... printf
checking for a sed that does not truncate output... (cached) /usr/bin/sed
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... mt
checking if mt is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for shl_load... no
checking for shl_load in -ldld... no
checking for dlopen... no
checking for dlopen in -ldl... yes
checking whether a program can dlopen itself... yes
checking whether a statically linked program can dlopen itself... no
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... no
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking ltdl.h usability... yes
checking ltdl.h presence... yes
checking for ltdl.h... yes
checking for lt_dladvise_init in -lltdl... yes
checking for ANSI C header files... (cached) yes
checking for arpa/inet.h... yes
checking for cpuid.h... yes
checking for glob.h... yes
checking for grp.h... yes
checking for netdb.h... yes
checking for netinet/in.h... yes
checking for netinet/in_systm.h... yes
checking for netinet/tcp.h... yes
checking for poll.h... yes
checking for pwd.h... yes
checking for sched.h... yes
checking for sys/mman.h... yes
checking for sys/select.h... yes
checking for sys/socket.h... yes
checking for sys/wait.h... yes
checking for sys/uio.h... yes
checking for syslog.h... yes
checking for sys/dl.h... no
checking for dlfcn.h... (cached) yes
checking for linux/sockios.h... yes
checking for sys/prctl.h... yes
checking for sys/conf.h... no
checking for sys/filio.h... no
checking for windows.h... no
checking for winsock2.h... no
checking for ws2tcpip.h... no
checking for sys/atomic.h... no
checking for sys/ioctl.h... yes
checking for byteswap.h... yes
checking for sys/syscall.h... yes
checking for sys/eventfd.h... yes
checking for execinfo.h... yes
checking for langinfo.h... yes
checking for regex.h... yes
checking for pcreposix.h... yes
checking for locale.h... yes
checking for xlocale.h... no
checking for valgrind/memcheck.h... yes
checking for netinet/ip.h... yes
checking sys/resource.h usability... yes
checking sys/resource.h presence... yes
checking for sys/resource.h... yes
checking sys/un.h usability... yes
checking sys/un.h presence... yes
checking for sys/un.h... yes
checking linux/input.h usability... yes
checking linux/input.h presence... yes
checking for linux/input.h... yes
checking for an ANSI C-conforming const... yes
checking whether byte ordering is bigendian... no
checking for pid_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking for off_t... yes
checking for uid_t in sys/types.h... yes
checking whether environ is declared... yes
checking size of void*... 8
checking whether __x86_64__ is declared... yes
checking for SIGXCPU defined in signal.h... yes
checking for INADDR_NONE defined in netinet/in.h... yes
checking whether gcc knows _Bool... yes
checking for library containing pow... -lm
checking for library containing sched_setscheduler... none required
checking for library containing dlopen... -ldl
checking for library containing shm_open... -lrt
checking for library containing inet_ntop... none required
checking for library containing timer_create... none required
checking for library containing pthread_setaffinity_np... -lpthread
checking for library containing pthread_getname_np... none required
checking for library containing pthread_setname_np... none required
checking for library containing connect... none required
checking for library containing backtrace... none required
checking for library containing regexec... none required
checking for getopt_long... yes
checking for lrintf... yes
checking for strtof... yes
checking for chmod... yes
checking for chown... yes
checking for fstat... yes
checking for fchown... yes
checking for fchmod... yes
checking for clock_gettime... yes
checking for getaddrinfo... yes
checking for getgrgid_r... yes
checking for getgrnam_r... yes
checking for getpwnam_r... yes
checking for getpwuid_r... yes
checking for gettimeofday... yes
checking for getuid... yes
checking for mlock... yes
checking for nanosleep... yes
checking for pipe... yes
checking for posix_fadvise... yes
checking for posix_madvise... yes
checking for posix_memalign... yes
checking for setpgid... yes
checking for setsid... yes
checking for shm_open... yes
checking for sigaction... yes
checking for sleep... yes
checking for symlink... yes
checking for sysconf... yes
checking for uname... yes
checking for pthread_setaffinity_np... yes
checking for pthread_getname_np... yes
checking for pthread_setname_np... yes
checking for readlink... yes
checking for ctime_r... yes
checking for usleep... yes
checking for strerror_r... yes
checking for lstat... yes
checking for paccept... no
checking for setresuid... yes
checking for setresgid... yes
checking for setreuid... yes
checking for setregid... yes
checking for seteuid... yes
checking for setegid... yes
checking for ppoll... yes
checking for strsignal... yes
checking for sig2str... no
checking for strtod_l... yes
checking for pipe2... yes
checking for accept4... yes
checking for open64... yes
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking type of array argument to getgroups... gid_t
checking for getgroups... yes
checking for working getgroups... yes
checking for mkfifo... yes
checking for working alloca.h... yes
checking for alloca... yes
checking for regexec... yes
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for library containing dladdr... none required
checking for iconv... yes
checking for working iconv... yes
checking for iconv declaration...
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking whether SYS_memfd_create is declared... yes
checking for memfd_create... yes
checking for X11... yes
checking for library containing cap_init... -lcap
checking sys/capability.h usability... yes
checking sys/capability.h presence... yes
checking for sys/capability.h... yes
checking for LIBCHECK... yes
checking for LIBSNDFILE... yes
checking whether we need libatomic_ops... no
checking for TDB... yes
checking sys/soundcard.h usability... yes
checking sys/soundcard.h presence... yes
checking for sys/soundcard.h... yes
checking whether SOUND_PCM_READ_RATE is declared... yes
checking whether SOUND_PCM_READ_CHANNELS is declared... yes
checking whether SOUND_PCM_READ_BITS is declared... yes
checking CoreAudio/CoreAudio.h usability... no
checking CoreAudio/CoreAudio.h presence... no
checking for CoreAudio/CoreAudio.h... no
checking for ASOUNDLIB... yes
checking alsa/use-case.h usability... yes
checking alsa/use-case.h presence... yes
checking for alsa/use-case.h... yes
checking sys/audio.h usability... no
checking sys/audio.h presence... no
checking for sys/audio.h... no
checking for mmsystem.h... no
checking for GLIB20... yes
checking for GTK30... yes
checking for GSETTINGS... yes
checking for GCONF... no
checking for pkg-config... (cached) /usr/bin/pkg-config
checking pkg-config is at least version 0.16... yes
checking for AVAHI... yes
checking for JACK... yes
checking for LIBASYNCNS... yes
checking for tcpwrap library and headers... yes
checking lirc/lirc_client.h usability... yes
checking lirc/lirc_client.h presence... yes
checking for lirc/lirc_client.h... yes
checking for lirc_init in -llirc_client... yes
checking for DBUS... yes
checking for SBC... yes
checking for BLUEZ... yes
checking for UDEV... yes
checking for OPENSSL... yes
checking for FFTW... yes
checking for LIBSPEEX... yes
checking for LIBSOXR... yes
checking for ORC... yes
checking for usable orcc... /usr/bin/orcc
checking for SYSTEMD... yes
checking for GSTREAMER... yes
checking for WEBRTC... yes
checking for thread local storage (TLS) class... __thread
checking for the pthreads library -lpthreads... no
checking whether pthreads work without any flags... yes
checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE
checking if more special flags are required for pthreads... no
checking for PTHREAD_PRIO_INHERIT... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating man/Makefile
config.status: creating libpulse.pc
config.status: creating libpulse-simple.pc
config.status: creating libpulse-mainloop-glib.pc
config.status: creating doxygen/Makefile
config.status: creating doxygen/doxygen.conf
config.status: creating src/pulse/version.h
config.status: creating po/Makefile.in
config.status: creating man/pulseaudio.1.xml
config.status: creating man/pax11publish.1.xml
config.status: creating man/pacat.1.xml
config.status: creating man/pacmd.1.xml
config.status: creating man/pactl.1.xml
config.status: creating man/pasuspender.1.xml
config.status: creating man/padsp.1.xml
config.status: creating man/pulse-daemon.conf.5.xml
config.status: creating man/pulse-client.conf.5.xml
config.status: creating man/default.pa.5.xml
config.status: creating man/pulse-cli-syntax.5.xml
config.status: creating man/start-pulseaudio-x11.1.xml
config.status: creating man/esdcompat.1.xml
config.status: creating src/esdcompat
config.status: creating src/start-pulseaudio-x11
config.status: creating src/client.conf
config.status: creating src/daemon.conf
config.status: creating src/default.pa
config.status: creating src/system.pa
config.status: creating src/pulseaudio.service
config.status: creating PulseAudioConfig.cmake
config.status: creating PulseAudioConfigVersion.cmake
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing po-directories commands
config.status: creating po/POTFILES
config.status: creating po/Makefile
config.status: executing libtool commands

 ---{ pulseaudio 13.99.1 }---

    prefix:                        /usr/local
    sysconfdir:                    ${prefix}/etc
    localstatedir:                 ${prefix}/var
    modlibexecdir:                 ${exec_prefix}/lib/pulse-13.99/modules
    System Runtime Path:           /usr/local/var/run/pulse
    System State Path:             /usr/local/var/lib/pulse
    System Config Path:            /usr/local/var/lib/pulse
    Zsh completions directory:     ${datarootdir}/zsh/site-functions
    Bash completions directory:    ${datarootdir}/bash-completion/completions
    Compiler:                      gcc
    CFLAGS:                        -g -O2 -Wall -W -Wextra -pipe -Wno-long-long -Wno-overlength-strings -Wunsafe-loop-optimizations -Wundef -Wformat=2 -Wlogical-op -Wsign-compare -Wformat-security -Wmissing-include-dirs -Wformat-nonliteral -Wpointer-arith -Winit-self -Wdeclaration-after-statement -Wfloat-equal -Wmissing-prototypes -Wredundant-decls -Wmissing-declarations -Wmissing-noreturn -Wshadow -Wendif-labels -Wcast-align -Wstrict-aliasing -Wwrite-strings -Wno-unused-parameter -fno-common -fdiagnostics-show-option -fdiagnostics-color=auto
    CPPFLAGS:                      -DFASTPATH -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
    LIBS:                          -lcap -lpthread -lrt -ldl -lm

    Enable memfd shared memory:    yes
    Enable X11:                    yes
    Enable OSS Output:             yes
    Enable OSS Wrapper:            yes
    Enable EsounD:                 yes
    Enable Alsa:                   yes
    Enable CoreAudio:              no
    Enable Solaris:                no
    Enable WaveOut:                no
    Enable GLib 2.0:               yes
    Enable Gtk+ 3.0:               yes
    Enable GConf:                  no
    Enable GSettings:              yes
    Enable Avahi:                  yes
    Enable Jack:                   yes
    Enable Async DNS:              yes
    Enable LIRC:                   yes
    Enable D-Bus:                  yes
      Enable BlueZ 5:              yes
        Enable ofono headsets:     yes
        Enable native headsets:    yes
    Enable udev:                   yes
      Enable HAL->udev compat:     yes
    Enable systemd
      Daemon (Socket Activation):  yes
      Login (Session Tracking):    yes
      Journal (Logging):           yes
    Enable TCP Wrappers:           yes
    Enable libsamplerate:          no
    Enable IPv6:                   yes
    Enable OpenSSL (for Airtunes): yes
    Enable fftw:                   yes
    Enable orc:                    yes
    Enable Adrian echo canceller:  yes
    Enable speex (resampler, AEC): yes
    Enable soxr (resampler):       yes
    Enable WebRTC echo canceller:  yes
    Enable GStreamer-based RTP:    no
    Enable gcov coverage:          no
    Enable unit tests:             yes
    Database
      tdb:                         yes
      gdbm:                        no
      simple database:             no

    System User:                   pulse
    System Group:                  pulse
    Access Group:                  pulse-access
    Enable per-user EsounD socket: yes
    Force preopen:                 no
    Preopened modules:             all

    Legacy Database Entry Support: yes

Cloning into 'pulseaudio-module-xrdp'...
remote: Enumerating objects: 293, done.
remote: Counting objects: 100% (24/24), done.
remote: Compressing objects: 100% (21/21), done.
remote: Total 293 (delta 10), reused 11 (delta 3), pack-reused 269
Receiving objects: 100% (293/293), 119.27 KiB | 2.09 MiB/s, done.
Resolving deltas: 100% (159/159), done.
autoreconf: Entering directory `.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4
aclocal: warning: couldn't open directory 'm4': No such file or directory
autoreconf: configure.ac: tracing
autoreconf: configure.ac: creating directory build-aux
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
libtoolize: copying file 'build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
libtoolize: copying file 'm4/libtool.m4'
libtoolize: copying file 'm4/ltoptions.m4'
libtoolize: copying file 'm4/ltsugar.m4'
libtoolize: copying file 'm4/ltversion.m4'
libtoolize: copying file 'm4/lt~obsolete.m4'
autoreconf: running: /usr/bin/autoconf --force
autoreconf: running: /usr/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:12: installing 'build-aux/ar-lib'
configure.ac:12: installing 'build-aux/compile'
configure.ac:36: installing 'build-aux/config.guess'
configure.ac:36: installing 'build-aux/config.sub'
configure.ac:13: installing 'build-aux/install-sh'
configure.ac:13: installing 'build-aux/missing'
src/Makefile.am: installing 'build-aux/depcomp'
autoreconf: Leaving directory `.'
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables...
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking for ar... ar
checking the archiver (ar) interface... ar
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports the include directive... yes (GNU style)
checking whether make supports nested variables... yes
checking dependency style of gcc... gcc3
checking whether make supports nested variables... (cached) yes
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking whether make supports nested variables... (cached) yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 1572864
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /usr/bin/dd
checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
checking for mt... mt
checking if mt is a manifest tool... no
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... no
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for gawk... (cached) gawk
checking for gcc... (cached) gcc
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to accept ISO C89... (cached) none needed
checking whether gcc understands -c and -o together... (cached) yes
checking how to run the C preprocessor... gcc -E
checking whether ln -s works... yes
checking whether make sets $(MAKE)... (cached) yes
checking for LIBPULSE... yes
checking for prefix by checking for pulseaudio... /usr/bin/pulseaudio
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking for unistd.h... (cached) yes
checking for int64_t... yes
checking for size_t... yes
checking for uint32_t... yes
checking for memset... yes
checking for socket... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating config_ac.h
config.status: executing depfiles commands
config.status: executing libtool commands
make  all-recursive
make[1]: Entering directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp'
Making all in src
make[2]: Entering directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp/src'
  CC       module_xrdp_sink_la-module-xrdp-sink.lo
  CCLD     module-xrdp-sink.la
  CC       module_xrdp_source_la-module-xrdp-source.lo
  CCLD     module-xrdp-source.la
make[2]: Leaving directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp/src'
make[2]: Entering directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp'
make[2]: Nothing to be done for 'all-am'.
make[2]: Leaving directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp'
make[1]: Leaving directory '/tmp/pulseaudio-13.99.1/pulseaudio-module-xrdp'


   !----------------------------------------------------------------!
   ! Installation Completed...Please test your xRDP configuration   !
   ! If Sound option selected, shutdown your machine completely     !
   ! start it again to have sound working as expected               !
   !                                                                !
   ! Credits : Written by Griffon - Dec. 2020                       !
   !           www.c-nergy.be -xrdp-installer-v1.2.3.sh             !
   !           ver 1.2.3                                            !
   !----------------------------------------------------------------!
$
-----------------------------------------------------------------------------------------

###################################
#  Adding other language support  #
###################################
## WSL2 by default enables only the UTF-8 US English language "en_US.UTF-8 UTF-8" by editing the "/etc/locale.gen" file you can ebable of the other english modules such as
   "en_US ISO-8859-1" & "en_US.ISO-8859-15 ISO-8859-15" in addtion to any other languages you may need. ## 
## system default (English) is an LRT language, while (Arabic) is a RLT language. ##
## This metapackage depends on all packages that provide native language support for applications. (like spell checkers, dictionaries, OpenOffice and Mozilla locale packages, etc.).
   If you also want your applications and the desktop to be translated, please additionally install language-pack-[cod]. ##
## [cod] is the requested language code "en" for english & "ar" for Arabic, etc.. ## 

sudo apt install console-common                           # select keep kernel keymap.
sudo apt install convmv                                   # 
sudo apt install fonts-arabeyes fonts-kacst               # Arabic fots.
sudo update-locale LC_CTYPE=en_US.UTF-8                   # fix the broken local language (default is UTF-8 US english).
convmv -r -f windows-1252 -t UTF-8                        # (Not working) change the arabic files encoding to UTF-8, to fix the broken characters names. 
or
convmv -r -f windows-1256 -t UTF-8                        # (Not working)

sudo nano /etc/locale.gen                                 # unhash the language you want to enable, for example:
------------------------------
ar_IQ ISO-8859-6
ar_IQ.UTF-8 UTF-8
------------------------------
sudo locale-gen                                           # run this to enable the installed and unhashed languages.
locale -a

sudo apt install language-selector-gnome                  # 

sudo apt install language-pack-ar                         # "ar" for Arabic language pack.

sudo apt install language-pack-[cod] language-pack-gnome-[cod] language-pack-[cod]-base language-pack-gnome-[cod]-base 

check-language-support -l [cod]                           # install the resulted libraries as below. 

sudo apt install `check-language-support -l [cod]   `     # 
or
sudo apt install fonts-noto-core fonts-noto-ui-core       # fonts for Arabic language.

sudo apt install language-support-[cod]                   # (Obsolete) add a language to Ubuntu using the Software Center:

sudo apt install libfribidi0 libfribidi-dev               #
sudo apt install mlterm                                   # addtional package to show Arabic text properly.
sudo apt build-dep mlterm                                 #

sudo nano /usr/share/applications/gnome-terminal.desktop  # add the below two lines to enable the mlterm package. you have to have gnome GUI installed.
-------------------------
Terminal=true
Exec=/usr/bin/bicon.bin
-------------------------

localectl set-locale LANG="en_US.UTF-8"                  # set the locale language to UTF-8 US English.
localectl set-x11-keymap us                              # set the keyboard kayout to English US.

sudo touch /etc/locale.conf                              # create the localisation setting file.
sudo nano /etc/locale.conf                               # add the localisation setting language.  
-----------------
LANG=en_US.UTF-8
-----------------


sudo touch /etc/vconsole.conf                            # create the config file that holds the keybaord layout settings.
sudo nano /etc/vconsole.conf                             # set the keyboard layout to US english.
-----------
KEYMAP=US
-----------

--------
 Error :
--------------------------------------------------------------------------
update-inetd: warning: cannot add service, /etc/inetd.conf does not exist

colord.service is a disabled or a static unit, not starting it.

Creating config file /etc/gdm3/greeter.dconf-defaults with new version
gdm.service is not active, cannot reload.
invoke-rc.d: initscript gdm3, action "reload" failed.
--------------------------------------------------------------------------

mkdir -p ~/.local/share/applications                                                                                            #
sed '/^OnlyShowIn/d' /usr/share/applications/gnome-terminal.desktop > ~/.local/share/applications/gnome-terminal.desktop        #

--------------------------------------------------------------------------
$ locale -a
ar_AE.utf8
C
C.UTF-8
en_US.utf8
he_IL.utf8
POSIX
$

$ sudo locale-gen
Generating locales (this might take a while)...
  ar_AE.UTF-8... done
  ar_BH.UTF-8... done
  ar_DZ.UTF-8... done
  ar_EG.UTF-8... done
  ar_IN.UTF-8... done
  ar_IQ.UTF-8... done
  ar_JO.UTF-8... done
  ar_KW.UTF-8... done
  ar_LB.UTF-8... done
  ar_LY.UTF-8... done
  ar_MA.UTF-8... done
  ar_OM.UTF-8... done
  ar_QA.UTF-8... done
  ar_SA.UTF-8... done
  ar_SD.UTF-8... done
  ar_SS.UTF-8... done
  ar_SY.UTF-8... done
  ar_TN.UTF-8... done
  ar_YE.UTF-8... done
  en_US.UTF-8... done
  he_IL.UTF-8... done
Generation complete.
$

$ locale
LANG=en_US.UTF-8
LANGUAGE=
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=
$

$ localectl
   System Locale: LANG=en_US.utf8
       VC Keymap: n/a
      X11 Layout: us
       X11 Model: pc105
$

$ localectl set-x11-keymap us
$ localectl
   System Locale: LANG=en_US.utf8
       VC Keymap: us
      X11 Layout: us
$
-----------------------------------------------------------------------


#######################################################################
# Install Updatedb & the locate command filesystem indexing database  #
#######################################################################
## to prevent the updatedb from indexing windows filesystem "/mint/c". ##

sudo apt install mlocate                                  # installes the "locate, mlocate, slocate" commands along with the "updatedb" filesystem index database.

sudo sed -i "s/^ *PRUNEFS *= *[\"']/&drvfs 9p /" /etc/updatedb.conf /etc/cron.daily/mlocate

sudo updatedb                                             # 

mlocate <fileName> 

# if the installation got interrupted got a lock, follow the below steps:

sudo lsof /var/lib/dpkg/lock                              #
or 
sudo lsof /var/lib/apt/lists/lock                         #
or
sudo lsof /var/lib/dpkg/lock-frontend                     #

sudo kill -9 <pid>                                        # kill a process.
sudo dpkg --configure -a                                  # fix dpkg issues.


######################
# Printing in Linux  #
######################
# o print a document on the default printer, just use the lp command followed by the name of the file you want to print. If the filename includes blanks (rare on Linux systems), either put the name in quotes or start entering the file name and press the tab key to invoke file completion (see below example).

sudo apt install cups-client                            # install the printing library and the "lpoptions" command.

lp "never leave home angry"                             # then press Tab.
lp never\ leave\ home\ angry                            # the file name with the print auto complete.
lpr <file path & name>                                  # if no files are listed on the command-line, lpr reads the print file from the standard input.
lpinfo -v                                               # list the printer drivers and related information.
lpstat -p -d                                            # list all the printers.
lpstat -p                                               # will show the status of the default printer.

lpoptions                                               # lookup your printer setting.
lpoptions | tr " " '\n'                                 # organise the output.
lpoptions -p LaserJet                                   # 


###################
#  Install CMake  #
###################

# (CMake) is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and   compiler independent configuration files, and generate native makefiles and workspaces that can be used in the compiler environment of your choice. The suite of CMake tools were created     by Kitware in response to the need for a powerful, cross-platform build environment for open-source projects such as ITK and VTK.

sudo apt install cmake                       # @@@ this is the default cmake v3.16.3 for your distro, you have to purge it before upgrading to the latest v3.20.2 @@@#

sudo apt install build-essential libssl-dev

sudo apt remove --purge cmake
hash -r

install using snap:
----------------------
sudo snap install cmake --classic
cmake --version


install using source:
---------------------
wget https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz
tar -zxvf cmake-3.20.2.tar.gz
cd cmake-3.20.2
./bootstrap
make 
sudo make install


#######################################################################################################
# Install "Exa" command & "Cargo" the package manager for "rust" programing language offical compiler #
#######################################################################################################
## installing cargo will enable the "apt build-dep" option. Which checks the package dependencies and allow you to install them.
   also edit the "/etc/apt/source.list" file and enable (un-hash) the "deb-src" sources only for the enabled "deb" sources, this will allow the "apt build-dep" to function. ##
## be sure to add "$HOME/.cargo/bin" to your PATH to be able to run the installed binaries. ## 

sudo apt install cargo                                    # this will install cargo.
cargo install exa                                         # (exa) command installation under the user profile "$HOME/.cargo/bin", the new replacment to "ls" command.

## using sudo to install (exa) command will install it under the root profile "/root/.cargo/bin" not the user profile. ##


##########################################################
# Install & configure (Snap) package manager environment #
##########################################################

## The Windows convention is to use a backward slash (\) as the separator in a path. UNIX systems use a forward slash (/). Throughout ArcGIS, it doesn't matter whether you use a forward or    backward slash in your path—ArcGIS will always translate forward and backward slashes to the appropriate operating system convention. ##

## Programming languages that have their roots in UNIX and the C programming language, such as Python, treat the backslash (\) as the escape character. For example, \n signifies a carriage    return. Since paths can contain backslashes, you need to prevent backslashes from being used as the escape character. A common technique is to escape the backslash, as follows:

   thePath = "E:\\data\\telluride\\newdata.gdb\\slopes"
   Another way is to convert paths into Python raw strings using the r directive, as shown below. This instructs Python to ignore backslashes.
   thePath = r"E:\data\telluride\newdata.gdb\slopes"     ##
## An absolute, or full, path begins with a drive letter followed by a colon, such as D: ##

## Known limitations in snapd:
   The $HOME directory of the user must match /home/*. Other directories are not supported yet. In particular /home/subdir/user is also not supported.
   The per-user data belonging to a given snap is always stored in $HOME/snap/$SNAP_NAME/. The path is not yet configurable.
   any installation where the user’s home is not available if they’re not logged in, is not yet supported. This includes:
   installations using automount ecryptfs and similar tech that unencrypt the $HOME directory (or partition) only while the user is logged in
   Note here “not supported” does not mean “doesn’t work”. Some things might not work, but also some sequences of events might result in a user not being able to access their data. ##
## due to the above snap limitations, it is completly dependant on systemd specially the (multi-user mode service and the filesystem mounting service). ##

## Ubuntu 20.04 LTS replaced the ubuntu software with snapcraft entirely. So snap is becoming the 'default' store of the distro. ##

## WSL2- Ubuntu 20.04 Snap store doesn't work due to systemd dependency, for workaround check the links below:
   https://github.com/microsoft/WSL/issues/5126
   https://github.com/DamionGans/ubuntu-wsl2-systemd-script ##

## in WSL2 environment, the below two systemd services wont start (Failed) with no current stable solution. because WSL2 does not support multi-user mode runlevel and runs in a Microsoft       custome made mode basic.target which is a limited minimal init pid(1):
   multipathd.socket            ----(1)
   systemd-remount-fs.service   ----(2)    ##
## "systemd-remount-fs.service" failed with error (mount: /: can't find LABEL=cloudimg-rootfs.) ExecStart=/lib/systemd/systemd-remount-fs
   This issue does not only affect Ubuntu, but also Fedora; on a basic setup the "multipathd.service" will not run. There is no support for this at this time. ##
## $$$(CAUTION)$$$: purging ssh/opemssh-server* from your system will purge (snap/snapd) and all the snap based services as well! as snap depends on the "openssh-client library". This may                       have a severe impact multiple services on your system that are dependent on snap/snapd. ##
## https://askubuntu.com/questions/1319794/snap-issue-with-fontsconfig-on-ubuntu-20-04/1340912#1340912  ##


sudo apt install -qq daemonize dbus-user-session fontconfig     # -q (-quite), Decrease logging verbosity (can be repeated).
sudo apt install snap                                           # 
sudo apt install snapd                                          #
sudo apt install snapcraft                                      # v3.0.
sudo snap install canonical-livepatch                           # 
sudo snap install snap-store                                    # v2.5, (installed but not working).
snap-store                                                      # GUI.
snap find                                                       # 

/etc/apparmor.d/tunables/home.d                                 # the Systemd home directory is not supported by snap/snapd yet.
sudo nano /etc/apparmor.d/tunables/home                         # (Not tested) edit the file and unhash the line "include <tunables/home.d>".

sudo snap install acrordrdc                                     # install Adobe-Acrobat-Reader-DC from snap store.

ls -l /etc/fonts/fonts.conf                                     # 

## apply "DISABLE_WAYLAND=1 snap-store" since WSL2 still has no Wayland Disply support you will get an error.

----------------------------------------------------------------#
$ ls -l /etc/fonts/fonts.conf
-rw-r--r-- 1 root root 2808 Apr  6  2020 /etc/fonts/fonts.conf
$

$ snap list                                                     #
Name                    Version                     Rev    Tracking         Publisher   Notes
acrordrdc               2020.013.20064              28     latest/stable    mmtrt       -
canonical-livepatch     9.6.2                       99     latest/stable    canonical✓  -
core                    16-2.50                     11081  latest/stable    canonical✓  core
core18                  20210507                    2066   latest/stable    canonical✓  base
gnome-3-28-1804         3.28.0-19-g98f9e67.98f9e67  145    latest/stable    canonical✓  -
gnome-3-34-1804         0+git.3556cb3               66     latest/stable    canonical✓  -
gtk-common-themes       0.1-52-gb92ac40             1515   latest/stable    canonical✓  -
snap-store              3.38.0-59-g494f078          518    latest/stable    canonical✓  -
snapcraft               4.7.1                       6466   latest/stable/…  canonical✓  classic
snapd                   2.50                        11841  latest/stable    canonical✓  snapd
wine-platform-5-stable  5.0.3                       16     latest/stable    mmtrt       -
wine-platform-runtime   v1.0                        220    latest/stable    mmtrt       -
$

$ sudo aptitude install snap                                    #
snap is already installed at the requested version (2013-11-29-9)
$

$ sudo snap install acrordrdc                                   # this error means your snap/snapd main services (two services) has failed to load in systemd.
error: cannot perform the following tasks:
- Run configure hook of "acrordrdc" snap if present (run hook "configure": cannot perform operation: mount --rbind /dev /tmp/snap.rootfs_dybraz//dev: No such file or directory)
$
----------------------------------------------------------------#


#####################################################################################
# install/add (LSB) the backward compatability (ABI) for your distro and softwars   #
#####################################################################################
## LSB is designed to be binary-compatible and produce a stable application binary interface (ABI) for independent software vendors. To achieve backward compatibility, each subsequent    version is purely additive. ##
## by default WSL2 distro's has no default LSB installed. ## 

sudo apt install lsb                    # this will install the below LSB.

------------------------------------------------------------------------------------------------------
$ lsb_release -a
LSB Version:    core-11.1.0ubuntu2-noarch:printing-11.1.0ubuntu2-noarch:security-11.1.0ubuntu2-noarch
Distributor ID: Ubuntu
Description:    Ubuntu 20.04.2 LTS
Release:        20.04
Codename:       focal
$
------------------------------------------------------------------------------------------------------


######################################################################################################
# set (Systemd) daemon as init PID(1) and enable (systemctl) command in Ubuntu-20.04-focal-LTS-WSL2  #
######################################################################################################
## Source (https://www.digitalocean.com/community/tutorials/how-to-configure-a-linux-service-to-start-automatically-after-a-crash-or-reboot-part-1-practical-examples)
## Explaining linux init daemon and its Runlevel and the different init bootloaders:
 #(1)# System V: is the oldest init system, used in ubuntu 9.04 and earler, (the init daemon created from the binary file /sbin/init and the fist file loaded by the daemon is /etc/inittab).
 #(2)# Upstart: came after System V and was used in ubuntu 9.10 to 14.04. Upstart is backward-compatible with System V.
 #(3)# systemd: is the newest Linux service manager, used in 15.4 adn above, the units are in form of (*.service , *.socket, *.mount, *.timer, *.target, *.slice, *.path, etc.) located in:

## init script are shell scripts. They are also called rc (run command). ##
## To make a service restart after a crash or reboot, you can usually add a line like this to the init script:
   ms:2345:respawn:/bin/sh /usr/bin/<service_name>
## The main difference between systemd and the other two init methods is that systemd is responsible for the initialization of service daemons and other types of resources like device       operating system paths, mount points, sockets, etc. ##
## systemd target units:
   A target unit filename is suffixed by .target. Target units are different from other unit files because they don’t represent one particular resource. Rather, they represent the state of     the system at any one time. Target units do this by grouping and launching multiple unit files that should be part of that state. systemd targets can therefore be loosely compared to        System V runlevels, although they are not the same.
   Another difference between target units and runlevels is that in System V, a Linux system could exist in only one runlevel. You could change the runlevel, but the system would exist in      that new runlevel only. With systemd, target units can be inclusive, which means when a target unit activates, it can ensure other target units are loaded as part of it.

   For example, a Linux system that boots with a graphical user interface will have the graphical.target activated, which in turn will automatically ensure multi-user.target is loaded and      activated as well. In System V terms, that would be like having runlevels 3 and 5 activated simultaneously. ##
## When you change the default target, you are essentially recreating that symbolic link and changing the system’s runlevel. ##
## systemd wants and requires control how systemd addresses dependency among service daemons. ##
## In systemd, a unit that "requires" another unit will not start until the required unit is loaded and activated. If the required unit fails for some reason while the first unit is active,    the first unit will also stop. This ensures system stability. ##
## a unit that "wants" another unit will not impose such restrictions. It won’t stop if the wanted unit stops when the caller is active. An example of this would be the non-essential       services that come up in graphical-target mode. ##
## While systemctl mask works by symlinking the service to /dev/null, systemd appears to just check if a file is 0 bytes when read to determine if a unit is masked. ##
## Systemd daemon structure & init bootup sequence:
   "/sbin/init" file is a symbolic-link (symlink) to "/lib/systemd/system/" this is where all the ".service" files are located in addtion to other systemd contents.
   "/etc/systemd/system/" folder contained other essencial systemd files and folders.
   "/etc/init/" post init systemd will look into this folder for addtional  ".conf" files to load. 
   the files under the "/etc/rc0.d/" throughout "/etc/rc6.d/" & "/etc/rcS.d/" (rcn.d) folders, which serves different boot modes,
   are all symlinks of the files under the folder "/etc/init.d/".
   /usr/lib/systemd/system/default.target
   /usr/lib/systemd/user/default.target
   --------------------------------------------------------------------------------------------------
   | System-V Naming: | Target Unit systemd:      |  Mode:                                          |
   | Runlevel Default | default.target            |  Default ("inittab" file in system-v)           |
   | Runlevel 0       | poweroff.target           |  System shutdown                                |
   | Runlevel 1       | resuce.target             |  Single-user, rescue mode                       |
   | Runlevel 2, 3, 4 | multi-user.target         |  Multi-user, text mode with networking enabled  |
   | Runlevel 5       | graphical.target          |  Multi-user, network-enabled, graphical mode    |
   | Runlevel 6       | reboot.target             |  System reboot                                  |
   --------------------------------------------------------------------------------------------------##

## (D-Bus) short for "Desktop Bus" is a Message-oriented middleware mechanism that allows communication between multiple processes running concurrently on the same machine. D-Bus was    developed as part of the freedesktop.org project, initiated by Havoc Pennington from Red Hat to standardize services provided by Linux desktop environments such as GNOME and KDE.
## (libdbus) developed by the freedesktop.org project as a free and open-source software library, as a reference implementation of the specification. This library should not be confused    with D-Bus itself, as other implementations of the D-Bus specification also exist, such as GDBus (GNOME), QtDBus (Qt/KDE), dbus-java and sd-bus (part of systemd).

## systemd have a dbus-daemon also ? why lenart says systemd is based on sd-dbus but not libdbus?
   lenart says after v221 release of systemd use sd-dbus API, But I see before v221 there are sd-dbus in source code also ,that's why ?

libdbus  --> dbus FOSS specification library.
GDbus    --> gnome variant of dbus.
sdbus    --> systemd variant of dbus.  


Samples:
--------
/usr/lib/systemd/user/default.target 
[Unit]
Description=Main User Target
Documentation=man:systemd.special(7)
Requires=basic.target
After=basic.target
AllowIsolate=yes

/usr/lib/systemd/system/default.target -> graphical.target
[Unit]
Description=Graphical Interface
Documentation=man:systemd.special(7)
Requires=multi-user.target
Wants=display-manager.service
Conflicts=rescue.service rescue.target
After=multi-user.target rescue.service rescue.target display-manager.service
AllowIsolate=yes

/usr/lib/systemd/system/basic.target
[Unit]
Description=Basic System
Documentation=man:systemd.special(7)
Requires=sysinit.target
Wants=sockets.target timers.target paths.target slices.target
After=sysinit.target sockets.target paths.target slices.target tmp.mount
# We support /var, /tmp, /var/tmp, being on NFS, but we don't pull in
# remote-fs.target by default, hence pull them in explicitly here. Note that we
# require /var and /var/tmp, but only add a Wants= type dependency on /tmp, as
# we support that unit being masked, and this should not be considered an error.
RequiresMountsFor=/var /var/tmp
Wants=tmp.mount

/usr/lib/systemd/user/basic.target
[Unit]
Description=Basic System
Documentation=man:systemd.special(7)
Wants=sockets.target timers.target paths.target
After=sockets.target timers.target paths.target

/usr/lib/systemd/system/sysinit.target
[Unit]
Description=System Initialization
Documentation=man:systemd.special(7)
Conflicts=emergency.service emergency.target
Wants=local-fs.target swap.target
After=local-fs.target swap.target emergency.service emergency.target

/usr/lib/systemd/system/local-fs.target
[Unit]
Description=Local File Systems
Documentation=man:systemd.special(7)
DefaultDependencies=no
Conflicts=shutdown.target
After=local-fs-pre.target

/usr/lib/systemd/system/local-fs-pre.target
[Unit]
Description=Local File Systems (Pre)
Documentation=man:systemd.special(7)
RefuseManualStart=yes

/usr/lib/systemd/system/swap.target
[Unit]
Description=Swap
Documentation=man:systemd.special(7)


NOTICE: There is a clear difference in systemd between ubuntu-focal WSL2 & the standard ubuntu-focal-desktop:
-------
   sudo ls -l /etc/systemd/system/default.target                              # this should be symlinke to /lib/systemd/system/multi-user.target
   sudo ls -l /etc/systemd/system/multi-user.target.wants/*.service           # there will be a list of services depends on the system and the services installed.
   sudo systemctl show --property "Requires" multi-user.target | fmt -10      # Output: Requires=basic.target .
   sudo systemctl show --property "Requires" basic.target | fmt -10           # Output: Requires=sysinit.target -.mount .
   sudo systemctl show --property "Wants" basic.target | fmt -10              # 

Output WSL2:
-------
Wants=tmp.mount       *
timers.target
slices.target
sockets.target
paths.target

Output Desktop:
--------------
Wants=slices.target   <--
paths.target          <--
timers.target         <--
microcode.service     *
sockets.target        <--
sysinit.target        *


   sudo systemctl show --property "Requires" sysinit.target | fmt -10         # output: none
   sudo systemctl show --property "Wants" sysinit.target | fmt -10            # 

Output WSL2:
------------
Wants=systemd-tmpfiles-setup.service
systemd-hwdb-update.service
systemd-modules-load.service
lvm2-monitor.service
blk-availability.service
systemd-tmpfiles-setup-dev.service
systemd-random-seed.service
systemd-update-utmp.service
systemd-pstore.service
setvtrgb.service
systemd-ask-password-console.path
swap.target
plymouth-start.service
systemd-boot-system-token.service
dev-hugepages.mount
systemd-sysctl.service
systemd-udev-trigger.service
sys-fs-fuse-connections.mount
local-fs.target
cryptsetup.target
apparmor.service
systemd-machine-id-commit.service
sys-kernel-tracing.mount
keyboard-setup.service
dev-mqueue.mount
lvm2-lvmpolld.socket
systemd-journal-flush.service
sys-kernel-debug.mount
sys-kernel-config.mount
systemd-journald.service
open-iscsi.service
systemd-sysusers.service
plymouth-read-write.service
multipathd.service
kmod-static-nodes.service
systemd-timesyncd.service
finalrd.service
systemd-udevd.service

Output Desktop:
---------------
Wants=systemd-random-seed.service
dev-mqueue.mount
rngd.service
systemd-modules-load.service
proc-sys-fs-binfmt_misc.automount
local-fs.target
sys-fs-fuse-connections.mount
systemd-sysusers.service
systemd-update-done.service
systemd-update-utmp.service
systemd-journal-flush.service
dev-hugepages.mount
dracut-shutdown.service
swap.target
systemd-udevd.service
import-state.service
sys-kernel-debug.mount
nis-domainname.service
systemd-journald.service
selinux-autorelabel-mark.service
kmod-static-nodes.service
loadmodules.service
ldconfig.service
cryptsetup.target
systemd-sysctl.service
systemd-ask-password-console.path
systemd-journal-catalog-update.service
systemd-udev-trigger.service
systemd-tmpfiles-setup.service
systemd-hwdb-update.service
sys-kernel-config.mount
systemd-binfmt.service
systemd-tmpfiles-setup-dev.service
systemd-machine-id-commit.service
systemd-firstboot.service


Example of a service file configurations:
-----------------------------------------
sudo nano /etc/systemd/system/multi-user.target.wants/sshd.service

[Unit]
Description=OpenSSH server daemon
Documentation=man:sshd(8) man:sshd_config(5)
After=network.target sshd-keygen.target
Wants=sshd-keygen.target
[Service]
Type=notify
EnvironmentFile=-/etc/crypto-policies/back-ends/opensshserver.config
EnvironmentFile=-/etc/sysconfig/sshd
ExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=on-failure
RestartSec=42s
[Install]
WantedBy=multi-user.target


## By default, WSL2 does not run Systemd as pid(1) due to the customized init process. However, a community member, Daniel Llewellyn, made it possible.
   Several iterations and alternatives are now available. ##
## the systemd sources are saved under the path "/etc/apt/sources.list.d/<repositoryName>.list". ##

     --------------------------------------------------------------------------------------------------------------
#$$$$ this scrip is made and customized for ubuntu-focal-WSL2 specifically do not run it in any other environment. $$$$#
     --------------------------------------------------------------------------------------------------------------

## after installing this script and rebooting the distro you will notice that two of the systemd services will be in failed status which is a current limitation in WSL2, which limits it to    the basic-mode "unit=basic.target" instead of the default "unit=multi-user.target", with some unstable and unpractical workarounds which are not recommended: 
   multipathd.socket            ----(1)
   systemd-remount-fs.service   ----(2)                     ##
## https://github.com/DamionGans/ubuntu-wsl2-systemd-script ##

sudo apt install libnss-mymachines systemd-container                              # 

git clone https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git            # 
cd ~/ubuntu-wsl2-systemd-script                                                   # 
bash ubuntu-wsl2-systemd-script.sh                                                # 

----------------------------------------------------------------------------------#
$
 SUCCESS: Specified value was saved.
'\\wsl$\Ubuntu-20.04\home\twrcha\ubuntu-wsl2-systemd-script'
CMD.EXE was started with the above path as the current directory.
UNC paths are not supported.  Defaulting to Windows directory.
$

reboot                                                                            # 
$ pidof systemd                                                                   #
1
$

$
The unit files have no installation config (WantedBy=, RequiredBy=, Also=,
Alias= settings in the [Install] section, and DefaultInstance= for template
units). This means they are not meant to be enabled using systemctl.

Possible reasons for having this kind of units are:
• A unit may be statically enabled by being symlinked from another unit's
  .wants/ or .requires/ directory.
• A unit's purpose may be to act as a helper for some other unit which has
  a requirement dependency on it.
• A unit may be started when needed via activation (socket, path, timer,
  D-Bus, udev, scripted systemctl call, ...).
• In case of template units, the unit is meant to be enabled with some
  instance name specified.
$
----------------------------------------------------------------------------------#

# WSL main disk is /dev/sdb

systemctl                                                                         # verify that systemd is installed and loaded as (PID1, [init]) and working properly.
systemctl list-unit-files                                                         #

mkdir ~/foo                                                                       # These three steps solved the "system-root-fs.service" mount failure issue.
sudo mount -o rw,remount /                                                        # (Worked).
sudo e2label /dev/sdb cloudimg-rootfs                                             # (Worked).
sudo hdparm -r0 /dev/sdb                                                          # (Not tested).


## (libipq) is a development library for iptables userspace packet queuing. Libipq provides an API for communicating with ip_queue.
   Libipq has been deprecated in favour of the newer libnetfilter_queue in Linux kernel-2.6.14 onwards. ##
## WSL time sync limitations: The problem in this case is usage of OpenVZ and permissions that are set on containers. If your provider enabled you sys_time permission then you can set time     of VPS as you want, in other case you don't have enough permissions/capatibilities to change it and should sync by the main machine where OpenVZ is configured.
   As I read the time in this case (if you don't have sys_time capatibility) can only be set by VPS provider on their main OpenVZ machine and is synced to all nodes. ##

sudo mkdir /etc/systemd/system/systemd-timesyncd.service.d/                       #
echo -e "[Unit]\nConditionVirtualization=yes" > /etc/systemd/system/systemd-timesyncd.service.d/enable-with-daemon.conf
sudo systemctl daemon-reload

sudo systemctl start systemd-timesyncd                                            # start the time sync service.
sudo /usr/lib/systemd/systemd-timesyncd                                           # Sync the time with the time server.
Initial synchronization to time server 91.189.89.199:123 (ntp.ubuntu.com).        # (Output). the ip accessable however ntp is not responding on port 123.

----------------------------------------------------------------------------------#
$file /usr/lib/systemd/systemd-timesyncd                                          #
/usr/lib/systemd/systemd-timesyncd: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=854c817a325d77fb92ef9449d64c0a8ac87055b0, for GNU/Linux 3.2.0, stripped
$

$ sudo nano /lib/systemd/system/time-sync.target                                  #
[Unit]
Description=System Time Synchronized
Documentation=man:systemd.special(7)
RefuseManualStart=yes
After=time-set.target
Wants=time-set.target
$

$ sudo nano /etc/systemd/timesyncd.conf
[Time]
Servers=time1.google.com time2.google.com time3.google.com time4.google.com
$

$ ip a show eth0
4: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:15:5d:ec:ae:7a brd ff:ff:ff:ff:ff:ff
    inet 172.27.240.5/20 brd 172.27.255.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::215:5dff:feec:ae7a/64 scope link
       valid_lft forever preferred_lft forever
$

$ ip route
default via 172.27.240.1 dev eth0
172.27.240.0/20 dev eth0 proto kernel scope link src 172.27.240.5
$

$ route
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
default         172.27.240.1    0.0.0.0         UG    0      0        0 eth0
172.27.240.0    0.0.0.0         255.255.240.0   U     0      0        0 eth0
$


-------
# pwsh:
-------
$ ipconfig
Ethernet adapter vEthernet (WSL):

   Connection-specific DNS Suffix  . :
   Link-local IPv6 Address . . . . . : fe80::d4a9:ad5f:4849:4063%70
   IPv4 Address. . . . . . . . . . . : 172.27.240.1
   Subnet Mask . . . . . . . . . . . : 255.255.240.0
   Default Gateway . . . . . . . . . :
$

$ sudo systemctl mask multipathd.service
Created symlink /etc/systemd/system/multipathd.service → /dev/null.
$

$  sudo /sbin/multipathd -d -v4
Jun 05 20:14:33 | --------start up--------
Jun 05 20:14:33 | read /etc/multipath.conf
Jun 05 20:14:33 | loading //lib/multipath/libchecktur.so checker
Jun 05 20:14:33 | checker tur: message table size = 3
Jun 05 20:14:33 | loading //lib/multipath/libprioconst.so prioritizer
Jun 05 20:14:33 | _init_foreign: found libforeign-nvme.so
Jun 05 20:14:33 | foreign library "nvme" loaded successfully
Jun 05 20:14:33 | set open fds limit to 1048576/1048576
Jun 05 20:14:33 | Could not set SCHED_RR at priority 99
Jun 05 20:14:33 | uxsock: startup listener
Jun 05 20:14:33 | path checkers start up
Jun 05 20:14:33 | tick (1.000000 secs)
Jun 05 20:14:33 | No configuration dir '/etc/multipath/conf.d'
Jun 05 20:14:33 | DM multipath kernel driver not loaded
Jun 05 20:14:33 | Discover device /sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/block/sda
Jun 05 20:14:33 | sda: dev not found in pathvec
Jun 05 20:14:33 | 8:0: dev_t not found in pathvec
Jun 05 20:14:33 | sda: udev property ID_WWN whitelisted
Jun 05 20:14:33 | sda: mask = 0x3f
Jun 05 20:14:33 | sda: dev_t = 8:0
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/block/sda/size'
Jun 05 20:14:33 | sda: size = 536870912
Jun 05 20:14:33 | sda: vendor = Msft
Jun 05 20:14:33 | sda: product = Virtual Disk
Jun 05 20:14:33 | sda: rev = 1.0
Jun 05 20:14:33 | find_hwe: found 0 hwtable matches for Msft:Virtual Disk:1.0
Jun 05 20:14:33 | sda: h:b:t:l = 0:0:0:0
Jun 05 20:14:33 | sda: tgt_node_name =
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/state'
Jun 05 20:14:33 | sda: path state = running
Jun 05 20:14:33 | sda: 33418 cyl, 255 heads, 63 sectors/track, start at 0
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/vpd_pg80'
Jun 05 20:14:33 | attribute '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/vpd_pg80' can not be opened: No such file or directory
Jun 05 20:14:33 | 0:0:0:0: attribute vpd_pg80 not found in sysfs
Jun 05 20:14:33 | failed to read sysfs vpd pg80
Jun 05 20:14:33 | sda: serial =
Jun 05 20:14:33 | sda: detect_checker = yes (setting: multipath internal)
Jun 05 20:14:33 | vpd pgc9 error, invalid vpd page 00
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:0/inquiry'
Jun 05 20:14:33 | sda: path_checker = tur (setting: multipath internal)
Jun 05 20:14:33 | sda: checker timeout = 180 s (setting: kernel sysfs)
Jun 05 20:14:33 | sda: tur state = up
Jun 05 20:14:33 | sda: uid_attribute = ID_SERIAL (setting: multipath internal)
Jun 05 20:14:33 | sda: uid = 36002248057de6aa93848de02790adcb4 (udev)
Jun 05 20:14:33 | sda: detect_prio = yes (setting: multipath internal)
Jun 05 20:14:33 | sda: prio = const (setting: multipath internal)
Jun 05 20:14:33 | sda: prio args = "" (setting: multipath internal)
Jun 05 20:14:33 | sda: const prio = 1
Jun 05 20:14:33 | Discover device /sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/block/sdb
Jun 05 20:14:33 | sdb: dev not found in pathvec
Jun 05 20:14:33 | 8:16: dev_t not found in pathvec
Jun 05 20:14:33 | sdb: udev property ID_WWN whitelisted
Jun 05 20:14:33 | sdb: mask = 0x3f
Jun 05 20:14:33 | sdb: dev_t = 8:16
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/block/sdb/size'
Jun 05 20:14:33 | sdb: size = 536870912
Jun 05 20:14:33 | sdb: vendor = Msft
Jun 05 20:14:33 | sdb: product = Virtual Disk
Jun 05 20:14:33 | sdb: rev = 1.0
Jun 05 20:14:33 | find_hwe: found 0 hwtable matches for Msft:Virtual Disk:1.0
Jun 05 20:14:33 | sdb: h:b:t:l = 0:0:0:1
Jun 05 20:14:33 | sdb: tgt_node_name =
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/state'
Jun 05 20:14:33 | sdb: path state = running
Jun 05 20:14:33 | sdb: 33418 cyl, 255 heads, 63 sectors/track, start at 0
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/vpd_pg80'
Jun 05 20:14:33 | attribute '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/vpd_pg80' can not be opened: No such file or directory
Jun 05 20:14:33 | 0:0:0:1: attribute vpd_pg80 not found in sysfs
Jun 05 20:14:33 | failed to read sysfs vpd pg80
Jun 05 20:14:33 | sdb: serial =
Jun 05 20:14:33 | sdb: detect_checker = yes (setting: multipath internal)
Jun 05 20:14:33 | vpd pgc9 error, invalid vpd page 00
Jun 05 20:14:33 | open '/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/inquiry'
Jun 05 20:14:33 | sdb: path_checker = tur (setting: multipath internal)
Jun 05 20:14:33 | sdb: checker timeout = 180 s (setting: kernel sysfs)
Jun 05 20:14:33 | sdb: tur state = up
Jun 05 20:14:33 | sdb: uid_attribute = ID_SERIAL (setting: multipath internal)
Jun 05 20:14:33 | sdb: uid = 36002248057de6aa93848de02790adcb4 (udev)
Jun 05 20:14:33 | sdb: detect_prio = yes (setting: multipath internal)
Jun 05 20:14:33 | sdb: prio = const (setting: multipath internal)
Jun 05 20:14:33 | sdb: prio args = "" (setting: multipath internal)
Jun 05 20:14:33 | sdb: const prio = 1
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop0
Jun 05 20:14:33 | loop0: dev not found in pathvec
Jun 05 20:14:33 | 7:0: dev_t not found in pathvec
Jun 05 20:14:33 | loop0: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop1
Jun 05 20:14:33 | loop1: dev not found in pathvec
Jun 05 20:14:33 | 7:1: dev_t not found in pathvec
Jun 05 20:14:33 | loop1: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop2
Jun 05 20:14:33 | loop2: dev not found in pathvec
Jun 05 20:14:33 | 7:2: dev_t not found in pathvec
Jun 05 20:14:33 | loop2: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop3
Jun 05 20:14:33 | loop3: dev not found in pathvec
Jun 05 20:14:33 | 7:3: dev_t not found in pathvec
Jun 05 20:14:33 | loop3: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop4
Jun 05 20:14:33 | loop4: dev not found in pathvec
Jun 05 20:14:33 | 7:4: dev_t not found in pathvec
Jun 05 20:14:33 | loop4: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop5
Jun 05 20:14:33 | loop5: dev not found in pathvec
Jun 05 20:14:33 | 7:5: dev_t not found in pathvec
Jun 05 20:14:33 | loop5: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop6
Jun 05 20:14:33 | loop6: dev not found in pathvec
Jun 05 20:14:33 | 7:6: dev_t not found in pathvec
Jun 05 20:14:33 | loop6: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/loop7
Jun 05 20:14:33 | loop7: dev not found in pathvec
Jun 05 20:14:33 | 7:7: dev_t not found in pathvec
Jun 05 20:14:33 | loop7: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram0
Jun 05 20:14:33 | ram0: dev not found in pathvec
Jun 05 20:14:33 | 1:0: dev_t not found in pathvec
Jun 05 20:14:33 | ram0: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram1
Jun 05 20:14:33 | ram1: dev not found in pathvec
Jun 05 20:14:33 | 1:1: dev_t not found in pathvec
Jun 05 20:14:33 | ram1: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram10
Jun 05 20:14:33 | ram10: dev not found in pathvec
Jun 05 20:14:33 | 1:10: dev_t not found in pathvec
Jun 05 20:14:33 | ram10: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram11
Jun 05 20:14:33 | ram11: dev not found in pathvec
Jun 05 20:14:33 | 1:11: dev_t not found in pathvec
Jun 05 20:14:33 | ram11: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram12
Jun 05 20:14:33 | ram12: dev not found in pathvec
Jun 05 20:14:33 | 1:12: dev_t not found in pathvec
Jun 05 20:14:33 | ram12: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram13
Jun 05 20:14:33 | ram13: dev not found in pathvec
Jun 05 20:14:33 | 1:13: dev_t not found in pathvec
Jun 05 20:14:33 | ram13: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram14
Jun 05 20:14:33 | ram14: dev not found in pathvec
Jun 05 20:14:33 | 1:14: dev_t not found in pathvec
Jun 05 20:14:33 | ram14: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram15
Jun 05 20:14:33 | ram15: dev not found in pathvec
Jun 05 20:14:33 | 1:15: dev_t not found in pathvec
Jun 05 20:14:33 | ram15: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram2
Jun 05 20:14:33 | ram2: dev not found in pathvec
Jun 05 20:14:33 | 1:2: dev_t not found in pathvec
Jun 05 20:14:33 | ram2: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram3
Jun 05 20:14:33 | ram3: dev not found in pathvec
Jun 05 20:14:33 | 1:3: dev_t not found in pathvec
Jun 05 20:14:33 | ram3: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram4
Jun 05 20:14:33 | ram4: dev not found in pathvec
Jun 05 20:14:33 | 1:4: dev_t not found in pathvec
Jun 05 20:14:33 | ram4: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram5
Jun 05 20:14:33 | ram5: dev not found in pathvec
Jun 05 20:14:33 | 1:5: dev_t not found in pathvec
Jun 05 20:14:33 | ram5: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram6
Jun 05 20:14:33 | ram6: dev not found in pathvec
Jun 05 20:14:33 | 1:6: dev_t not found in pathvec
Jun 05 20:14:33 | ram6: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram7
Jun 05 20:14:33 | ram7: dev not found in pathvec
Jun 05 20:14:33 | 1:7: dev_t not found in pathvec
Jun 05 20:14:33 | ram7: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram8
Jun 05 20:14:33 | ram8: dev not found in pathvec
Jun 05 20:14:33 | 1:8: dev_t not found in pathvec
Jun 05 20:14:33 | ram8: device node name blacklisted
Jun 05 20:14:33 | Discover device /sys/devices/virtual/block/ram9
Jun 05 20:14:33 | ram9: dev not found in pathvec
Jun 05 20:14:33 | 1:9: dev_t not found in pathvec
Jun 05 20:14:33 | ram9: device node name blacklisted
Jun 05 20:14:33 | Discovered 2/26 paths
Jun 05 20:14:33 | sda: udev property ID_WWN whitelisted
Jun 05 20:14:33 | sdb: udev property ID_WWN whitelisted
Jun 05 20:14:33 | libdevmapper version 1.02.167 (2019-11-30)
Jun 05 20:14:33 | DM multipath kernel driver not loaded
$
----------------------------------------------------------------------------------#

## This issue does not only affect Ubuntu, but also Fedora; on a basic setup the multipathd.service will not run. However, when the multi-user.target is used, this service will fail. There    is no support for this. ##

sudo nano /lib/systemd/system/multipathd.service                                  # 
modprobe -v dm-multipath                                                          #
multipath -ll                                                                     #

cd /sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0004:00/VMBUS:00/fd1d2cbd-ce7c-535c-966b-eb5f811c95f0/host0/target0:0:0/0:0:0:1/
$sudo ln -s vpd_pg83 vpd_pg80                                          # the multipath service is looking for the file "vpd_pg80" which does not exist, while this one "vpd_pg83" exist.
ln: failed to create symbolic link 'vpd_pg80': Operation not permitted
$

sudo systemctl status multipathd.service                                          # different systemctl switches  
sudo systemctl mask multipathd.service                                            # (cosmetic solution) to disable the service and avoid errors with certin apps like snap & Lxd.
sudo systemctl unmask multipathd.service                                          # to undo the masking, also make sure to enable then start the service.
sudo systemctl enable multipathd.service                                          # enable = Autostart on boot, this will not start the service before the next boot.
sudo systemctl start multipathd.service                                           # 
sudo systemctl stop multipathd.service                                            # 
journalctl -xe                                                                    # to check services status and failuer details.


---------------------------------------------
 to uninstall/remove a service from systemd :
---------------------------------------------
ls -l /etc/systemd/system/multi-user.target.wants                            # list the loaded services in the standard regular runlevel/mode.
sudo systemctl disable <serviceName>                                         # this standard way.

Manually root out a systemd service:
------------------------------------
sudo systemctl reset-failed <serviceName>                                    # $$$(CAUTION)$$$: if no value specified, this will remove all failed services from the systemctl service list. 
sudo rm /etc/systemd/system/<serviceNameAlias>.service                       #
sudo rm /etc/systemd/system/multi-user.target.wants/<serviceName>.service    #
sudo rm /etc/init.d/<serviceName>                                            #


------------------
 the right output:
----------------------------------------------------------------------------------#
$ bash ubuntu-wsl2-systemd-script.sh --force
Setting up haveged (1.9.1-6ubuntu1) ...
Created symlink /etc/systemd/system/default.target.wants/haveged.service → /lib/systemd/system/haveged.service.
'\\wsl$\Ubuntu-20.04\home\twrcha\ubuntu-wsl2-systemd-script'
CMD.EXE was started with the above path as the current directory.
UNC paths are not supported.  Defaulting to Windows directory.

SUCCESS: Specified value was saved.
'\\wsl$\Ubuntu-20.04\home\twrcha\ubuntu-wsl2-systemd-script'
CMD.EXE was started with the above path as the current directory.
UNC paths are not supported.  Defaulting to Windows directory.

SUCCESS: Specified value was saved.
$

$ systemctl                                                                       #
systemd-remount-fs.service      loaded    failed failed    Remount Root and Kernel File Sys     >        # these two service failuer has no offical solution yet in WSL2 environment.
multipathd.socket               loaded    failed failed    multipathd control socket            >
$

$ mount | grep sdb                                                                # 
/dev/sdb on / type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)
/dev/sdb on /snap type ext4 (rw,relatime,discard,errors=remount-ro,data=ordered)
$

$ sudo systemctl mask multipathd.service                                          # (cosmetic solution).
Created symlink /etc/systemd/system/multipathd.service → /dev/null.
$
----------------------------------------------------------------------------------# 


@@@@(Not RECOMMENDED, the distro may crash at startup)@@@@ 
-------------------------------------------------------------------#
cd ~/ubuntu-wsl2-systemd-script                                    # systemd installation folder.
sudo nano  start-systemd-namespace                                 # hash the below line and add the second line.
#SYSTEMD_EXE="/lib/systemd/systemd --unit=basic.target"            # Signle user support.
 SYSTEMD_EXE="/lib/systemd/systemd --unit=multi-user.target"       # Multi-user support. WSL2 do not support multi-user mode.
bash ubuntu-wsl2-systemd-script.sh --force                         # reinstall systemd to enable the failed services "multipathd.socket" & "systemd-remount-fs.service services".
-------------------------------------------------------------------#


@@@@( Not RECOMMENDED, multiple service will faile and may destroy your distro)@@@@
----------------------------------------------------------------------------------#
https://discourse.ubuntu.com/t/using-snapd-in-wsl2/12113

sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target        #
exec sudo nsenter -t $(pidof systemd) -a su - $LOGNAME                                                           #
----------------------------------------------------------------------------------#


@@@@(Not tested, do Not know its impact)@@@@
----------------------------------------------------------------------------------#
sudo touch /etc/mkinitcpio.conf                                                   # 
sudo nano /etc/mkinitcpio.conf                                                    # 
cat /etc/mkinitcpio.conf                                                          #
------------- 
MODULES=""
BINARIES=""
FILES=""
HOOKS="base udev autodetect sata filesystems usbinput usr fsck shutdown"
----------------------------------------------------------------------------------#


########################################################
# Install Flatpack (CLI & GUI plug-in) Package Manager #
########################################################

## Flatpak is a utility for software deployment and package management for Linux. It is advertised as offering a sandbox environment in which users can run application software in isolation    from the rest of the system. Flatpak is a package manager for Linux just like Canonical SNAP to install various applications regardless of the Linux base or flavor where we are    installing   them due to the sandbox environment created by the Flatpak installer. ##

sudo apt install flatpak                                                                   # v1.6.5.
sudo apt install gnome-software-plugin-flatpak                                             # 
locate flatpak                                                                             #
flatpak --version                                                                          #
flatpak list                                                                               #
flatpak install flathub <package>                                                          #
flatpak run <app>                                                                          #
sudo flatpak update <package>                                                              #

systemctl status flatpak-system-helper.service                                             # the service already enabled but not started.
systemctl start flatpak-system-helper.service                                              #                       

# All the apps available to install via Flatpak are in its repository Flathub,

flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo    # (Optional) adding the flathub, the flatpak application online repository.

echo $XDG_DATA_DIRS                                                                        # 
touch $HOME/.xsessionrc                                                                    # this is the x11 application disply configuration file.
sudo nano $HOME/.xsessionrc                                                                # edit the file and add the line below.

# either manually add this line below to the "~/.xsessionrc" file.
export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share"

or

# automate the action by:
echo export 'XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/xdg:/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share"' >> ~/.xsessionrc

-------------------------------------------------------------------------------------------
$ flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

Note that the directories

'/var/lib/flatpak/exports/share'
'$HOME/.local/share/flatpak/exports/share'

are not in the search path set by the XDG_DATA_DIRS environment variable, so
applications installed by Flatpak may not appear on your desktop until the
session is restarted.
$

$ echo $XDG_DATA_DIRS
/usr/local/share:/usr/share:/var/lib/snapd/desktop
$
-------------------------------------------------------------------------------------------


######################################
# Replace python2.7 with python3.8   #
######################################

whereis python3.8                                                           # 
sudo apt install python-is-python3                                          # this package will move your system dependancy from python2.7 to python3.8. 
sudo apt build-dep python-is-python3                                        # 


## this will hold python2.7 and prevent it from becoming a dependency for any other application. ##

sudo apt-mark hold python2 python2-minimal python2.7 python2.7-minimal libpython2-stdlib libpython2.7-minimal libpython2.7-stdlib    #
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10                                                        #
sudo update-alternatives --config python                                                                                             #

-------------------------------------------------------------------------------------------------------------------------------------
$ sudo apt-mark hold python2 python2-minimal python2.7 python2.7-minimal libpython2-stdlib libpython2.7-minimal libpython2.7-stdlib
python2 set on hold.
python2-minimal set on hold.
python2.7 set on hold.
python2.7-minimal set on hold.
libpython2-stdlib set on hold.
libpython2.7-minimal set on hold.
libpython2.7-stdlib set on hold.
$

$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
update-alternatives: using /usr/bin/python3 to provide /usr/bin/python (python) in auto mode
$

$ sudo update-alternatives --config python
There is only one alternative in link group python (providing /usr/bin/python): /usr/bin/python3
Nothing to configure.
$

$ whereis python3
python3: /usr/bin/python3.8 /usr/bin/python3.9 /usr/bin/python3 /usr/bin/python3.8-config /usr/lib/python3.8 /usr/lib/python3.9 /usr/lib/python3 /etc/python3.8 /etc/python3.9 /etc/python3 /usr/local/lib/python3.8 /usr/local/lib/python3.9 /usr/include/python3.8 /usr/share/python3 /mnt/c/Programdata/anaconda3/python3.dll /mnt/c/Programdata/anaconda3/python38.dll /mnt/c/Programdata/anaconda3/python38.pdb /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python36/python3.dll /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python36/python36.dll /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python39/python3.dll /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python39/python39.dll /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python39/python39.pdb /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python38/python3.dll /mnt/c/Users/ardal/AppData/Local/Programs/Python/Python38/python38.dll /mnt/c/Users/ardal/AppData/Local/Microsoft/WindowsApps/python3.exe /usr/share/man/man1/python3.1.gz
$

$ cd /usr/lib
drwxr-xr-x  3 root root   4096 Feb 19 23:49 python2.7
drwxr-xr-x  3 root root   4096 Feb 19 23:49 python3
drwxr-xr-x 30 root root  20480 May 15 02:59 python3.8
drwxr-xr-x 30 root root  12288 May 15 03:20 python3.9
$
--------------------------------------------------------


#####################################################################
# Install and enable (pip) command (pip3/v20.x) under Ubuntu 20.x   #
#####################################################################

sudo apt install python3.9                      # create an aliase python=python3 in the "~/.bash_aliases" file.

sudo apt install python3-pip                    # 

sudo apt install python3-setuptools             # 

export PATH=$PATH:~/.local/bin                  # 

pip                                             # create an aliase pip=pip3 in the "~/.bash_aliases" file.
pip3                                            # to verify that Python3 pip3 package is working.

python -m pip --version                        # 

python -m pip install matplotlib               # 

python -m pip install --upgrade pip            # 


from pwsh:
----------
python.exe -m pip install matplotlib          #

python.exe -m pip install --upgrade pip       #


#######################################################
# Install Python3 TreeTime db-mgmt & analytic tool    #
#######################################################
## Python-TreeTime: is a general data organisation, management and analysis tool using linked trees instead of flat lists of tables. A tree is a hierarchical structure that arranges your    data into units and sub-units. Mathematical functions (sum, difference, mean, ratio) can be calculated recursively. Linked trees are distinct trees that share data between them. In    TreeTime, a data object is part of several trees at the same time. TreeTime is a time planner, a to-do list manager, a test report tool, a project planner, a family ancestry editor, a    mind-mapping tool, and similar. ##

sudo apt install python3-treetime             # a tree database tool, requires a running apache2 server.
sudo apt reinstall python3-treetime           # if during the first installation apache2 was not running, start apache2 and run this to reinstall and create and configure the db.


#########################################################
# Install GnomeNightly build using Flatpack Gnome-boxes #
#########################################################
    -----------------------------------------------------------------------------------------------------------------------------------
#$$$ do Not install this in your WSL environment, it will turn your distro filesystem to read only and there is no solution for it Yet $$$#
    -----------------------------------------------------------------------------------------------------------------------------------

# Install and run Gnome, the nightly build only seems to run on the flatpack version of gnome-boxes,
 
sudo flatpak install flathub org.gnome.Boxes           
sudo flatpak repair flathub org.gnome.Boxes            # verify the installation and repair if required.
sudo apt install boxes

flatpak info org.gnome.Boxes


##################################################################
# Install/enable SSH/OpenSSH-Server on Ubuntu 20.04-focal-WSL2   #
##################################################################
## One of the most exciting security enhancements in Ubuntu 20.04 LTS (Focal Fossa) is the ability to use the Fast Identity Online (FIDO) or Universal 2nd Factor (U2F) devices with SSH. ##
## Specifies a file from which the user's DSA, ECDSA or DSA authentication identity is read. The default is ~/.ssh/identity for protocol version 1,
   and ~/.ssh/id_dsa, ~/.ssh/id_ecdsa and ~/.ssh/id_rsa for protocol version 2. ## 
## The cat (short for “ concatenate “) command is one of the most frequently used command in Linux/Unix like operating systems. cat command allows us to create single or multiple files,       view contain of file, concatenate files and redirect output in terminal or files. ##
## (Obsolete) "/.ssh/authorized_keys2" is disregarded by default. AuthorizedKeysFile "/.ssh/authorized_keys" "/.ssh/authorized_keys2". ##
## $$$(CAUTION)$$$: purging ssh/opemssh-server* from your system will purge (snap/snapd) and all the snap based services as well! as snap depends on the "openssh-client library". This may                       have a severe impact multiple services on your system that are dependent on snap/snapd. ##


# (in WSL2 Ubuntu you have to perform these extra steps after installing ssh):
------------------------------------------------------------------------------

ssh-keygen                                                  # generates the Pub/Pri keys (the default file names are "id_rsa" & "id_rsa.pub") for that user "/home/twrcha/.ssh" or "~/.ssh".
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys             # create the "authorized_keys" file for the user under "~/.ssh".

sudo ssh-copy-id twrcha@pinegap                             # copy the public-key for the specified ID/host to the ssh server under "/root/.ssh/".

# repeate the above key generation steps for "root" as you may needcop root previlage during the connection.
# the below steps are only required for none "root" users connection:

touch ~/.ssh/config                                         # create the ssh "config" file for that user. In Ubuntu, the ssh "config" file is not created by default under "~/.ssh".
vim  ~/.ssh/config                                          # use "vim" or "nano" file editor to set the ssh config file parameters as below.

# in vim press "i" to enter the "inser-mode", set the following parameters:
--------------------------------------
        Host localhost
        HostName localhost
        User twrcha
        PubKeyAuthentication yes
        IdentityFile ~/.ssh/id_rsa
--------------------------------------
# once finished, press "Esc" to exit the "inster-mode" to the "last-line-mode".
# then save the changes insert ":w".
# then insert ":q" to quit the vim editor and back to the shell.
# if required, you can forcefully close the vim editor by using ":q!".
# if the config file already configured you will be asked to choose between editing or overwriting the file while the old configurations will be backed up as "~/.ssh/.config.swp" file.
# verify all the five necessary files exist in the "~/.ssh" folder (authorized_keys, config, id_rsa, id_rsa.pub, known_hosts).
# apply the below file permissions,

sudo chmod 600 ~/.ssh/id_rsa                                # sets the necessary file permission.
sudo chmod 644 ~/.ssh/id_rsa.pub                            # sets the necessary file permission.
sudo chmod 600 ~/.ssh/authorized_keys                       # sets the necessary file permission.

------------------------------------------------------------#

sudo apt install ssh openssh-server openssh-client          # the ssh configuration file is "/etc/ssh/sshd_config".(OpenSSH_8.2p1, OpenSSL 1.1.1f).
sudo apt install libpam-ssh                                 # 
sudo nano /etc/ssh/sshd_config                              # (do not modify for user-ssh-connection) This is the host-ssh-connection configuration file.
sudo nano /etc/ssh/ssh_config                               # This is the host-ssh-connection configuration file, set all your configuration here. 
sudo -l                                                     # check the user privilege.
or
groups                                                      #  
ssh -v                                                      # 
ssh twrcha@localhost                                        #
------------------------------------------------------------# the below means the user currently belongs to the sudo group.
User twrcha may run the following commands on PineGap:
    (ALL : ALL) ALL
    (ALL) NOPASSWD: /usr/sbin/enter-systemd-namespace
------------------------------------------------------------# 

# start the OpenSSH Server service, "/usr/lib/openssh/":
sudo systemctl status ssh                                   #
sudo systemctl enable ssh                                   # you can use both name aliases ssh or sshd.
sudo systemctl start ssh                                    # start the OpenSSH Server "sshd.service" using systemctl, "/usr/lib/openssh/".
sudo systemctl enable --now ssh                             # this will enable and start the ssh service.
sudo service ssh start                                      # or use service insted of systemctl.

netstat -tulpn | grep 22^                                   # to verify that your ssh server is listening on port 22.
ssh-add -l                                                  # list all the registered keys.
ssh-agent                                                   # 
eval "$(ssh-agent -s)"                                      # this will show you the agent process "ID Agent pid 23439".
ssh -vT git@github.com                                      # test connection.


## in case you got the following error use the below commands to delete the /run/nologin file
   "System is booting up. Unprivileged users are not permitted to log in yet. Please come back later. For technical details, see pam_nologin(8).":

ls -l /run/nologin
sudo rm /run/nologin

##


# to enable ssh-agent to run in the background, then register your private key with the ssh-agent:

ssh-agent /bin/sh                                           # register your private key with the ssh-agent to be used for secure internet connection.
ssh-add ~/.ssh/id_rsa                                       # Note: you have to create the ~/.ssh/ folder manually to store your personal private & public keys.
ssh-add -D                                                  # in case you want to delete the registered keys.
------------------------------------------------------------#
Enter passphrase for /home/twrcha/.ssh/id_rsa:
Identity added: /home/twrcha/.ssh/id_rsa (twrcha@PineGap)
------------------------------------------------------------#
ssh-add -l
-----------------------------------------------------------------------------
3072 SHA256:3LcPcepZZ1YgxoptLNFXfhJRkPgTjaqWahxNh5lvEPA twrcha@PineGap (RSA)
-----------------------------------------------------------------------------
ssh-agent                                                   #
-----------------------------------------------------------------------
SSH_AUTH_SOCK=/tmp/ssh-6jMw7gxqre9i/agent.23520; export SSH_AUTH_SOCK;
SSH_AGENT_PID=23521; export SSH_AGENT_PID;
echo Agent pid 23521;
-----------------------------------------------------------------------
## add "eval $(ssh-agent)" command to your shell profile "~/.bash_profile" to get the session ID every time you login. ##
## you can connect to the OpenSSH server using either the server (Hostname or IP) or localhost is the client and server on the same machine. ##

ssh root@localhost                                          #
ssh twrcha@<ssh-server-hostname>                            #
ssh user@<ssh-server-IP>                                    #

## the first time you connect to the server you will get the below message write "yes" and enter to create the connection setting on the server. ##

--------------------------------------------------------------------------------#
$ ssh twrcha@pinegap                                                            #
The authenticity of host 'pinegap (127.0.1.1)' can't be established.
ECDSA key fingerprint is SHA256:pVcP7i/5Ja6swOpbn+o49kKPOmLL2M3p+YS5V0hmg70.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'pinegap' (ECDSA) to the list of known hosts.
$

$ apt-cache policy openssh-client                                               #
openssh-client:
  Installed: 1:8.2p1-4ubuntu0.2
  Candidate: 1:8.2p1-4ubuntu0.2
  Version table:
 *** 1:8.2p1-4ubuntu0.2 500
        500 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages
        500 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages
        100 /var/lib/dpkg/status
     1:8.2p1-4 500
        500 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages
$

$ $ netstat -tan | grep LIST                                                    #
tcp        0      0 0.0.0.0:46000           0.0.0.0:*               LISTEN
tcp6       0      0 :::46000                :::*                    LISTEN
tcp6       0      0 :::22                   :::*                    LISTEN
$

$ netstat -tulpn                                                                #
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:46000           0.0.0.0:*               LISTEN      -
tcp6       0      0 :::46000                :::*                    LISTEN      -
tcp6       0      0 :::22                   :::*                    LISTEN      -
$

$ sudo nano /etc/ssh/ssh_config                                                 #

Include /etc/ssh/ssh_config.d/*.conf

Host *
#   ForwardAgent no
#   ForwardX11 no
ForwardX11 yes                                                                  # added by me.
ForwardX11Trusted yes                                                           # enabled by me.
PasswordAuthentication yes                                                      # enabled by me.
#   HostbasedAuthentication no
#   GSSAPIAuthentication no
#   GSSAPIDelegateCredentials no
#   GSSAPIKeyExchange no
#   GSSAPITrustDNS no
#   BatchMode no
#   CheckHostIP yes
#   AddressFamily any
#   ConnectTimeout 0
#   StrictHostKeyChecking ask
IdentityFile ~/.ssh/id_rsa                                                     # enabled by me.
#   IdentityFile ~/.ssh/id_dsa
#   IdentityFile ~/.ssh/id_ecdsa
#   IdentityFile ~/.ssh/id_ed25519
#   Port 22
Port 46000                                                                     # enabled by me.
#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc
#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com
#   EscapeChar ~
#   Tunnel no
#   TunnelDevice any:any
#   PermitLocalCommand no
--------------------------------------------------------------------------------#


##########################################################################
# Enable & configure the built-in Firewall (ufw) on Ubuntu 20.04-focal   #
##########################################################################
man ufw-framework                                           # to read about ufw.
sudo nano /etc/default/ufw                                  # check the default firewall rules.
sudo nano /etc/sysctl.conf                                  # 
sudo nano /etc/sysctl.d                                     # 
sudo nano /etc/ufw/sysctl.conf                              #
sudo nano /etc/ufw/before.init                              # 
sudo nano /etc/ufw/after.rules                              #

sudo ufw enable                                             # enable the ubuntu built-in firewall, Default: deny (incoming), allow (outgoing), disabled (routed).

# add the below three lines to the ufw /etc/ufw/before.init file and turn the file to executable to prevent this error when you enable the ufw:
  "ERROR: Could not load logging rules"
------------------------------------------------------------#
$ sudo nano /etc/ufw/after.rules
:ufw-user-input - [0:0]
:FOO-CHAIN - [0:0]                                          # line1, add these four lines ":ufw-user-input - [0:0]" line.
-A FOO-CHAIN -j ufw-user-input                              # line2
-A FOO-CHAIN -j DROP                                        # line3
COMMIT                                                      # line4
$

$ sudo nano /etc/ufw/before.init
stop)
    # typically required
iptables -F FOO-CHAIN || true                                                                                     # Line1, this will delete all the lines mentioning "ufw-user-input" chain. 
    # You may want to add other lines here to reset your chain in a desirable state if UFW is disabled like       # line2
    # iptables -A FOO-CHAIN -j RETURN || true                                                                     # line3
    ;;
status)
$

$ sudo nano /etc/ufw/sysctl.conf
# Configuration file for setting network variables. Please note these settings
# override /etc/sysctl.conf and /etc/sysctl.d. If you prefer to use
# /etc/sysctl.conf, please adjust IPT_SYSCTL in /etc/default/ufw. See
# Documentation/networking/ip-sysctl.txt in the kernel source code for more
# information.
$
------------------------------------------------------------#

sudo chmod +x /etc/ufw/before.init                          # make the file executable.

sudo ufw start                                              # 
sudo ufw disable                                            # 
sudo ufw reload                                             # 
sudo ufw reset                                              # reset to the default status.

ip a                                                        # 
sudo ufw status                                             # check the firewall added/configured rules (none default).
sudo ufw status verbose                                     # show the direction (In/Out) of the allowed or denied traffic.
sudo ufw status numbered                                    # number the output list.

sudo ufw allow ssh                                          # ssh default port is 22/tcp IPv4 & v6.
sudo ufw allow http                                         #
sudo ufw allow https                                        #
sudo ufw allow 443                                          #
sudo ufw allow from 192.168.1.0/24 to any port ssh          #
sudo ufw allow from 192.168.1.240 to any port ssh           #
sudo ufw allow in on eth0 to any port 80                    #

sudo ufw delete allow ssh                                   #
sudo ufw delete allow from 192.168.1.240 to any port ssh    #
sudo ufw delete 2                                           # example: delete rule #2.


#############################################################
# Install Apache2-Web-Server/PHP-8.x WebApp/ssl/xml-rpc     #
#############################################################
## Apache2-Web-Server document "/usr/share/doc/apache2/README.Debian.gz". ##

## (php-cgi) Common Gateway Interface: for PHP, a specification “protocol” for transferring information between a Web server and a CGI program. A CGI program is any program designed to             accept and return data that conforms to the CGI specification. it’s a way to run a server-side script (PHP, Perl, Python) when an HTTP request comes. ##

sudo add-apt-repository ppa:ondrej/php              # add PHP PPA repository, it will add & fetch from the below listed repositories and the following pacages will be upgraded:

sudo apt install php8.0                             # install a specific version of PHP "/etc/php/8.0/cli/php.ini".

sudo a2enmod php8.0                                 # set php8.0 as the system default considering the 
sudo update-alternatives --config php               # 
sudo update-alternatives --set php /usr/bin/php8.0  # select php8.0 as the system default php out of different installed php packages.

sudo apt search php8.0-*                            # check the available PHP extensions online.

# addtional PHP modules:
sudo apt install libapache2-mod-php8.0 libapache2-mod-fcgid php8.0-fpm php8.0-soap php8.0-curl php8.0-dev php8.0-gd php8.0-zip php8.0-mysql php8.0-xml php8.0-xsl php8.0-yaml php8.0-mbstring

sudo apt install php-cli                         # install PHP CLI interface.
sudo apt install php-cgi                         # see above.
sudo apt install php-xmlrpc                      # install XML-RPC for PHP or later on the local Apache2 server.
sudo apt install php-mysql                       # install "MySQL" database server for PHP.
sudo apt install php-pgsql                       # if you want to use "PostgreSQL" database install this package.

sudo apt install ssl-cert                        # 

sudo apt install apache2                         # install Apache2 webserver v2.4.x, /etc/apache2/apache2.conf . use the "apachectl" Not "apache2".
sudo apt install libapache2-mod-wsgi-py3         # install Python3.x wsgi module for Apache2 web server.
sudo apt install lamp-server^                    # @@@(Do Not install)@@@ this will install the old (PHP7.4) as part of the latest LAMP (Linux-Apache-MYSQL-PHP) and uses the "debconf data".

-------
impact:
-----------------------------------------------------------------------------
http://ppa.launchpad.net/ondrej/php/ubuntu focal InRelease
    http://archive.ubuntu.com/ubuntu focal InRelease
    http://archive.ubuntu.com/ubuntu focal-updates InRelease
    http://archive.ubuntu.com/ubuntu focal-backports InRelease
http://ppa.launchpad.net/ondrej/php/ubuntu focal/main amd64 Packages
    http://security.ubuntu.com/ubuntu focal-security InRelease
    https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease
http://ppa.launchpad.net/ondrej/php/ubuntu focal/main Translation-en

# The following packages will be upgraded:
$ sudo apt update  
$ sudo apt upgrade
libargon2-1 libgd3 libidn2-0 libidn2-0-dev libidn2-dev libpcre16-3 libpcre2-16-0 libpcre2-32-0 libpcre2-8-0 libpcre2-dev libpcre2-posix2 libpcre3 libpcre3-dev libpcre32-3 libpcrecpp0v5 libxml2 libxml2-dev libxml2-utils libzstd-dev libzstd1
$

$ sudo apt install php8.0
The following additional packages will be installed:
  libapache2-mod-php8.0 php-common php8.0-cli php8.0-common php8.0-opcache php8.0-readline
Suggested packages:
  php-pear
The following NEW packages will be installed:
  libapache2-mod-php8.0 php-common php8.0 php8.0-cli php8.0-common php8.0-opcache php8.0-readline
0 upgraded, 7 newly installed, 0 to remove and 0 not upgraded.
$

$ sudo a2enmod php8.0
Considering dependency mpm_prefork for php8.0:
Considering conflict mpm_event for mpm_prefork:
Considering conflict mpm_worker for mpm_prefork:
Module mpm_prefork already enabled
Considering conflict php5 for php8.0:
Module php8.0 already enabled
$

$ sudo update-alternatives --set php /usr/bin/php8.0
update-alternatives: using /usr/bin/php8.0 to provide /usr/bin/php (php) in manual mode
$

$ sudo apt install php8.0-*
The following packages have unmet dependencies:
 php8.0-apcu : Conflicts: php-yac
               Recommends: php-apcu-bc
 php8.0-gmagick : Conflicts: php-imagick
 php8.0-yac : Conflicts: php-apcu
$

$ sudo a2enconf php8.0-fpm
Enabling conf php8.0-fpm.
To activate the new configuration, you need to run:
  service apache2 reload
$

$ sudo systemctl enable php8.0-fpm
Synchronizing state of php8.0-fpm.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable php8.0-fpm
Created symlink /etc/systemd/system/multi-user.target.wants/php8.0-fpm.service → /lib/systemd/system/php8.0-fpm.service.
$
---------------------------------------------------------------------------------------------------------------------------

sudo add-apt-repository ppa:ondrej/apache2          # (Do Not add) add this PPA repository if you are using "apache2".
sudo add-apt-repository ppa:ondrej/nginx-mainline   # (Do Not add) add this PPA repository if you are using "nginx". 

sudo apt install php                             # (Do Not install) this will install the default PHP version for your distro (PHP7.4 for Ubuntu-20.04-LTS).
sudo apt install libapache2-mod-php              # (Do not install)


# to enable PHP 8.0 FPM in Apache2 do:
sudo a2enmod proxy_fcgi setenvif                 #
sudo a2enconf php8.0-fpm                         #
or
sudo systemctl enable php8.0-fpm                 #
sudo systemctl start php8.0-fpm                  #
sudo service apache2 restart                     #

sudo nano /etc/apache2/conf-available/fqdn.conf  # add "ServerName localhost" to apache2 config file.
sudo nano /etc/apache2/conf.d/fqdn.conf          #

# other useful commands:

sudo service apache2 start                       # different ways to start/stop/restart/check status of the apache2 service.
sudo service apache2 status                      # 
sudo service apache2 restart                     # 
sudo /etc/init.d/apache2 restart                 # 
sudo systemctl restart apache2.service           #           

sudo a2dismod wsgi                               # to disable the wsgi module (if needed).
sudo a2enmod wsgi                                # to enable the wsgi module.
sudo service apache2 restart                     # restart Apache2 webserver to enable the XML-RPC connection service.
sudo a2dissite <MyNewSite>                       # disable your website for troubleshooting purpose. default site "000-default" will be selected if not specified.
sudo a2ensite <MyNewSite>                        # enable your website.
sudo a2enmod ssl                                 # enable ssl module.
sudo a2ensite default-ssl                        # set ssl/https as default protocol on your web server.

sudo make-ssl-cert generate-default-snakeoil --force-overwrite               # to create certificate with the default host name.
sudo make-ssl-cert /usr/share/ssl-cert/ssleay.cnf /path/to/cert-file.crt     # to create certificates with different host names.

#  verify that the apache web server configuration are correct.

sudo apachectl -t -D DUMP_MODULES | grep mpm                                 # check the apache MPM.
$ mpm_prefork_module (shared)                                                # output.
sudo apachectl -t                                                            # create the directory "/var/run/apache2" and changing ownership of "/var/lock/apache2.7rbhpqZnnO"
$ Syntax OK                                                                  # output.  


## To remove LAMP completely make sure to remove the "debconf data" as well, use the purge option when removing. To get rid of any configurations you may have made to apache, manually          remove the /etc/apache2 directory once the packages have been removed.

## You can save the content in a file phpinfo.php and place it under the DocumentRoot directory of the Apache2 Web server. Pointing your browser to http://hostname/phpinfo.php will display     the values of various PHP configuration parameters.

## This will ask you for the hostname and place both SSL key and certificate in the file for example '/.ssh/ca_ssl.crt'. Use this file with the SSLCertificateFile
   directive in the Apache config (you don't need the SSLCertificateKeyFile in this case as it also contains the key). The file '/.ssh/ca_ssl.crt'
   should only be readable by root. A good directory to use for the additional certificates/keys is '/etc/ssl/private'. ##

## If you want to use self-signed certificates, you should install the ssl-cert package. Otherwise, just adjust the "SSLCertificateKeyFile" and
   "SSLCertificateFile" directives in "/etc/apache2/sites-available/default-ssl.conf" to point to your SSL certificate. Then restart apache. ##

## If you install the ssl-cert package, a self-signed certificate will be automatically created using the hostname currently configured on your computer.
   You can recreate that certificate (e.g. after you have changed '/etc/hosts' or DNS to give the correct hostname) as user root with. ##

## for error troubleshooting check the error log file "/var/log/apache2/error.log". ##

systemctl status apache2.serivce                                #
journalctl -u apache2.service --since today --no-pager          #
journalctl -u httpd.service --since today --no-pager            #
ss -6 -tlnp |grep 80                                            #
ps -p 40                                                        #

--------------------------------------------------------------------
$ ss -6 -tlnp |grep 80
LISTEN   0        511                    *:80                  *:*
$

$ ps -p 40
  PID TTY          TIME CMD
$
--------------------------------------------------------------------


####################################
# Install WordPress client wp-cli  #
####################################

## WP-CLI is the official command line tool for interacting with and managing your WordPress sites. ##

curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar          # download the package.
or
wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar             # download the package.

php wp-cli.phar --info                                                                     # check the Phar file to verify that it's working.
                                                                      
chmod u+x wp-cli.phar                                                                      # make the file executable.
sudo mv wp-cli.phar /usr/local/bin/wp                                                      # and move it to /usr/local/bin/ along with the other executable files.
wp --info                                                                                  # to verify the installation. check the output below.

wp core download                                                                           # download WordPress.
wp core version                                                                            #
wp core check-update                                                                       #
wp core update                                                                             #


##################################################
# create a new "wp-config.php" file & database:  #
##################################################
## create a DB in the local MySQL database server and generates the wp-config.php file and enable error logging and debugging: ##

wp config create --dbname=wpdb --dbuser=root --prompt=dbpass --locale=ro_RO  --extra-php <<PHP     # create a new database for the wp along with the db user and password.

--------------------------------------------------------------------------------
$ wp config create --dbname=wpdb --dbuser=root --prompt=dbpass --locale=ro_RO
1/9 [--dbpass=<dbpass>]: dba123
Success: Generated 'wp-config.php' file.
$
--------------------------------------------------------------------------------


########################################
# Activate bash completion for WP-CLI: #
########################################
## WP-CLI also comes with a tab completion script for Bash and ZSH. Just download "wp-completion.bash" and source it from ~/.bash_profile ##

touch .bash_profile                                                                     # create the ".bash_profile" file under the user home directory.

wget https://github.com/wp-cli/wp-cli/raw/master/utils/wp-completion.bash               #

cat wp-completion.bash >> .bash_profile                                                 # this will prepare the optional package amendment configure.
source .bash_profile                                                                    # compiles the optional package configuration into the main command. 

----------------------------------------------------------------------------------------# this script will be generated and saved by the cat command in the .bash_profile file.
# bash completion for the `wp` command

_wp_complete() {
        local OLD_IFS="$IFS"
        local cur=${COMP_WORDS[COMP_CWORD]}

        IFS=$'\n';  # want to preserve spaces at the end
        local opts="$(wp cli completions --line="$COMP_LINE" --point="$COMP_POINT")"

        if [[ "$opts" =~ \<file\>\s* ]]
        then
                COMPREPLY=( $(compgen -f -- $cur) )
        elif [[ $opts = "" ]]
        then
                COMPREPLY=( $(compgen -f -- $cur) )
        else
                COMPREPLY=( ${opts[*]} )
        fi

        IFS="$OLD_IFS"
        return 0
}
complete -o nospace -F _wp_complete wp
-----------------------------------------------------------------------------------------
$ wp --info
OS:     Linux 5.4.72-microsoft-standard-WSL2 #1 SMP Wed Oct 28 23:40:43 UTC 2020 x86_64
Shell:  /bin/bash
PHP binary:     /usr/bin/php8.0
PHP version:    8.0.3
php.ini used:   /etc/php/8.0/cli/php.ini
WP-CLI root dir:        phar://wp-cli.phar/vendor/wp-cli/wp-cli
WP-CLI vendor dir:      phar://wp-cli.phar/vendor
WP_CLI phar path:       /home/twrcha
WP-CLI packages dir:
WP-CLI global config:
WP-CLI project config:
WP-CLI version: 2.4.0
$
-----------------------------------------------------------------------------------------


########################################################
# How to reset MySQL default root (db admin) password: #
########################################################
## edit MySQL loading config; this command will open a new file in the nano editor, to edit MySQL’s service overrides. These change the default service parameters for MySQL.

sudo apt install mysql-server                                     # MySQL server v8.x .
systemctl stop mysql                                              # 
systemctl status mysql                                            #
sudo systemctl edit mysql                                         #

------------------------------------------------------------------# add these three lines to the editor then save and exit.
[Service]
ExecStart=
ExecStart=/usr/sbin/mysqld --skip-grant-tables --skip-networking
------------------------------------------------------------------

sudo systemctl daemon-reload                                                                       # injects the new setting to the loading service.
sudo systemctl start mysql                                                                         # 
mysql -u root                                                                                      # login to mysql as root.
mysql> FLUSH PRIVILEGES;                                                                           # this will flush the current root password. 
Query OK, 0 rows affected (0.01 sec)                                                               # output.
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'dba123';                   # set the new root (dba) password.
Query OK, 0 rows affected (0.02 sec)                                                               # output.
mysql> exit                                                                                        # 
bye                                                                                                # output.
sudo systemctl revert mysql                                                                        # reload mysql in the normal loading mode.
sudo systemctl restart mysql                                                                       #
sudo systemctl status mysql                                                                        #
mysql -u root -p                                                                                   # whenever you need to login to mysql as root with password.

mysql> use mysql;                                                                                  # to set the mysql database as the main database. 
Database changed                                                                                   # output. 

----------------------------------------------------------------
$ sudo systemctl revert mysql
[sudo] password for twrcha:
Removed /etc/systemd/system/mysql.service.d/override.conf.
Removed /etc/systemd/system/mysql.service.d.
$
----------------------------------------------------------------


###########################################
# Install NVM nodejs package manager      #
###########################################
wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
nvm ls-remote                                   # list all the available nodejs packages/versions.
nvm install 16.2.0                              # this will installed the specified/selected version of nodejs.


################################################
# Install Node.js (standard/custome version)   #
################################################
## Install a specific version of Node.js other than the default with your distro through the apt command. ##
## npm is the default package manager and online repository for Javascript and Node.js and many other packages. ## 
## current none default recommended nodejs version for Ubuntu-20.04-LTS is node-v14.x & npm-v6.x . ## 

sudo apt install nodejs                  @@ (Don't Install) this will install the default nodejs v10.24.1 for your distro Ubuntu20.04-LTS @@
sudo apt install npm                     @@ (Don't Install) this will install the default npm v6.14.12 for your distro Ubuntu20.04-LTS @@

curl -sL https://deb.nodesource.com/setup_current.x | sudo -E bash -        # setup the latest current release of nodejs.
or
wget -qO- https://deb.nodesource.com/setup_current.x | sudo -E bash -       # 

sudo apt install -y nodejs                                                  # install the latest (none default) Node.js & npm from the new repository.
node -v                                                                     # v16.1.0.
npm -v                                                                      # v7.11.2.

npm fund                                                                    #
npm test                                                                    #
sudo npm i --package-lock-only                                              #
Sudo npm audit                                                              #
npm config ls -l | grep config                                              #
npm run <script>                                                            #

sudo npm init                                                               # step-by-step process to set your own parameters and create your custome "package.json". 
sudo npm init --yes                                                         # create a package.json file with the default parameters. the config will be stored in "~/.npmrc".
sudo npm set init.<parameter> "parameter vale"                              # set/change a specific 

sudo npm install                                                            # this will install all the modules listed as dependencies in "package.json" under the user home direcotry.
sudo npm install -g npm                                                     # upgrade npm to the latest version.                                                
sudo npm install -g npm@7.14.0                                              # install/upgrade a specific version of npm (v7.14.x).
sudo npm install -g cnpm --registry=https://registry.npm.taobao.org         # install a special custom version of npm from a specific source. "~/Razor.VSCode/package.json". 

----------------------------------------------------------------------------# to completly remove nodejs & npm follow these steps.
sudo apt purge nodejs npm                                                   # 
sudo apt autoremove                                                         #
## in addtion remove the below folders for a clean start:
# ~/.npmrc
# ~/.npm
# ~/tmp
# ~/.npm-init.js
----------------------------------------------------------------------------#


## there are four different ".npmrc" files in your system as below: ##
----------------------------------------------------------------------
# per-project config file (/path/to/my/project/.npmrc)

# per-user config file (~/.npmrc)

# global config file ($PREFIX/etc/.npmrc)

# npm builtin config file (/path/to/npm/.npmrc)
-------------------------------------------------------


## npm init Default values extracted from the current directory: ##
----------------------------------------------------------------------------#
name: the current directory name.
version: always 1.0.0
description: info from the README, or an empty string ""
scripts: by default creates an empty test script
keywords: empty
author: empty
license: ISC
bugs: information from the current directory, if present
homepage: information from the current directory, if present
---------------------------------------------------------------------------#

Examples:
---------------------------------------------------------------------------#
> npm set init.author.email "example-user@example.com"
> npm set init.author.name "example_user"
> npm set init.license "MIT"
---------------------------------------------------------------------------#


## The nodejs configuration file is located "~/package.json" ##
---------------------------------------------------------------------------# to run the setup source along with a customisable setup script file "nodesource_setup.sh".
curl -sL https://deb.nodesource.com/setup_current.x -o nodesource_setup.sh

nano nodesource_setup.sh                                                   # use "GNU nano editor" to view/modify the "nodesource_setup.sh" file. use "ctl+X" to exit the editor. 
sudo bash nodesource_setup.sh                                              # 
sudo apt install -y nodejs                                                 #
node -v                                                                    #
----------------------------------------------------------------------------


################################################
#        Install Razor.VSCode                  #
#  Installing .NET Core Runtime (x64) 2.1.3    #
################################################
sudo git clone https://github.com/aspnet/Razor.VSCode.git                   # (Archive code).
cd Razor.VSCode                                                             # 
sudo git submodule update --init --recursive                                #
bash build.sh                                                               #
$HOME/.dotnet/dotnet                                                        # add this folder to the environment PATH under "~/.bash_profile".
----------------------------------------------------------------------------#
$ bash build.sh                                                             # 
warning: dotnet found on the system PATH is '/usr/bin/dotnet' but KoreBuild will use '/home/twrcha/.dotnet/dotnet'.
warning: Adding '/home/twrcha/.dotnet' to system PATH permanently may be required for applications like Visual Studio for Mac or VS Code to work correctly.

Successfully installed the ASP.NET Core HTTPS Development Certificate.
To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only). For establishing trust on other platforms refer to the platform specific documentation.
For more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
Microsoft (R) Build Engine version 16.1.4-preview+ga972ec96c3 for .NET Core
Copyright (C) Microsoft Corporation. All rights reserved.

  Installing .NET Core Runtime (x64) 2.1.3
  Installing .NET Core Runtime (x64) 2.2.0-preview2-26905-02
  Installing .NET Core Runtime (x64) 3.0.0-preview1-26907-05
$

$ dotnet dev-certs https --trust                                           #

Welcome to .NET 5.0!
---------------------
SDK Version: 5.0.300

Trusting the HTTPS development certificate was requested. Trusting the certificate on Linux distributions automatically is not supported. For instructions on how to manually trust the certificate on your Linux distribution, go to https://aka.ms/dev-certs-trust
A valid HTTPS certificate is already present.
$
----------------------------------------------------------------------------#


####################################################################
# Weaviate-CLI Installation - an Open Source Vector-Search-Engine  #
####################################################################
## Weaviate uses transformers (DistilBERT, BERT, RoBERTa, Sentence-BERT, etc) to vectorize and semantically search through your data. ##
## make sure to specify a port other than http/80 or https/443 to prevent conflic with your apache2 webserver sites. ##

pip install weaviate-cli                                   # v2.1.1
pip uninstall weaviate-cli                                 #

## next step is setting the configuration manually to be able to use Weaviate, set your project URL and authentication type. ##
## for example http://localhost 8080 ##

weaviate config set                                        #
or
weaviate init                                              # stores your site config in "~/.local/bin/weaviate".

weaviate --config-file <myconfig.json>                     # you can add a configuration flag pointing to a configuration ".json" file.  

weaviate config view                                       # to verify the configuration.

weaviate ping                                              # to verify the connection to your URL.

weaviate version 

weaviate schema import <my_schema.json>                    # to add schema to your project, there are three operation with regard to the schema: import, export and truncate.

weaviate schema import --force my_schema.json              # to overwrite exiting schema.

weaviate schema export my_schema.json                      # 

weaviate schema delete                                     # is the same as schema truncate.

weaviate data import my_data_objects.json                  #

weaviate data delete                                       # same as data empty.

docker-compose up -d && docker-compose logs -f weaviate    # Attaching to the log output of only Weaviate.


###########################################################################
# How to create a new Python3.x project/Environment under VSCode          #
###########################################################################

## The easiest way to reset VS Code back to the default settings is to clear your user settings.json file contents in the Settings editor. Delete everything between the two curly braces, save the file, and VS Code will go back to using the default values. ##

from bash:
----------
sudo apt install python3-venv             # install Python3.x venv library.

python3 -m venv twrcha_venv               # create your environment/project folder & venv config file under the path "/home/twrcha/Twrcha_venv/pyvenv.cfg".

source twrcha_venv/bin/activate           # run the environment/project activation script "activate.ps1".
                                                         
code .                                    # this will install and activate your Python project environment in VisualStudioCode on the Windows host.

             
-----------------------------------------------------------------------------------------------------------------
$ source twrcha_venv/bin/activate
(twrcha_venv) $

(twrcha_venv) $ code .
Installing VS Code Server for x64 (3c4e3df9e89829dce27b7b5c24508306b151f30d)
Downloading: 100%
Unpacking: 100%
Unpacked 1719 files and folders to /home/twrcha/.vscode-server/bin/3c4e3df9e89829dce27b7b5c24508306b151f30d.
(twrcha_venv) $
-----------------------------------------------------------------------------------------------------------------

from Pwsh:
----------
# to set the path to your master project folder.

py -3 -m venv twrcha.venv                              # create your environment/project folder "twrcha.venv".
twrcha.venv\scripts\activate                           # activate the environment/project by running the "activate.bat" which will launch the "activate.ps1" script.
code .                                                 # this will install and activate your Python project environment in VisualStudioCode on the Windows host.

## The process will install "Razor.VSCode version 6.0.0-alpha.1.21201.19" in VSCode which requires access to the path "c:\Users\ardal\Application Data" ##
## Blazer is a tool used to build client web apps with C# . it is part of the DotNet-SDK package. ##

dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview4-19216-03 #

dotnet                                                                       #
dotnet new blazorserver -o BlazorApp --no-https                              # Restored "C:\Users\ardal\BlazorApp\BlazorApp.csproj" . 
cd BlazorApp                                                                 #
dotnet watch run                                                             # it will open the URL http://localhost:5000/ .
dotnet new blazorserver -o TodoList                                          # 
cd TodoList                                                                  # 
dotnet new razorcomponent -n Todo -o Pages                                   # 
dotnet new blazorwasm -h                                                     # 
dotnet new blazorserver -h                                                   # 


BlazorApp folder containes the belwo files:
-------------------------------------------
# Program.cs is the entry point for the app that starts the server.
# Startup.cs is where you configure the app services and middleware.
# App.razor is the root component for the app.
# BlazorApp.csproj defines the app project and its dependencies.
# The BlazorApp/Pages directory contains some example web pages for the app.


############################################################################
# Install DotNet-SDK-5.0 & ASP.NET-Core-Runtime-5.0 in Ubuntu 20.x - WSL2  #
############################################################################

# add the Microsoft package signing key to your list of trusted keys and add the package repository (packages.microsoft.com).

wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb

# install Microsoft dotnet-sdk-5.0 & ASP.NET-Core-Runtime-v5.0 & dotnet-runtime-5.0.

sudo apt update
sudo apt install dotnet-sdk-5.0
sudo apt install aspnetcore-runtime-5.0
sudo apt install dotnet-runtime-5.0

-----------------------------------------------------------------------------------------------------------------------------
This software may collect information about you and your use of the software, and send that to Microsoft.
Please visit http://aka.ms/dotnet-cli-eula for more information.
Welcome to .NET!
-----------------
Learn more about .NET: https://aka.ms/dotnet-docs
Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs

Telemetry
---------
The .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.

Read more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry

-------------------------------------------------------------------------------------------------------------------------------


##########################################################################
# Pull & Enable the latest NuGet (v5.9.x) Package in Ubuntu 20.x - WSL2  #
##########################################################################

## the default nuget for Ubuntu-20.04-LTS is v2.x to upgrade to the latest version follow the below steps. ##
## nuget is a CLI utility by NuGet.org for Windows that provides all Linux NuGet capabilities to Microsoft DotNet environment. ##
## The latest recommended NuGet CLI is always available at "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe". ##
## nuget Works only with "packages.config" file and not with solution (.sln) files. ##
## nuget Works with ".nuspec" files but not with project files. ##

sudo apt install mono-devel
sudo apt install mono-runtime
sudp apt install dpkg-sig
Sudo Apt install nuget

## Download the latest stable "nuget.exe" for Windows to "/usr/local/bin": ##
sudo curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

alias nuget="mono /usr/local/bin/nuget.exe"                       # Create the ".bash_aliases" file if it does not already exist, then registers the nuget aliases in it. 


from Pwsh:
----------
dotnet nuget add source C:\Users\ardal\Downloads\NuGet.Net\Packages                           # add the dotnet-nuget local package source.
Install-Module nuget -Force                                                                   # install NuGet.
nuget update -self                                                                            #


dotnet nuget disable source C:\Users\ardal\Downloads\NuGet.Net\Packages                       # if required reversing the previous add source step.

Find-Package -name NuGet.core -ProviderName NuGet                                             # how to lookup packages from Microsoft Package Management online repository.

dotnet add package NETStandard.Library.NETFramework --version 2.0.0-preview2-25405-01         # ???? from NuGet.org ????. 


########################################################
# Powershell-7.x_x64 (PS-bash.exe) Commands & Syntax   #
########################################################

Powershell v7.1.x installation path:
"C:\Program Files\PowerShell\7\pwsh.exe"

Regedit:
Computer\HKEY_CLASSES_ROOT\Directory\Background\shell\PowerShell7x64\
Computer\HKEY_CLASSES_ROOT\Directory\shell\PowerShell7x64\

PS in Admin-mode set the Execution-Policy-level needed for your work considering the security risks:

Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm              # change/set the ExecutionPolicy to RemoteSigned for the current user.

## There are Four Execution-Policy options (Undefined, AllSigned, RemoteSigned, Restricted, Unrestricted)##

# (Undefined) - No execution policy has been set.
# (Restricted) - No scripts can be run, PowerShell can be used only in "interactive mode".
# (Unrestricted) - No restrictions, all PowerShell scripts can be run.
# (AllSigned) - all scripts (local & remote) has to be signed by a trusted publisher can be run.
# (RemoteSigned) - Downloaded-scripts must be signed by a trusted publisher before they can be run. (we will be using this mode).

get-host                                                    # check the powershell version you are using. 

$PSVersionTable                                             # check your PS version details.

ExecutionPolicy                                             # or "Get-ExecutionPolicy" to check the ExecutionPolicy status.

[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12               # set the minimum TLS version to v1.2.

Start-Process -Wait -FilePath <file name and path> -ArgumentList '/S','/v','/qn' -passthru    # to install a ".exe"  or ".msi" executable remotly and silently.

set _NT_SYMBOL_PATH=srv*DownstreamStore*https://msdl.microsoft.com/download/symbols           # refer directly to the public symbol server in your symbol path.

# Three ways to access your distro from Windows without the need of running the actual distro CLI interface:

wsl sudo apt update                                                                           # Launch the drfault Distro CLI within Powershell.

lxrunoffline run -n Ubuntu-20.04 -w                                                           # Launch a specific distro CLI within PowerShell.

bash.exe /c start .                                                                           # Launch your default distro CLI from Windows File-Explorer.

Install-Package LibGit2Sharp                                                                  # use the package manager to install the libgit2 library from nuget.org.

# setup the Windows10 firewall to allow WSL traffic through its vertual interface:
---------------------------------------------------------------------------------------------------------------- 
$ New-NetFirewallRule -DisplayName "WSL" -Direction Inbound  -InterfaceAlias "vEthernet (WSL)"  -Action Allow

Name                  : {23e29035-8cf0-48a7-9ac0-8bf19d52656f}
DisplayName           : WSL
Description           :
DisplayGroup          :
Group                 :
Enabled               : True
Profile               : Any
Platform              : {}
Direction             : Inbound
Action                : Allow
EdgeTraversalPolicy   : Block
LooseSourceMapping    : False
LocalOnlyMapping      : False
Owner                 :
PrimaryStatus         : OK
Status                : The rule was parsed successfully from the store. (65536)
EnforcementStatus     : NotApplicable
PolicyStoreSource     : PersistentStore
PolicyStoreSourceType : Local
$
------------------------------------------------------------------------------------------------------------------

# Download and Install the Azure Functions Core Tools v3.x or later:
  to develop and test your functions on your local computer from the command prompt or terminal. Your local functions can connect to live Azure services, and you can debug your functions     on your local computer using the full Functions runtime. You can even deploy a function app to your Azure subscription.

# to install an "Azure local function library" for your project by listing & selecting the available "worker runtime" for your project "LocalFunctionProject".

func init MyFunctionProj                                                                      # "MyFunctionProj" is the name of my local project if it is not there it will be created.
------------------------------------------------------------------
(base) PS C:\Users\ardal> func init MyFunctionProj
Use the up/down arrow keys to select a worker runtime:
dotnet
dotnet (isolated process)
node
python
java
powershell
custom

# after selecting dotnet.

Writing C:\Users\ardal\MyFunctionProj\.vscode\extensions.json
(base) PS C:\Users\ardal>
-----------------------------------------------------------------

dotnet add MyFunctionProj package LibGit2Sharp --version 0.27.0-preview-0096                  # install the libgit2 library under my local project named "MyFunctionProj". 


# (DISM) Deployment Image Servicing and Management platform: iss used to mount and service Windows images before deployment. A subset of DISM commands can be used on online Windows images.    DISM tools can be used to mount, and get information about, Windows image (.wim) files or virtual hard disks (.vhd or .vhdx). You can also use it to install, uninstall, configure, and       update Windows features, packages, and drivers in a Windows image or to change the edition of a Windows image.
# you can install the DISM module from the Windows Assessment and Deployment Kit (Windows ADK), which contains all of the tools that you need to customize, assess, and deploy Windows          operating systems to new computers.

# (WMF) Windows Management Framework: provides a consistent management interface for Windows. WMF provides a seamless way to manage various versions of Windows client and Windows Server.      WMF installer packages contain updates to management functionality and are available for older versions of Windows.

# install NuGet package and command tools from nuget.org.

install-package nuget

# (Choco) command: install the "Chocolatey".org package from "Chocolatey.org" to enable "Apt-get & Apt install" equivelent for Powershell (bash.exe),(The Public version of this package is     unsupported, for support you need the licenses business version).

Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

choco upgrade chocolatey

# (LxRunOffline) fully featured utility for managing WSL. the installation will add "C:\tools\lxrunoffline" to the system enviroment variable PATH.
# Close and reopen your shell to see the changes, or just type "refreshenv".

choco install lxrunoffline
refreshenv                                                                                   # Refresh environment variables from registry for bash.exe/cmd.exe. 

# (Cmdlets) perform an action and typically return a Microsoft .NET object to the next command in the pipeline. A cmdlet is a single command that participates in the pipeline semantics of     PowerShel.

## How Cmdlets Differ from Commands ##

# Cmdlets are instances of .NET classes; they are not stand-alone executables.
# Cmdlets can be created from as few as a dozen lines of code.
# Cmdlets do not generally do their own parsing, error presentation, or output formatting. Parsing, error presentation, and output formatting are handled by the PowerShell runtime.
# Cmdlets process input objects from the pipeline rather than from streams of text, and cmdlets typically deliver objects as output to the pipeline.
# Cmdlets are record-oriented because they process a single object at a time. 

# (posh-git) module installation, available online from "PowerShell Gallery" repository as part of the "PowerShellGet" module.

Find-Package <packageName or phrase>                                                          # lookup the package or list the packages containes that phrase.

Install-Package <packageName>                                                                 # fetch and install packages from online repositories.

Install-Module PowershellGet -Force                                                           # adds an online package repository to the standard online sources library.                                                                                                                   # -force to overwrite the existing installed pakcage.
PowerShellGet\Install-Module posh-git -Scope CurrentUser -Force                               # for a complete new installation of "posh-git".

Get-service -name win*                                                                        # check the status of service(s). 
Get-Service -Name Winmgmt, WinRM, Spooler                                                     # check multiple services status.
Get-Service -DisplayName "Print Spooler"                                                      # get status of a service using the service display name, "*Spooler*" supported.
Get-Service Winmgmt -DependentServices                                                        # list the dependant services and their status.
Get-Service Winmgmt -RequiredServices                                                         # list the required service(s) that this service depends on.
Get-Service -Include S*, *print*                                                              # using include and wildcards for flexable lookup.
Get-Service -Exclude S*, A*, *Windows*                                                        # using exclude and wildcards for flexable lookup. 
Get-Service Spooler | fl *                                                                    # using pipeline & fl * , which stands for "Format-List" for more details.
Get-Service winmgmt, winrm | Select Name, DisplayName, Starttype, Status                      # using pipeline & select .

# CimCmdlets online repository provieds a set of commands that replaces Windows WMI command set and tools, while it can be used cross platforms (Windows & Linux).

Get-Command -Module CimCmdlets                                                                #

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-CimAssociatedInstance                          7.0.0.0    CimCmdlets
Cmdlet          Get-CimClass                                       7.0.0.0    CimCmdlets
Cmdlet          Get-CimInstance                                    7.0.0.0    CimCmdlets
Cmdlet          Get-CimSession                                     7.0.0.0    CimCmdlets
Cmdlet          Invoke-CimMethod                                   7.0.0.0    CimCmdlets
Cmdlet          New-CimInstance                                    7.0.0.0    CimCmdlets
Cmdlet          New-CimSession                                     7.0.0.0    CimCmdlets
Cmdlet          New-CimSessionOption                               7.0.0.0    CimCmdlets
Cmdlet          Register-CimIndicationEvent                        7.0.0.0    CimCmdlets
Cmdlet          Remove-CimInstance                                 7.0.0.0    CimCmdlets
Cmdlet          Remove-CimSession                                  7.0.0.0    CimCmdlets
Cmdlet          Set-CimInstance                                    7.0.0.0    CimCmdlets

Get-CimInstance -ClassName Win32_BIOS                                                         #
Get-CimInstance -ClassName Win32_BIOS | Select-Object -Property SerialNumber                  # using pipe string syntax.
(Get-CimInstance -ClassName Win32_BIOS -Property SerialNumber).SerialNumber                   # using the dotted style to eleminate the need for a pipe string.
Get-CimInstance -Query 'Select * from Win32_BIOS'                                             # backward compatable with VB script queries.

Get-Process                                                                                   #
Get-Help                                                                                      #
Get-item                                                                                      #
Get-content                                                                                   #
Get-ChildItem                                                                                 #
Write-Host                                                                                    #
Select-String                                                                                 #

# what is Powershell Grep?
# what is Powershell Concatenate String?
# Types of PowerShell Wildcards?
# what are PowerShell If-Not conditions?


## PowerShell-Gallary: is an online repository for Powershell related modules and packages:
   https://www.powershellgallery.com/ 
## Powershell (DSC) Desired State Configuration: allows you to automate the way that you manage configuration data for software services as well as the environment in which these services    run. DSC uses a set of built-in and custom 'resources' as the building blocks for a configuration. if you have specific requirements you may need to create the relevant resource to make    the configuration happen. Nicolas Prigent provides a practical guide to DSC resources. ##
## (AppX) module is a package manager for Powershell, and Cmdlets for AppX module are designed to streamline the administration of MSIX or AppX package management. ##
## New Windows 10 “Universal apps” or “Universal Windows Platform” apps are distributed in .Appx or .AppxBundle files. These are application packages that include the name, description, and    permissions of an app along with the application’s binaries. Windows can install and uninstall these packages in a standard fashion, so developers don’t have to write their own    installers. Windows can handle everything in a consistent way, allowing it to cleanly uninstall applications with no leftover registry entries.
   If a developer makes a .Appx program, you normally don’t download and install it directly. Instead, you visit the Windows Store, search for the program you want to install, and download    it from the Store. All software in the Windows Store is in .Appx or .AppxBundle format behind the scenes.
   In some cases, you may need to install a .Appx or .AppxBundle package from outside the Store. For example, your workplace may provide an application you need in .Appx format, or you may    be a developer who needs to test your own software before uploading it to the Store. ##
## do not install none-Microsoft modules from Powershell-Gallaery unless you have to, and make sure to test it thoroughly: 

Install-Module -Name Pester -RequiredVersion 3.4.0 -force -SkipPublisherCheck                 # sample: Install-Module command and switches.
UnInstall-Module -Name Pester -RequiredVersion 3.4.0 -force -SkipPublisherCheck               # sample:


Install-Module -Name ComputerManagementDsc                                    # by (DSC) Community. you can add the switch "-AllowPrerelease" to allow prerelease version installation.
Install-Module -Name VSSetup                                                  #
Install-Module -Name xPowerShellExecutionPolicy                               #
Install-Module -Name PackageManagement                                        #

get-module AzureAD -ListAvailable                                             #
DISM.exe /Online /Cleanup-image /Restorehealth                                #
sfc /scannow                                                                  #

https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5                        # download Powershell 7.14 or above to enable Appx module.
Get-AppxPackage -AllUsers                                                                     # 
get-appxpackage Microsoft.GamingServices | remove-AppxPackage -allusers                       #
start ms-windows-store://pdp/?productid=9MWPM2CQNLHN                                          # the download is still failing due to the missing Appx module error.
gmo pki | ft name, CompatiblePSEditions                                                       #

Import-Module PKI -SkipEditionCheck;                                                          #
Get-Module                                                                                    #
Get-PSSession                                                                                 #
----------------------------------------------------------------------------------------------------------------------------
$  gmo pki | ft name, CompatiblePSEditions

Name CompatiblePSEditions
---- --------------------
PKI  {}
PKI  {Desktop, Core}
$

$ Get-Module

ModuleType Version    PreRelease Name                                ExportedCommands
---------- -------    ---------- ----                                ----------------
Script     0.0                   Conda                               {Add-CondaEnvironmentToPrompt, Enter-CondaEnviron…
Manifest   7.0.0.0               Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-Item, Clear-It…
Manifest   7.0.0.0               Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Ob…
Script     1.0                   PKI                                 {Add-CertificateEnrollmentPolicyServer, Export-Ce…
Manifest   1.0.0.0               PKI                                 {Add-CertificateEnrollmentPolicyServer, Export-Ce…
Script     2.1.0                 PSReadLine                          {Get-PSReadLineKeyHandler, Get-PSReadLineOption, …
$

$ Get-PSSession

 Id Name            Transport ComputerName    ComputerType    State         ConfigurationName     Availability
 -- ----            --------- ------------    ------------    -----         -----------------     ------------
  2 WinPSCompatSes… Process   localhost       RemoteMachine   Opened                                 Available
$
-----------------------------------------------------------------------------------------------------------------------------


Import-Module -Name Appx                                                                      # Error: Import-Module: Operation is not supported on this platform. (0x80131539).

----------------------------------------------------------------------------------------------#
$ Import-Module APPX -SkipEditionCheck;
Import-Module: Operation is not supported on this platform. (0x80131539)
$

$ Import-Module Appx -UseWindowsPowerShell                                                    #
WARNING: Module Appx is loaded in Windows PowerShell using WinPSCompatSession remoting session; please note that all input and output of commands from this module will be deserialized objects. If you want to load this module into PowerShell please use 'Import-Module -SkipEditionCheck' syntax.
$

$ Import-Module Appx -UseWindowsPowerShell -SkipEditionCheck                                  #
Import-Module: Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.
$
----------------------------------------------------------------------------------------------#


------------------------------------------------------------------------------
# How to manually install a module after download it from Powershell-Gallary :
------------------------------------------------------------------------------
Move-Item -Path .\sqlserver.21.1.18230.nupkg -Destination .\sqlserver.21.1.18230.zip                                         #
Expand-Archive -Path .\sqlserver.21.1.18230.zip                                                                              # 

# Determine where to install the module. For this example the module will be installed in "$env:ProgramFiles" :
$env:PSModulePath.Split(';')                                                                                                 #
New-Item -Path $env:ProgramFiles\WindowsPowerShell\Modules\SqlServer -ItemType Directory                                     #
Move-Item -Path .\sqlserver.21.1.18230 -Destination -Destination $env:ProgramFiles\WindowsPowerShell\Modules\SqlServer       #


#####################################################################
# Install/enable OpenSSH Server on Windows10 & Powershell 7.x_x64   #
#####################################################################

from Pwsh:
----------
dism /Online /Add-Capability /CapabilityName:OpenSSH.Server~~~~0.0.1.0                        # using (dism) to install "OpenSSH server" on Windows from Windows Optional Feature.

Add-WindowsCapability -Online -Name OpenSSH.Server*                                           # using (cmdlets) to install "OpenSSH server" on Windows from Windows Optional Feature. 
Get-WindowsCapability -Online | ? Name -like 'OpenSSH.Server*'                                # verification step.
Get-Service -Name *ssh*                                                                       # check the two services status, (stopped by default and not set to auto start).

Start-Service sshd                                                                            # start the 1st service.
Set-Service -Name sshd -StartupType 'Automatic'                                               # set the service to run automatically.
Start-Service ‘ssh-agent’                                                                     # start the 2nd service.
Set-Service -Name ‘ssh-agent’ -StartupType 'Automatic'                                        # set the service to run automatically.

## Using Ntdsutil.exe Tool to Manage Active Directory and its database (ntds.dit file) ##
# (FSMO) Flexible Single Master Operation - five roles - (Schema Master, Domain Naming Master, Infrastructure Master, RID pool manager, PDC "Primary Domain Controller" Emulator). 

Get-NetFirewallRule -Name *ssh*                                                               # verify that the firewall rule is configured by the installation.

# in case require to open the port (22/TCP) manually in Windows firewall.  

netsh advfirewall firewall add rule name=ssh dir=in action=allow protocol=tcp localport=22

(base) PS C:\Users\ardal> ssh ardal@pinegap
The authenticity of host 'pinegap (fe80::bc4e:802f:4f0a:f21e%55)' can't be established.
ECDSA key fingerprint is SHA256:CwVe6pF+Jf80BR6AzAT7+BjjG0/R41oH6h3c/apHRSM.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'pinegap,fe80::bc4e:802f:4f0a:f21e%55' (ECDSA) to the list of known hosts.
ardal@pinegap's password:

Microsoft Windows [Version 10.0.19042.870]
(c) 2020 Microsoft Corporation. All rights reserved.

ardal@PINEGAP C:\Users\ardal>

# to enable ssh connection from cross platform shell (Powershell Core) to WSL2,
# bash.exe in this context starts up "wsl -d YOURDEFAULTDISTRO" so you'll want to know what your Default is, and if you don't like it, change it with wsl --set-default DISTRO.
New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value "C:\WINDOWS\System32\bash.exe" -PropertyType String -Force

DefaultShell : C:\WINDOWS\System32\bash.exe
PSPath       : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE\OpenSSH
PSParentPath : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE
PSChildName  : OpenSSH
PSDrive      : HKLM
PSProvider   : Microsoft.PowerShell.Core\Registry

(base) PS C:\Users\ardal>

# the ssh "known_hosts" file is located under the path "C:\Users\ardal\.ssh\".

ssh ardal@<wsl2 name or ip>                          # ssh connect to the WSL2-Linux from PS-Bash.exe as the Windows user "ardal".


#copy files from/to the client/server.

scp test.txt ardal@pinegap:/downloads/test-dir/      # copy/transfer file(s) from/to. 
type test.txt                                        # to view the .txt file content.


##############################################################
# Install Anaconda3 Repository & toolset for Windows10       #
##############################################################

download and install Anaconda3 for Windows10 then add the "C:\ProgramData\Anaconda3\Scripts" to your Enviromental-Variables-system-PATH:

Path:
C:\ProgramData\Anaconda3\scripts\conda.exe                     # The Conda command.
C:\ProgramData\Anaconda3\python.exe                            # The python version installed and supported by Anaconda3. 

# make sure the below anaconda online update connectivity public/private keys (four files below) from "~\Library\bin\" are copied to the "~\dlls\" foldere to avoide connection errors.

from the path C:\ProgramData\Anaconda3\Library\bin\

libcrypto-1_1-x64.dll
libcrypto-1_1-x64.pdb

libssl-1_1-x64.dll
libssl-1_1-x64.pdb

copy to the path C:\ProgramData\Anaconda3\DLLs\

from Anaconda-CLI or cmd.exe (run as Admin):

conda init powershell


from Powershell (run as admin):

conda activate base                                            # to set Powershell as Anaconda3 default bash.

conda update --all                                             # perform update-upgrade-downgrade-remove the distribution & tools as necessary.

conda update conda                                             # to update the conda pakage only.
conda update anaconda                                          # to update the distribution as a whole.
conda install <package name>                                   # for a specific required update.
conda update spyder                                            # update the spyder repository.


##########################################
# Docker for Linux (Ubuntu 20.x - WSL2)  #
##########################################

# RKT & LXC are Docker competitors.

# the default is not to use systemd for cgroups because the delegate issues still exists and systemd currently does not support the cgroup feature set required for containers run by docker.

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -                           # add Docker GPG key.

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"       # Add the Docker repository to APT sources, Docker installation pre-requisit.  

apt-cache policy docker-ce                        # repository verification process.

sudo usermod -aG docker <user>                    # adding the ubuntu user to Docker access group.

id -nG                                            # to verify that the user is amember of Docker access group.

sudo apt install docker-ce                        # install Docker.

sudo service docker start                         # start the docker service (automated).

sudo service docker status                        # show the Docker service status & details.

docker stats                                      # check the docker contaiers HW utilisation CPU, RAM, IO, PID.

docker run hello-world                            # it will pull/download and load the container "hello-world" to verify that the docker setup is running correctly.

docker pull ubuntu                                # pull/download and load the latest "ubuntu" container.

docker run ubuntu                                 # run the latest ubuntu container, if it is not found locally it will be pulled and loaded.

docker info --format '{{.OSType}}'                # Docker installled package OS type, for example "Linux".

systemctl status docker                           # checking the Docker service status, with full details.

systemctl show docker                             # to see the low-level properties of a unit in a key=value format.

systemctl show docker -p Conflicts                # to display a single property, you can pass the -p flag with the property name.

systemctl is-active docker                        # simple status: Active or Inactive.

systemctl is-enabled docker                       # cheking if the service is autostarted.

systemctl is-failed docker                        # check whether the service is in a failed state, means failed to start.

systemctl list-unit-files                         # list all the units including the untis that are not loaded by systemd, (complete units list), [322/303 files].

systemctl list-units --all                        # by default "systemctl" & "systemctl list-units" will provide the same output by listing only the active units the systemd knows about.

systemctl list-units --all --state=inactive       #

systemctl list-units --all --type=service         #

systemctl list-dependencies Docker --all          # without "--all" the recursive dependencies are only displayed for ".target" units.

systemctl list-dependencies Docker --reverse      # shows the units that docker depends on.

systemctl list-dependencies Docker --before       # the units that has to be started before this unit starts.

systemctl list-dependencies Docker --after        # the units that will starts once this unit is started.            

systemctl cat docker                              # to displt the unit ".service" file content.

systemctl start docker                            # the systemctl always search for ".service" file to invoke.

systemctl stop docker                             #

systemctl restart docker                          #

systemctl reload docker                           # to reload the application/service config file without restarting. (not supported by all services).

systemctl reload-or-restart docker                # the system will check if reload is not supported it will restart the service.

systemctl enable docker                           # enable the service to start automatically during the system startup /lib/systemd/system or /etc/systemd/system/ .

systemctl disable docker                          # stop the service from starting automatically.

twrcha@PineGap:/etc/systemd/system$ ls            # the Auto-service run@startup, service-files are either located here or in the path below, for example docker.target.wants.
         
twrcha@PineGap:/lib/systemd/system$ ls            # the Auto-service run@startup, service-files are either located here or in the path above, for example docker.target.wants .

--------------------------------------------------------------------------------------------------------
$ systemctl enable docker
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker
==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===
Authentication is required to reload the systemd state.
Authenticating as: ,,, (twrcha)
Password:
==== AUTHENTICATION COMPLETE ===
==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===
Authentication is required to reload the systemd state.
Authenticating as: ,,, (twrcha)
Password:
==== AUTHENTICATION COMPLETE ===
==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-unit-files ===
Authentication is required to manage system service or unit files.
Authenticating as: ,,, (twrcha)
Password:
==== AUTHENTICATION COMPLETE ===
==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===
Authentication is required to reload the systemd state.
Authenticating as: ,,, (twrcha)
Password:
==== AUTHENTICATION COMPLETE ===
$
--------------------------------------------------------------------------------------------------------


################################################################################################
# Docker-Desktop & MiniKube-Kubernetes Powershell 7.x_x64 integrated with WSL2 as its backend  #
################################################################################################

from pwsh:
-----------
wsl uname --all                                    # check the current installed WSL & kernel versions. 

wsl --set-default <distro name>                    # set WSL default Linux distro.

wsl.exe --set-default-version 2                    # set WSL2 as the default Windows Subsystem for Linux.

wsl.exe --set-version <distro name> 2              # set/(upgrade or downgrade) your existing Linux distro's WSL version to (1 or 2).

wsl.exe -l -v                                      # list all the available distros, their status and their WSL version.

wsl.exe -l                                         # list the distro's and highlight the default distro.


(base) PS C:\Users\ardal> wsl uname --all
Linux PineGap 5.4.72-microsoft-standard-WSL2 #1 SMP Wed Oct 28 23:40:43 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
(base) PS C:\Users\ardal>


(base) PS C:\Users\ardal> wsl.exe -l -v
  NAME                   STATE           VERSION
* Ubuntu-20.04           Running         2
  openSUSE-Leap-15.2     Stopped         1
  docker-desktop-data    Running         2
  docker-desktop         Running         2


(base) PS C:\Users\ardal> wsl.exe -l --all
Windows Subsystem for Linux Distributions:
Ubuntu-20.04 (Default)
openSUSE-Leap-15.2
docker-desktop-data
docker-desktop
(base) PS C:\Users\ardal>


####################################################################################
# Install Kubernetes-kubectl for Linux - (WSL2) managed from Ubuntu 20.x - WSL2    #
####################################################################################

from Pwsh:         
----------
curl -LO https://dl.k8s.io/release/v1.20.0/bin/windows/amd64/kubectl.exe

curl -LO https://dl.k8s.io/v1.20.0/bin/windows/amd64/kubectl.exe.sha256

CertUtil -hashfile kubectl.exe SHA256
type kubectl.exe.sha256

kubectl version --client


from bash:
----------
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"

echo "$(<kubectl.sha256) kubectl" | sha256sum --check
kubectl: OK

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

kubectl version --client


##########################################################################################################
# Kubernetes-kubectl-(Minikube) & Docker-Desktop-v20.x for Windows10 - (WSL2), Managed from Powershell   #
##########################################################################################################

# downalod and install the "minikube-installer.exe" Windows package:
C:\Program Files\Kubernetes\Minikube                                                                         # the default installation path.

from pwsh:
----------
# install/enable WSL on Windows 10 x64:
 
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart              # install/enable/turn on Windows subsystem for Linux.

# the install/ enable WSL2 on Windows 10 x64:

dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart                         # install/enable/turn on Virtual Machine platform on Windows.

# download and install "WSL-update_x64.msi" which will install WSL2 Linux kernel update package for x64 machines.

wsl --set-default-version 2                                                                                  # set WSL2 as the defaul Linux subsystem on windows.

minikube start --driver=docker                         # Old
.\minikube-windows-amd64.exe start --driver=docker     # new

minikube config set driver docker

You can now start kubectl from C:\Users\ardal\Downloads\Kubectl\kubectl.exe

kubectl version --client                        # check the Kubectl version.

mkdir .kube                                     # under the kubectl home directory C:\Users\ardal\Downloads\Kubectl create a folder with the name ".kube".

cd C:\Users\ardal\Downloads\Kubectl\.kube       # switch working directory to the ".kube" path.

New-Item config -type file                      # create an empty config file to be filled with your Kubernetes cluster config.


####################################################################################################################
# Kubernetes-kubectl-(Minikube) & Docker-Desktop-v20.x for Windows10 - (Hyper-V) Managed from Powershell 7.x_x64   #
####################################################################################################################

from Pwsh:
----------
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All       #to enable windows10 Hyper-V environment optional feature, then restart windows.

download and install Kubernetes - Minikube windows package:

C:\Program Files\Kubernetes\Minikube             #default installation path. 

minikube start --driver=hyperv 

minikube config set driver hyperv

You can now start kubectl from C:\Users\ardal\Downloads\Kubectl\kubectl.exe

kubectl version --client                        # check the Kubectl version.

docker info --format '{{.OSType}}'              # Docker installed package details.

docker run hello-world                          # to verify that the installation is correct and running the hello-world container properly.

mkdir .kube                                     # under the kubectl home directory C:\Users\ardal\Downloads\Kubectl create a folder with the name ".kube".

cd C:\Users\ardal\Downloads\Kubectl\.kube       # switch working directory to the ".kube" path.

New-Item config -type file                      # create an empty config file to be filled with your Kubernetes cluster config.

 
###################################
# Open-SUSE-Leap-v15.2 - WSL2     #
###################################

# SUSE is not apt or Systemctl compatable.
# YaST2 (Yet another Setup Tool ) is a Linux operating system setup and configuration tool. YaST2 is featured in the openSUSE Linux distribution.
# YaST2 can be used as Command line tool (similar to systemctl) and GUI tool.
# "zypper" is "Apt" equivalent on YaST2.
# SUSE uses RPM installation packages.
# SUSE i586 packages will run on Pentium class processors and all subsequent models, including the recent x86_64 Intel and AMD processors. x86_64 (the distro is multilib) will run only on     x86_64 architecture.

zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.2:Update/standard/openSUSE:Leap:15.2:Update.repo         # RPM packages online repository. 
zypper refresh
zypper install yast2

yast2                                  # run the yast2 GUI.
yast2 repositories		       # get to yast2 repository menu.
sudo zypper refresh                    # "zypper ref" equivalent to "sudo apt update".
yast2 --install filezilla              # similar to "apt install" to install packages/apps like "filezilla", a free open source SFTP & FTPS client.


##################################
# KALI-Rolling-2021.1 - WSL2     #
##################################

# Kali 2021.1 – 24th February, 2021 – The first 2021 Kali Rolling release. Kernel 5.10.0, Xfce 4.16.1.
# KALI is used by the IT security community (IT SOC, Cybersecurity, hackers and for penetration testing).  
# KALI Linux is well known for crashing due to an installed/added library that belong to one of the other distros; for example, Ubuntu "ppa:deadsnakes/ppa".
# KALI is apt & systemd-systemctl compatable.


####################################################
# Install Python3.8 on Debian-10.x & KALI-2021.1   #
####################################################

curl -O https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz
tar -xf Python-3.8.2.tar.xz
cd Python-3.8.2
./configure --enable-optimizations --enable-loadable-sqlite-extensions
make -j 4
sudo make altinstall

python3.8 --version


---------------------
Sample system output:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ vim /etc/apt/sources.list

# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://archive.ubuntu.com/ubuntu/ focal main restricted
# deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted
# deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ focal universe
# deb-src http://archive.ubuntu.com/ubuntu/ focal universe
deb http://archive.ubuntu.com/ubuntu/ focal-updates universe
# deb-src http://archive.ubuntu.com/ubuntu/ focal-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team, and may not be under a free licence. Please satisfy yourself as to
## your rights to use the software. Also, please note that software in
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://archive.ubuntu.com/ubuntu/ focal multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ focal multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-updates multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ focal-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu focal partner
# deb-src http://archive.canonical.com/ubuntu focal partner

deb http://security.ubuntu.com/ubuntu/ focal-security main restricted
# deb-src http://security.ubuntu.com/ubuntu/ focal-security main restricted
deb http://security.ubuntu.com/ubuntu/ focal-security universe
# deb-src http://security.ubuntu.com/ubuntu/ focal-security universe
deb http://security.ubuntu.com/ubuntu/ focal-security multiverse
# deb-src http://security.ubuntu.com/ubuntu/ focal-security multiverse
deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
# deb-src [arch=amd64] https://download.docker.com/linux/ubuntu focal stable


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ docker ps
CONTAINER ID   IMAGE                  COMMAND                  CREATED          STATUS          PORTS     NAMES
30dddd702836   e704287ce753           "/storage-provisione…"   14 minutes ago   Up 14 minutes             k8s_storage-provisioner_storage-provisioner_kube-system_6532a4b5-6ea1-444a-8c92-6e2551110a41_9
053f4366940c   bfe3a36ebd25           "/coredns -conf /etc…"   15 minutes ago   Up 15 minutes             k8s_coredns_coredns-f9fd979d6-xs2rq_kube-system_9eab45af-f1e4-4e0e-b410-f934ef302ce7_5
fdc3dfacaa90   79da37e5a3aa           "/kube-vpnkit-forwar…"   15 minutes ago   Up 15 minutes             k8s_vpnkit-controller_vpnkit-controller_kube-system_c707a874-578c-41db-9f35-42bd30265681_5
38d34c13e201   9d368f4517bb           "/usr/local/bin/kube…"   15 minutes ago   Up 15 minutes             k8s_kube-proxy_kube-proxy-scwmc_kube-system_6485eb44-b5a4-4bcd-b3b5-b9cde709790b_5
7cacfc4b88ab   bfe3a36ebd25           "/coredns -conf /etc…"   15 minutes ago   Up 15 minutes             k8s_coredns_coredns-f9fd979d6-wrhql_kube-system_ba7e3dd0-d39c-425f-8a7b-f14435303281_5
5fe560b46074   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_vpnkit-controller_kube-system_c707a874-578c-41db-9f35-42bd30265681_5
00f9b93f42fd   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_storage-provisioner_kube-system_6532a4b5-6ea1-444a-8c92-6e2551110a41_5
38a554334820   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_coredns-f9fd979d6-xs2rq_kube-system_9eab45af-f1e4-4e0e-b410-f934ef302ce7_5
52a1cd2238e5   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_coredns-f9fd979d6-wrhql_kube-system_ba7e3dd0-d39c-425f-8a7b-f14435303281_5
286f07a05db6   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_kube-proxy-scwmc_kube-system_6485eb44-b5a4-4bcd-b3b5-b9cde709790b_5
68bcde439fac   c15e4f843f01           "kube-apiserver --ad…"   15 minutes ago   Up 15 minutes             k8s_kube-apiserver_kube-apiserver-docker-desktop_kube-system_4ac4b5ee26e7058a1ed090c12123e3a6_5
f6e7549c2cf2   67b3bca112d1           "kube-controller-man…"   15 minutes ago   Up 15 minutes             k8s_kube-controller-manager_kube-controller-manager-docker-desktop_kube-system_77e9d7fdbb29bf4b5600ab5fbb368a2b_5
0a63991c3eac   4fa642720eea           "kube-scheduler --au…"   15 minutes ago   Up 15 minutes             k8s_kube-scheduler_kube-scheduler-docker-desktop_kube-system_57b58b3eb5589cb745c50233392349fb_5
4b17107e80c9   0369cf4303ff           "etcd --advertise-cl…"   15 minutes ago   Up 15 minutes             k8s_etcd_etcd-docker-desktop_kube-system_127f1e78367a800caa891919cc4b583f_5
ae4828bada76   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_kube-scheduler-docker-desktop_kube-system_57b58b3eb5589cb745c50233392349fb_5
b692ae88f694   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_kube-apiserver-docker-desktop_kube-system_4ac4b5ee26e7058a1ed090c12123e3a6_5
d17199fd929c   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_etcd-docker-desktop_kube-system_127f1e78367a800caa891919cc4b583f_5
8099ee42e5c3   k8s.gcr.io/pause:3.2   "/pause"                 15 minutes ago   Up 15 minutes             k8s_POD_kube-controller-manager-docker-desktop_kube-system_77e9d7fdbb29bf4b5600ab5fbb368a2b_5
$

$ docker images
REPOSITORY                           TAG                                                     IMAGE ID       CREATED         SIZE
docker/getting-started               latest                                                  3ba8f2ff0727   2 weeks ago     27.9MB
docker/desktop-kubernetes            kubernetes-v1.19.7-cni-v0.8.5-critools-v1.17.0-debian   93b3398dbfde   2 months ago    285MB
k8s.gcr.io/kube-proxy                v1.19.7                                                 9d368f4517bb   2 months ago    118MB
k8s.gcr.io/kube-apiserver            v1.19.7                                                 c15e4f843f01   2 months ago    119MB
k8s.gcr.io/kube-scheduler            v1.19.7                                                 4fa642720eea   2 months ago    45.6MB
k8s.gcr.io/kube-controller-manager   v1.19.7                                                 67b3bca112d1   2 months ago    111MB
k8s.gcr.io/etcd                      3.4.13-0                                                0369cf4303ff   7 months ago    253MB
k8s.gcr.io/coredns                   1.7.0                                                   bfe3a36ebd25   9 months ago    45.2MB
docker/desktop-storage-provisioner   v1.1                                                    e704287ce753   12 months ago   41.8MB
docker/desktop-vpnkit-controller     v1.0                                                    79da37e5a3aa   13 months ago   36.6MB
k8s.gcr.io/pause                     3.2                                                     80d28bedfe5d   13 months ago   683kB
icrosby/weaviate-verification        latest                                                  db2c9aff7c81   2 years ago     231MB
$
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ journalctl -xe
Apr 23 13:39:17 PineGap WSL2: Performing memory compaction.
Apr 23 13:39:22 PineGap sudo[11157]:   twrcha : TTY=pts/0 ; PWD=/home/twrcha ; USER=root ; COMMAND=/usr/bin/apt autoremove
Apr 23 13:39:22 PineGap sudo[11157]: pam_unix(sudo:session): session opened for user root by twrcha(uid=0)
Apr 23 13:39:22 PineGap sudo[11157]: pam_unix(sudo:session): session closed for user root
Apr 23 13:39:46 PineGap polkitd(authority=local)[1301]: Registered Authentication Agent for unix-process:11176:5318805 (system bus name :1.81 [/usr/bin/pkttyagent --notify-fd 5 --fallback], object path /org/fre>
Apr 23 13:39:49 PineGap polkitd(authority=local)[1301]: Operator of unix-process:11176:5318805 successfully authenticated as unix-user:twrcha to gain ONE-SHOT authorization for action org.freedesktop.systemd1.m>
Apr 23 13:39:49 PineGap systemd[1]: Starting The Apache HTTP Server...
-- Subject: A start job for unit apache2.service has begun execution
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- A start job for unit apache2.service has begun execution.
--
-- The job identifier is 2043.
Apr 23 13:39:49 PineGap apachectl[11188]: (98)Address already in use: AH00072: make_sock: could not bind to address [::]:80
Apr 23 13:39:49 PineGap apachectl[11188]: (98)Address already in use: AH00072: make_sock: could not bind to address 0.0.0.0:80
Apr 23 13:39:49 PineGap apachectl[11188]: no listening sockets available, shutting down
Apr 23 13:39:49 PineGap apachectl[11188]: AH00015: Unable to open logs
Apr 23 13:39:49 PineGap apachectl[11185]: Action 'start' failed.
Apr 23 13:39:49 PineGap apachectl[11185]: The Apache error log may have more information.
Apr 23 13:39:49 PineGap systemd[1]: apache2.service: Control process exited, code=exited, status=1/FAILURE
-- Subject: Unit process exited
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- An ExecStart= process belonging to unit apache2.service has exited.
--
-- The process' exit code is 'exited' and its exit status is 1.
Apr 23 13:39:49 PineGap systemd[1]: apache2.service: Failed with result 'exit-code'.
-- Subject: Unit failed
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- The unit apache2.service has entered the 'failed' state with result 'exit-code'.
Apr 23 13:39:49 PineGap systemd[1]: Failed to start The Apache HTTP Server.
-- Subject: A start job for unit apache2.service has failed
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- A start job for unit apache2.service has finished with a failure.
--
-- The job identifier is 2043 and the job result is failed.
Apr 23 13:39:49 PineGap polkitd(authority=local)[1301]: Unregistered Authentication Agent for unix-process:11176:5318805 (system bus name :1.81, object path /org/freedesktop/PolicyKit1/AuthenticationAgent, loca>
Apr 23 13:40:18 PineGap WSL2: Performing memory compaction.
Apr 23 13:44:19 PineGap PackageKit[11129]: daemon quit
Apr 23 13:44:19 PineGap systemd[1]: packagekit.service: Succeeded.
-- Subject: Unit succeeded
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- The unit packagekit.service has successfully entered the 'dead' state.

$
-----------------------------------------------------------------------------


########################################################################
# OpenMediaVault NAS software for Debian-10 & Raspberry-Pi x86 only    #
########################################################################
apt-get install --yes gnupg
wget -O "/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc" https://packages.openmediavault.org/public/archive.key
apt-key add "/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc"


mysql

GRANT ALL ON phpipam.* TO 'phpipam'@'localhost IDENTIFIED BY 'StrongDBPassword';


#############################################################################################################
# GPU drivers, SDKs, APIs, toolkits & libraries                                                             #
# (Nvidia/GeForce/CUDA, AMD/OpenGL/Radeon, Intel/, Vulcan, nouveau, Vesa)                                   #
#############################################################################################################

sudo inxi -SAMDG

sudo lshw -c video

glxgears

sudo apt install mesa-utils ubuntu-desktop
sudo apt install software-properties-gtk

sudo apt install xserver-xorg-video-nvidia-495
sudo apt install xserver-xorg-video-radeon
sudo apt install xserver-xorg-video-amdgpu
sudo apt install xserver-xorg-video-amdgpu-hwe-18.04
sudo apt install xserver-xorg-video-intel
sudo apt install xserver-xorg-video-intel-hwe-18.04
sudo apt install xserver-xorg-video-nouveau
sudo apt install xserver-xorg-video-nouveau-hwe-18.04
sudo apt install xserver-xorg-video-vmware
sudo apt install xserver-xorg-video-vesa
sudo apt install xserver-xorg-video-qxl

wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.198-focal.list https://packages.lunarg.com/vulkan/1.2.198/lunarg-vulkan-1.2.198-focal.list
sudo apt update
sudo apt install vulkan-sdk


encfs FUSE based filesystem (v1.7 had few high risk security vulnerability in 2014) alternative softwars are (CryFs, eCryptFs, VeraCrypt, GoCryptFs) 


###################################
# Hyper-V & Multipass & Microk8s  #
###################################

C:\ProgramData\Microsoft\Windows\Hyper-V\                      # this folder stores the VM configs. 
G:\Hyperv_paging\

C:\ProgramData\Microsoft\Windows\Hyper-V\
G:\Hyperv_paging\

C:\Users\Public\Documents\Hyper-V\Virtual Hard Disks\
G:\Hyperv_paging\Virtual Hard Disks\

C:\Windows\System32\config\systemprofile\AppData\Roaming\multipassd\vault\instances\primary\ubuntu-20.04-server-cloudimg-amd64.vhdx
G:\multipassd_vault\primary\ubuntu-20.04-server-cloudimg-amd64.vhdx


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                               
                                                                           

                                                                               End of the Document



